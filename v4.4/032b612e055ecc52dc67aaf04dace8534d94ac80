032b612e055e ("drm/i915: Remove update_sprite_watermarks.")
e8861675c5cc ("drm/i915: Kill off intel_crtc->atomic.wait_vblank, v6.")
33c8df893517 ("drm/i915: Unify power domain handling.")
74bff5f92740 ("drm/i915: Pass crtc state to modeset_get_crtc_power_domains.")
db168f117779 ("drm/i915: Remove intel_crtc->atomic.disable_ips.")
1eb52238a5f5 ("drm/i915/fbc: fix the FBC state checking code")
212890cfcd25 ("drm/i915/fbc: split intel_fbc_update into pre and post update")
aaf78d276ba0 ("drm/i915/fbc: introduce struct intel_fbc_state_cache")
fcf38d134983 ("drm/i915/fbc: unconditionally update FBC during atomic commits")
0dd81544c9dd ("drm/i915/fbc: don't use the frontbuffer tracking subsystem for flips")
ab34a7e8b55a ("drm/i915/fbc: replace frequent dev_priv->fbc.x with fbc->x")
b183b3f14395 ("drm/i915/fbc: introduce struct intel_fbc_reg_params")
44a8a257087b ("drm/i915/fbc: extract intel_fbc_can_enable()")
615b40d7e441 ("drm/i915/fbc: extract intel_fbc_can_activate()")
ca18d51d77eb ("drm/i915/fbc: wait for a vblank instead of 50ms when enabling")
1a617b77658e ("drm/i915: Keep track of the cdclk as if all crtc's were active.")
565602d7501a ("drm/i915: Do not acquire crtc state to check clock during modeset, v4.")
92826fcdfc14 ("drm/i915: Calculate watermark related members in the crtc_state, v4.")
ab1d3a0e5a44 ("drm/i915: Move disable_cxsr to the crtc_state.")
ee7d6cfa4b15 ("drm/i915: only recompress FBC after flushing a drawing operation")
559d9135835c ("drm/i915: kill fbc.uncompressed_size")
128d735606d4 ("drm/i915: use a single intel_fbc_work struct")
c5ecd4691c79 ("drm/i915: alloc/free the FBC CFB during enable/disable")
d029bcad6e41 ("drm/i915: introduce intel_fbc_{enable,disable}")
0e631adc1aef ("drm/i915: introduce is_active/activate/deactivate to the FBC terminology")
754d113304aa ("drm/i915: pass the crtc as an argument to intel_fbc_update()")
e9c5fd26ac38 ("drm/i915: set dev_priv->fbc.crtc before scheduling the enable work")
90d5234fdbcc ("drm/i915: fix the CFB size check")
9f836f9016ad ("drm/i915/gen9: Turn DC handling into a power well")
edd993fd1728 ("drm/i915: Remove DDI power domain exclusion SKL_DISPLAY_ALWAYS_ON_POWER_DOMAINS")
25f78f58e5bf ("drm/i915: Clean up AUX power domain handling")
13ae3a0d5b13 ("drm/i915/gen9: simplify DC toggling code")
4a76f295bc01 ("drm/i915/skl: don't toggle PW1 and MISC power wells on-demand")
73dfc227ff5c ("drm/i915/skl: init/uninit display core as part of the HW power domain state")
2f693e28b8df ("drm/i915: Make turning on/off PW1 and Misc I/O part of the init/fini sequences")
56fcfd6333a8 ("drm/i915: fix the power well ID for always on wells")
15e72c1fc118 ("drm/i915/gen9: Use flush_work to synchronize with dmc loader")
f4448375467d ("drm/i915/gen9: Use dev_priv in csr functions")
414b7999b8be ("drm/i915/gen9: Remove csr.state, csr_lock and related code.")
af5fead2d994 ("drm/i915/gen9: move assert_csr_loaded into intel_rpm.c")
ebae38d061df ("drm/i915/gen9: csr_init after runtime pm enable")
81b088ca87d7 ("drm/i915: Re-enable PCH FIO underrun reporting after pipe has been disabled")
37ca8d4ccd98 ("drm/i915: Enable PCH FIFO underruns later on ILK/SNB/IVB")
1a70a728959a ("drm/i915: Don't use intel_pipe_to_cpu_transcoder() when there's a pipe config around")
850bfaab7120 ("drm/i915: clarify that checking the FB stride for CFB is intentional")
e585feb0649e ("drm/i915: remove too-frequent FBC debug message")
b07ea0fae5e3 ("drm/i915: refactor FBC deactivation at init")
c68ae339e710 ("drm/i915: don't disable_fbc() if FBC is already disabled")
548043abaea4 ("drm/i915: fix the __intel_fbc_update() comments")
45b32a291978 ("drm/i915: use struct intel_crtc *crtc at __intel_fbc_update()")
