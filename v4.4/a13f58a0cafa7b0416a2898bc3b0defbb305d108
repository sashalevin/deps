a13f58a0cafa ("locking/refcount: Document interaction with PID_MAX_LIMIT")
dcb786493f3e ("locking/refcount: Improve performance of generic REFCOUNT_FULL code")
77e9971c79c2 ("locking/refcount: Move the bulk of the REFCOUNT_FULL implementation into the <linux/refcount.h> header")
7221762c48c6 ("locking/refcount: Remove unused refcount_*_checked() variants")
97a1420adf0c ("locking/refcount: Ensure integer operands are treated as signed")
23e6b169c991 ("locking/refcount: Define constants for saturation and max refcount values")
47b8f3ab9c49 ("refcount_t: Add ACQUIRE ordering on success for dec(sub)_and_test() variants")
ac180540b04d ("Revert "x86/refcount: Work around GCC inlining bug"")
851a4cd7cc11 ("Revert "x86/alternatives: Macrofy lock prefixes to work around GCC inlining bugs"")
ffb61c6346d0 ("Revert "x86/bug: Macrofy the BUG table section handling, to work around GCC inlining bugs"")
a4da3d86a285 ("Revert "x86/paravirt: Work around GCC inlining bugs when compiling paravirt ops"")
81a68455e795 ("Revert "x86/extable: Macrofy inline assembly code to work around GCC inlining bugs"")
c3462ba98683 ("Revert "x86/cpufeature: Macrofy inline assembly code to work around GCC inlining bugs"")
e769742d3584 ("Revert "x86/jump-labels: Macrofy inline assembly code to work around GCC inlining bugs"")
288e4521f0f6 ("x86/asm: 'Simplify' GEN_*_RMWcc() macros")
5bdcd510c2ac ("x86/jump-labels: Macrofy inline assembly code to work around GCC inlining bugs")
d5a581d84ae6 ("x86/cpufeature: Macrofy inline assembly code to work around GCC inlining bugs")
0474d5d9d2f7 ("x86/extable: Macrofy inline assembly code to work around GCC inlining bugs")
02678a582392 ("Merge branch 'core/core' into x86/build, to prevent conflicts")
