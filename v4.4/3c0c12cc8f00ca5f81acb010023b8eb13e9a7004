3c0c12cc8f00 ("mm/page_alloc.c: don't call kasan_free_pages() at deferred mem init")
c9e97a1997fb ("mm: initialize pages on demand during boot")
3c2c64884284 ("mm/page_alloc.c: fix typos in comments")
d135e5750205 ("mm/page_alloc.c: broken deferred calculation")
66e8b438bd5c ("mm/memblock.c: make the index explicit argument of for_each_memblock_type")
864b9a393dcb ("mm: consider memblock reservations for deferred memory initialization sizing")
06ad276ac187 ("mm, oom: do not enforce OOM killer for __GFP_NOFAIL automatically")
ba6c19fd113a ("include/linux/memblock.h: Clean up code for several trivial details")
29b52de182ac ("mm, kasan: fix to call kasan_free_pages() after poisoning page")
e2769dbdc51f ("mm, page_alloc: don't duplicate code in free_pcp_prepare")
4db7548ccbd9 ("mm, page_alloc: defer debugging checks of freed pages until a PCP drain")
da838d4fcba6 ("mm, page_alloc: pull out side effects from free_pages_check")
bb552ac6c6b4 ("mm, page_alloc: un-inline the bad part of free_pages_check")
7bfec6f47bb0 ("mm, page_alloc: check multiple page fields with a single branch")
f75fb889d18d ("mm, page_alloc: avoid unnecessary zone lookups during pageblock operations")
175145748d00 ("mm, page_alloc: use new PageAnonHead helper in the free page fast path")
d61f85903974 ("mm, page_alloc: only check PageCompound for high-order pages")
3da88fb3bacf ("mm, oom: move GFP_NOFS check to out_of_memory")
0a687aace3b8 ("mm,oom: do not loop !__GFP_FS allocation if the OOM killer is disabled")
987b3095c2a7 ("mm: meminit: initialise more memory for inode/dentry hash tables in early boot")
4b0f326163f0 ("include/linux/page-flags.h: force inlining of selected page flag modifications")
7cf91a98e607 ("mm/compaction: speed up pageblock_pfn_to_page() when zone is contiguous")
8823b1dbc05f ("mm/page_poison.c: enable PAGE_POISONING as a separate option")
4b94ffdc4163 ("x86, mm: introduce vmem_altmap to augment vmemmap_populate()")
9476df7d80df ("mm: introduce find_dev_pagemap()")
34c0fd540e79 ("mm, dax, pmem: introduce pfn_t")
b2e0d1625e19 ("dax: fix lifetime of in-kernel dax mappings with dax_map_atomic()")
fe683adabfe6 ("dax: guarantee page aligned results from bdev_direct_access()")
0e749e54244e ("dax: increase granularity of dax_clear_blocks() operations")
52db400fcd50 ("pmem, dax: clean up clear_pmem()")
9a982250f773 ("thp: introduce deferred_split_huge_page()")
e9b61f19858a ("thp: reintroduce split_huge_page()")
eef1b3ba053a ("thp: implement split_huge_pmd()")
53f9263baba6 ("mm: rework mapcount accounting to enable 4k mapping of THPs")
4b471e8898c3 ("mm, thp: remove infrastructure for handling splitting PMDs")
3ac808fdd2b8 ("mm, thp: remove compound_lock()")
ad0bed24e98b ("thp: drop all split_huge_page()-related code")
122afea9626a ("mm, vmstats: new THP splitting event")
78ddc5347341 ("thp: rename split_huge_page_pmd() to split_huge_pmd()")
6742d293cbe0 ("mm: adjust FOLL_SPLIT for new refcounting")
d281ee614518 ("rmap: add argument to charge compound page")
1c290f642101 ("mm: sanitize page->mapping for tail pages")
822cdd115226 ("page-flags: look at head page if the flag is encoded in page->mapping")
95ad97554ac8 ("page-flags: introduce page flags policies wrt compound pages")
0e6d31a7336f ("page-flags: move code around")
d8c1bdeb5d6b ("page-flags: trivial cleanup for PageTrans* helpers")
8c9c1701c7c2 ("mm/memblock: introduce for_each_memblock_type()")
5020e285856c ("mm, oom: give __GFP_NOFAIL allocations access to memory reserves")
eca56ff906bd ("mm, shmem: add internal shmem resident memory accounting")
b95f5f4391fa ("libnvdimm: convert to statically allocated badblocks")
