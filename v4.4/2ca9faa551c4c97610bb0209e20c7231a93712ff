2ca9faa551c4 ("drm/i915: Assert the engine is idle before overwiting the HWS")
ae351beb1f0e ("drm/i915: Combine reset_all_global_seqno() loops into one")
12d3173b2e55 ("drm/i915: Move reserve_seqno() next to unreserve_seqno()")
9b6586ae9f6b ("drm/i915: Keep a global seqno per-engine")
6ffb7d0756e3 ("drm/i915: Construct a request even if the GPU is currently hung")
c781c978e784 ("drm/i915: Add a sanity check that no request is submitted in the middle")
e8a9c58fcd9a ("drm/i915: Unify active context tracking between legacy/execlists/guc")
ef11c01db405 ("drm/i915: Move intel_lrc_context_pin() to avoid the forward declaration")
bf9e8429ab97 ("drm/i915: Make various init functions take dev_priv")
12d79d78287c ("drm/i915: Make GEM object create and create from data take dev_priv")
34ba5a80f249 ("drm/i915/guc: Split hw submission for replay after GPU reset")
4d357af49918 ("drm/i915/guc: Keep the execbuf client allocated across reset")
2d803c2de09e ("drm/i915/guc: Move guc_{send,recv}() to intel_uc.c")
a80bc45ff0cf ("drm/i915/guc: Drop guc2host/host2guc from names")
1618bdb89b5d ("drm/i915: Assert no external observers when unwind a failed request alloc")
4c266edb4c98 ("drm/i915: Rename i915_gem_timeline.next_seqno to .seqno")
9607ae79710a ("drm/i915/debugfs: Increment return value of gt.next_seqno")
793b61ea9f99 ("drm/i915: i915_gem_alloc_context_obj can be static")
d79651522e89 ("drm/i915: Enable i915 perf stream for Haswell OA unit")
8a3003dd93e2 ("drm/i915: Add 'render basic' Haswell OA unit config")
a941795a3aea ("drm/i915: rename OACONTROL GEN7_OACONTROL")
eec688e1420d ("drm/i915: Add i915 perf infrastructure")
e5e1fc47eac8 ("drm/i915: Use request retirement as context progress")
4302055b29cb ("drm/i915: Be more careful to drop the GT wakeref")
c6be607abcf7 ("drm/i915: dev_priv and a small cascade of cleanups in i915_gem.c")
20311bd35060 ("drm/i915/scheduler: Execute requests in order of priorities")
52e542090701 ("drm/i915/scheduler: Record all dependencies upon request construction")
663f71e73ffd ("drm/i915: Remove engine->execlist_lock")
d55ac5bf97c6 ("drm/i915: Defer transfer onto execution timeline to actual hw submission")
23902e49c999 ("drm/i915: Split request submit/execute phase into two")
6a5d1db98ef1 ("drm/i915: Spin until breadcrumb threads are complete")
d0da48cf9211 ("drm/i915: Remove chipset flush after cache flush")
24327f837f07 ("drm/i915: Remove two sloppy inline functions from .h")
5bd11a34e46a ("drm/i915: Avoid early GPU idling due to already pending idle work")
c8247c067159 ("drm/i915: Show the execlist queue in debugfs/i915_engine_info")
07c9a21a0d59 ("drm/i915: Export a function to flush the context upon pinning")
cb399eabc41a ("drm/i915: Avoid accessing request->timeline outside of its lifetime")
7d5d59e527b4 ("drm/i915: Use the full hammer when shutting down the rcu tasks")
80b204bce8f2 ("drm/i915: Enable multiple timelines")
f2d13290e327 ("drm/i915: Defer setting of global seqno on request to submission")
28176ef4cfa5 ("drm/i915: Reserve space in the global seqno during request allocation")
562f5d45508b ("drm/i915: Create a unique name for the context")
85e17f5974b3 ("drm/i915: Move the global sync optimisation to the timeline")
caddfe7192f5 ("drm/i915: Defer breadcrumb emission")
98f29e8d908f ("drm/i915: Record space required for breadcrumb emission")
9b81d556b11f ("drm/i915: Rename ->emit_request to ->emit_breadcrumb")
65e4760e3920 ("drm/i915: Introduce a global_seqno for each request")
4680816be336 ("drm/i915: Wait first for submission, before waiting for request completion")
3033acab07f9 ("drm/i915: Queue the idling context switch after all other timelines")
73cb97010d4f ("drm/i915: Combine seqno + tracking into a global timeline struct")
