b59c4830ca18 ("Revert "KVM: MMU: show mmu_valid_gen in shadow page related tracepoints"")
ac8d57e57343 ("kvm: x86: mmu: allow A/D bits to be disabled in an mmu")
ce00053b1cfc ("x86: kvm: mmu: dead code thanks to access tracking")
d3e328f2cb01 ("kvm: x86: mmu: Verify that restored PTE has needed perms in fast page fault")
312b616b30d8 ("kvm: x86: mmu: Set SPTE_SPECIAL_MASK within mmu.c")
f160c7b7bb32 ("kvm: x86: mmu: Lockless access tracking for Intel CPUs without EPT A bits.")
37f0e8fe6b10 ("kvm: x86: mmu: Do not use bit 63 for tracking special SPTEs")
83ef6c8155c0 ("kvm: x86: mmu: Refactor accessed/dirty checks in mmu_spte_update/clear")
97dceba29a6a ("kvm: x86: mmu: Fast Page Fault path retries")
ea4114bcd3a8 ("kvm: x86: mmu: Rename spte_is_locklessly_modifiable()")
114df303a7ee ("kvm: x86: reduce collisions in mmu_page_hash")
66d73e12f278 ("KVM: X86: MMU: no mmu_notifier_seq++ in kvm_age_hva")
c4f138b4514b ("mmu: don't pass *kvm to spte_write_protect and spte_*_dirty")
d95c55687e11 ("kvm: mmu: track read permission explicitly for shadow EPT page tables")
ffb128c89b77 ("kvm: mmu: don't set the present bit unconditionally")
8d5cf1610da5 ("kvm: mmu: extend the is_present check to 32 bits")
14f4760562e4 ("kvm: set page dirty only if page has been writable")
ba049e93aef7 ("kvm: rename pfn_t to kvm_pfn_t")
afd28fe1c901 ("KVM: x86: MMU: Remove is_rmap_spte() and use is_shadow_present_pte()")
029499b47738 ("KVM: x86: MMU: Make mmu_set_spte() return emulate value")
7ee0e5b29d27 ("KVM: x86: MMU: Remove unused parameter of __direct_map()")
018aabb56d61 ("KVM: x86: MMU: Encapsulate the type of rmap-chain head in a new struct")
0e3d0648bd90 ("KVM: x86: MMU: always set accessed bit in shadow PTEs")
