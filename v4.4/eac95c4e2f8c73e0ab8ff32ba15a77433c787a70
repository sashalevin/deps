eac95c4e2f8c ("drm/i915/atomic: Fixup kerneldoc")
6ebc69238df3 ("drm/i915/glk: Pass dev_priv to intel_atomic_setup_scalers()")
e3bddded40e2 ("drm/i915: Only recalculate wm's for planes part of the state, v2.")
d81f04c5ef5d ("drm/i915: Allow preservation of watermarks, v2.")
ed4a6a7ca853 ("drm/i915: Add two-stage ILK-style watermark programming (v11)")
e8861675c5cc ("drm/i915: Kill off intel_crtc->atomic.wait_vblank, v6.")
33c8df893517 ("drm/i915: Unify power domain handling.")
74bff5f92740 ("drm/i915: Pass crtc state to modeset_get_crtc_power_domains.")
db168f117779 ("drm/i915: Remove intel_crtc->atomic.disable_ips.")
274008e89d78 ("drm/i915/bxt: Check BIOS RC6 setup before enabling RC6")
1eb52238a5f5 ("drm/i915/fbc: fix the FBC state checking code")
212890cfcd25 ("drm/i915/fbc: split intel_fbc_update into pre and post update")
aaf78d276ba0 ("drm/i915/fbc: introduce struct intel_fbc_state_cache")
fcf38d134983 ("drm/i915/fbc: unconditionally update FBC during atomic commits")
0dd81544c9dd ("drm/i915/fbc: don't use the frontbuffer tracking subsystem for flips")
ab34a7e8b55a ("drm/i915/fbc: replace frequent dev_priv->fbc.x with fbc->x")
b183b3f14395 ("drm/i915/fbc: introduce struct intel_fbc_reg_params")
44a8a257087b ("drm/i915/fbc: extract intel_fbc_can_enable()")
615b40d7e441 ("drm/i915/fbc: extract intel_fbc_can_activate()")
ca18d51d77eb ("drm/i915/fbc: wait for a vblank instead of 50ms when enabling")
bf22045250fa ("Revert "drm/i915: Add two-stage ILK-style watermark programming (v10)"")
d890565c4444 ("drm/i915: Use the active wm config for merging on ILK-BDW")
396e33ae204f ("drm/i915: Add two-stage ILK-style watermark programming (v10)")
d93c03724610 ("drm/i915: Sanitize watermarks after hardware state readout (v4)")
1a617b77658e ("drm/i915: Keep track of the cdclk as if all crtc's were active.")
565602d7501a ("drm/i915: Do not acquire crtc state to check clock during modeset, v4.")
b268c699aca5 ("drm/i915: refactor RPM disabling due to RC6 being disabled")
92826fcdfc14 ("drm/i915: Calculate watermark related members in the crtc_state, v4.")
ab1d3a0e5a44 ("drm/i915: Move disable_cxsr to the crtc_state.")
ee7d6cfa4b15 ("drm/i915: only recompress FBC after flushing a drawing operation")
559d9135835c ("drm/i915: kill fbc.uncompressed_size")
128d735606d4 ("drm/i915: use a single intel_fbc_work struct")
c5ecd4691c79 ("drm/i915: alloc/free the FBC CFB during enable/disable")
d029bcad6e41 ("drm/i915: introduce intel_fbc_{enable,disable}")
0e631adc1aef ("drm/i915: introduce is_active/activate/deactivate to the FBC terminology")
754d113304aa ("drm/i915: pass the crtc as an argument to intel_fbc_update()")
e9c5fd26ac38 ("drm/i915: set dev_priv->fbc.crtc before scheduling the enable work")
90d5234fdbcc ("drm/i915: fix the CFB size check")
f0f59a00a1c9 ("drm/i915: Type safe register read/write")
0670c5a68812 ("drm/i915: Add 'offset' to uncore funcs")
8a74db7a86a5 ("drm/i915: Pull the vgpu uncore funcs apart from the rest of gen6+")
0d925ea02310 ("drm/i915: Wrap context LRI init in a macro")
35dc3f97a69b ("drm/i915: Give names to more ring registers")
9244a817019f ("drm/i915: Wrap ASSIGN_CTX_{PDP,PM4L} in do {} while(0)")
8f40db776adb ("drm/i915: Add wa_ctx_emit_reg()")
f92a9162208a ("drm/i915: Add functions to emit register offsets to the ring")
e597ef40457f ("drm/i915: Make the cmd parser 64bit regs explicit")
8697600b4046 ("drm/i915: Make the high dword offset more explicit in i915_reg_read_ioctl")
e6c4c763661d ("drm/i915: Parametrize MOCS registers")
6fa1c5f1a7c2 ("drm/i915: Parametrize L3 error registers")
