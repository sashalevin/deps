b1a819724074 ("pick_link(): check for WALK_TRAILING, not LOOKUP_PARENT")
8c4efe22e7c4 ("namei: invert the meaning of WALK_FOLLOW")
ad6cc4c338f4 ("finally fold get_link() into pick_link()")
06708adb99e8 ("merging pick_link() with get_link(), part 6")
b0417d2c7298 ("merging pick_link() with get_link(), part 5")
92d270165cff ("merging pick_link() with get_link(), part 4")
40fcf5a931af ("merging pick_link() with get_link(), part 3")
1ccac622f9da ("merging pick_link() with get_link(), part 2")
43679723d27f ("merging pick_link() with get_link(), part 1")
cbae4d12eeee ("fold handle_mounts() into step_into()")
aca2903eefd0 ("new step_into() flag: WALK_NOFOLLOW")
56676ec39019 ("step_into() callers: dismiss the symlink earlier")
20e343571cef ("lookup_fast(): take mount traversal into callers")
c153007b7b7a ("teach handle_mounts() to handle RCU mode")
b023e1728bec ("lookup_fast(): consolidate the RCU success case")
db3c9ade50b1 ("handle_mounts(): pass dentry in, turn path into a pure out argument")
e73cabff5917 ("do_last(): collapse the call of path_to_nameidata()")
da5ebf5aa676 ("lookup_open(): saner calling conventions (return dentry on success)")
239eb983383b ("atomic_open(): saner calling conventions (return dentry on success)")
bd7c4b508344 ("handle_mounts(): start building a sane wrapper for follow_managed()")
31d1726d7250 ("make build_open_flags() treat O_CREAT | O_EXCL as implying O_NOFOLLOW")
278121417a72 ("namei: LOOKUP_NO_SYMLINKS: block symlink resolution")
740a16782750 ("namei: allow set_root() to produce errors")
d41efb522e90 ("fs/namei.c: pull positivity check into follow_managed()")
4c4f7c19b3c7 ("vfs: use READ_ONCE() to access ->i_link")
30aba6656f61 ("namei: allow restricted O_CREAT of FIFOs and regular files")
d9a185f8b496 ("Merge tag 'ovl-update-4.19' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/vfs")
