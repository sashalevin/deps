63dc47da1f39 ("ASoC: soc-core: merge snd_soc_add_dai_link() and soc_bind_dai_link()")
237d19080cd3 ("ASoC: soc-core: remove topology specific operation")
71cb85f5e9da ("ASoC: soc-core: call snd_soc_register_dai() from snd_soc_register_dais()")
e443c20593de ("ASoC: soc-core: don't call snd_soc_dapm_new_dai_widgets() at snd_soc_register_dai()")
5d07519703bc ("ASoC: soc-core: have legacy_dai_naming at snd_soc_register_dai()")
e11381f38f34 ("ASoC: soc-core: add snd_soc_unregister_dai()")
3f6674ae13a1 ("ASoC: soc-core: move snd_soc_unregister_dais()")
daf7737335bf ("ASoC: soc-core: move snd_soc_register_dai()")
bc7a9091e5b9 ("ASoC: soc-core: add soc_unbind_dai_link()")
6b1dff0266a3 ("ASoC: soc-core: call soc_bind_dai_link() under snd_soc_add_dai_link()")
95b562e57f0b ("ASoC: soc-core: remove duplicated soc_is_dai_link_bound()")
bfce78a55965 ("ASoC: soc-core: tidyup soc_init_dai_link()")
36794902de1f ("ASoC: soc-core: move soc_init_dai_link()")
d8145989ff8c ("ASoC: soc-core: setup card->rtd_num at snd_soc_instantiate_card()")
50014499e6a4 ("ASoC: soc-core: use devm_xxx for component related resource")
7ce6088f6062 ("ASoC: soc-core: remove soc_remove_dai_links()")
753ace0a34fb ("ASoC: soc-core: call list_del(&rtd->list) at soc_free_pcm_runtime()")
a848125e320a ("ASoC: soc-core: merge soc_add_pcm_runtime() into soc_new_pcm_runtime()")
1c93a9e00e40 ("ASoC: soc-core: move soc_free_pcm_runtime()")
4ca47d21bf7a ("ASoC: soc-core: self contained soc_remove_link_dais()")
b006c0c6ed0d ("ASoC: soc-core: self contained soc_remove_link_components()")
6fb035502956 ("ASoC: soc-core: move soc_probe_link_components() position")
ffd60fba19d9 ("ASoC: soc-core: move soc_probe_component() position")
9a7c9fe1203e ("ASoC: soc-core: add soc_rtd_free()")
542694df7511 ("ASoC: soc-core: rename soc_post_component_init() to soc_rtd_init()")
495efdb01f89 ("ASoC: soc-core: initialize list at one place")
8d92bb516831 ("ASoC: soc-core: initialize component list")
c26a88411198 ("ASoC: soc-core: remove unneeded dai_link check from snd_soc_remove_dai_link()")
b03bfaec1d52 ("ASoC: soc-core: merge snd_soc_initialize_card_lists()")
daa480bde6b3 ("ASoC: soc-core: tidyup for snd_soc_dapm_add_routes()")
e6d7020c2946 ("ASoC: soc-core: tidyup for snd_soc_add_component_controls()")
b8ba3b572c70 ("ASoC: soc-core: tidyup for snd_soc_dapm_new_controls()")
5b99a0aad08a ("ASoC: soc-core: check return value of snd_soc_add_dai_link()")
6634e3d6ea8c ("ASoC: soc-core: add comment for for_each_xxx")
7951b1461185 ("ASoC: soc-component: move snd_soc_component_set_bias_level()")
8e2a990d76ac ("ASoC: soc-component: move snd_soc_component_stream_event()")
9d415fbf773f ("ASoC: soc-component: move snd_soc_component_seq_notifier()")
08e837dd9e39 ("ASoC: soc-component: add snd_soc_component_probe()")
e40fadbcef58 ("ASoC: soc-component: add snd_soc_component_is_suspended()")
9a840cbac77a ("ASoC: soc-component: add snd_soc_component_resume()")
66c51573b89d ("ASoC: soc-component: add snd_soc_component_suspend()")
5693d50c8302 ("ASoC: soc-component: add snd_soc_component_trigger()")
eae7136aa208 ("ASoC: soc-component: add snd_soc_component_hw_free()")
245c539a1206 ("ASoC: soc-component: add snd_soc_component_hw_params()")
6d53723380ed ("ASoC: soc-component: add snd_soc_component_prepare()")
3672beb8cad6 ("ASoC: soc-component: add snd_soc_component_close()")
ae2f4849286e ("ASoC: soc-component: add snd_soc_component_open()")
4a81e8f30d0b ("ASoC: soc-component: add snd_soc_component_get/put()")
4ff1fef10f35 ("ASoC: add soc-component.c")
06f6e1d41427 ("ASoC: add soc-dai.c")
