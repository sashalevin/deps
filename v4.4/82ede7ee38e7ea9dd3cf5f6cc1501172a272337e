82ede7ee38e7 ("mm/memcontrol.c: fix bad line in comment")
230671533d64 ("mm: memory.low hierarchical behavior")
bbec2e15170a ("mm: rename page_counter's count/limit into usage/max")
c054a78c66c7 ("memcg: refactor mem_cgroup_resize_limit()")
63677c745d63 ("mm, memcg: reset memory.low during memcg offlining")
34c810579273 ("mm/memcontrol: exclude @root from checks in mem_cgroup_low")
7c5f64f84483 ("mm: oom: deduplicate victim selection code for memcg and global oom")
55779ec759cc ("mm: fix vm-scalability regression in cgroup-aware workingset code")
a373966d1f64 ("mm, oom: hide mm which is shared with kthread or global init")
1af8bb432695 ("mm, oom: fortify task_will_free_mem()")
fbe84a09da74 ("mm,oom: remove unused argument from oom_scan_process_thread().")
2a966b77ae3e ("mm: oom: add memcg to oom_control")
cbdcf7f78900 ("mm, oom_reaper: do not use siglock in try_oom_reaper()")
edd9f7230f59 ("mm: oom: do not reap task if there are live threads in threadgroup")
1ebab2db065e ("memcg: fix mem_cgroup_out_of_memory() return value.")
297880f4af4e ("mm, hugetlb_cgroup: round limit_in_bytes down to hugepage size")
f44666b04605 ("mm,oom: speed up select_bad_process() loop")
98748bd72200 ("oom: consider multi-threaded tasks in task_will_free_mem")
3ef22dfff239 ("oom, oom_reaper: try to reap tasks which skip regular OOM killer path")
aaf4fb712b83 ("include/linux/oom.h: remove undefined oom_kills_count()/note_oom_kill()")
bc448e897b6d ("mm, oom_reaper: report success/failure")
36324a990cf5 ("oom: clear TIF_MEMDIE after oom_reaper managed to unmap the address space")
aac453635549 ("mm, oom: introduce oom reaper")
b6e6edcfa405 ("mm: memcontrol: reclaim and OOM kill when shrinking memory.max below usage")
d334c9bcb4ae ("mm: memcontrol: cleanup css_reset callback")
fe896d187894 ("mm: introduce page reference manipulation functions")
b313aeee2509 ("mm: memcontrol: enable kmem accounting for all cgroups in the legacy hierarchy")
6a618957ad17 ("mm: oom_kill: don't ignore oom score on exiting tasks")
8df651c7059e ("thp: cleanup split_huge_page()")
62cccb8c8e7a ("mm: simplify lock_page_memcg()")
6a93ca8fde3c ("mm: migrate: do not touch page->mem_cgroup of live pages")
23047a96d7cf ("mm: workingset: per-cgroup cache thrash detection")
612e44939c3c ("mm: workingset: eviction buckets for bigmem/lowbit machines")
162453bfbdf4 ("mm: workingset: separate shadow unpacking and refault calculation")
689c94f03ae2 ("mm: workingset: #define radix entry eviction mask")
81f8c3a461d1 ("mm: memcontrol: generalize locking for the page->mem_cgroup binding")
3e24b19dd5ff ("Documentation: cgroup: add memory.swap.{current,max} description")
5ccc5abaaf6f ("mm: free swap cache aggressively if memcg swap is full")
d8b38438a0bc ("mm: vmscan: do not scan anon pages if memcg swap limit is hit")
6f2cb2f17700 ("swap.h: move memcg related stuff to the end of the file")
eb01aaab4308 ("mm: memcontrol: replace mem_cgroup_lruvec_online with mem_cgroup_online")
37e84351198b ("mm: memcontrol: charge swap to cgroup2")
0b8f73e10428 ("mm: memcontrol: clean up alloc, online, offline, free functions")
0db1529817b7 ("mm: memcontrol: flatten struct cg_proto")
d886f4e483ce ("mm: memcontrol: rein in the CONFIG space madness")
d55f90bfab40 ("net: drop tcp_memcontrol.c")
489c2a20a414 ("mm: memcontrol: introduce CONFIG_MEMCG_LEGACY_KMEM")
04823c833b3e ("mm: memcontrol: allow to disable kmem accounting for cgroup2")
52c29b04823c ("mm: memcontrol: account "kmem" consumers in cgroup2 memory controller")
127424c86bb6 ("mm: memcontrol: move kmem accounting code to CONFIG_MEMCG")
