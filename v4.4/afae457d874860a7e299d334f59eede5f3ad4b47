afae457d8748 ("afs: Fix missing error handling in afs_write_end()")
e8e581a88c5f ("afs: Handle a short write to an AFS page")
6db3ac3c4bc5 ("afs: Handle better the server returning excess or short data")
196ee9cd2d04 ("afs: Make afs_fs_fetch_data() take a list of pages")
233c9edcca01 ("afs: unmapping the wrong buffer")
d001648ec7cf ("rxrpc: Don't expose skbs to in-kernel users [ver #2]")
4de48af663d8 ("rxrpc: Pass struct socket * to more rxrpc kernel interface functions")
8324f0bcfbfc ("rxrpc: Provide a way for AFS to ask for the peer address of a call")
378c9c9603a4 ("afs: Miscellaneous simple cleanups")
f5c17aaeb2ae ("rxrpc: Calls should only have one terminal state")
ccbd3dbe85e1 ("rxrpc: Fix a potential NULL-pointer deref in rxrpc_abort_calls")
45025bceef17 ("rxrpc: Improve management and caching of client connection objects")
4d028b2c8299 ("rxrpc: Dup the main conn list for the proc interface")
df5d8bf70f64 ("rxrpc: Make /proc/net/rxrpc_calls safer")
18bfeba50dfd ("rxrpc: Perform terminal call ACK/ABORT retransmission from conn processor")
563ea7d5d4ea ("rxrpc: Calculate serial skew on packet reception")
f51b4480021c ("rxrpc: Set connection expiry on idle, not put")
df844fd46b98 ("rxrpc: Use a tracepoint for skb accounting debugging")
01a90a459850 ("rxrpc: Drop channel number field from rxrpc_call struct")
dabe5a790655 ("rxrpc: Tidy up the rxrpc_call struct a bit")
50fd85a1f947 ("rxrpc: Fix a use-after-push in data_ready handler")
2e7e9758b2b6 ("rxrpc: Once packet posted in data_ready, don't retry posting")
372ee16386bb ("rxrpc: Fix races between skb free, ACK generation and replying")
d440a1ce5d2c ("rxrpc: Kill off the call hash table")
8496af50eb38 ("rxrpc: Use RCU to access a peer's service connection tree")
1291e9d10845 ("rxrpc: Move data_ready peer lookup into rxrpc_find_connection()")
e8d70ce177ee ("rxrpc: Prune the contents of the rxrpc_conn_proto struct")
001c11224910 ("rxrpc: Maintain an extra ref on a conn for the cache list")
d991b4a32f65 ("rxrpc: Move peer lookup from call-accept to new-incoming-conn")
7877a4a4bdf0 ("rxrpc: Split service connection code out into its own file")
c6d2b8d764f5 ("rxrpc: Split client connection code out into its own file")
a1399f8bb033 ("rxrpc: Call channels should have separate call number spaces")
dee46364ce6f ("rxrpc: Add RCU destruction for connections and calls")
e653cfe49cec ("rxrpc: Release a call's connection ref on call disconnection")
2c4579e4b1d5 ("rxrpc: Move usage count getting into rxrpc_queue_conn()")
eb9b9d22754d ("rxrpc: Check that the client conns cache is empty before module removal")
bba304db34ec ("rxrpc: Turn connection #defines into enums and put outside struct def")
5acbee464878 ("rxrpc: Provide queuing helper functions")
a263629da519 ("rxrpc: Avoid using stack memory in SG lists in rxkad")
689f4c646d6a ("rxrpc: Check the source of a packet to a client conn")
88b99d0b7af8 ("rxrpc: Fix some sparse errors")
aa390bbe2113 ("rxrpc: Kill off the rxrpc_transport struct")
999b69f89241 ("rxrpc: Kill the client connection bundle concept")
5627cc8b961e ("rxrpc: Provide more refcount helper functions")
985a5c824a52 ("rxrpc: Make rxrpc_send_packet() take a connection not a transport")
f4e7da8cde87 ("rxrpc: Calls displayed in /proc may in future lack a connection")
4a3388c8033e ("rxrpc: Use IDR to allocate client conn IDs on a machine-wide basis")
b3f575043fcd ("rxrpc: rxrpc_connection_lock shouldn't be a BH lock, but conn_lock is")
42886ffe77f1 ("rxrpc: Pass sk_buff * rather than rxrpc_host_header * to functions")
cc8feb8edd92 ("rxrpc: Fix exclusive connection handling")
