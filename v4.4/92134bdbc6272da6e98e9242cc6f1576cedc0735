92134bdbc627 ("intel_pstate: use MSR_ATOM_RATIOS definitions from msr-index.h")
001c76f05b01 ("cpufreq: intel_pstate: Generic governors support")
d0ea59e18894 ("cpufreq: intel_pstate: Request P-states control from SMM if needed")
eae48f046ffa ("cpufreq: intel_pstate: Per CPU P-State limits")
2f1d407adab0 ("cpufreq: intel_pstate: Always set max P-state in performance mode")
a6c6ead14183 ("cpufreq: intel_pstate: Set P-state upfront in performance mode")
f9f4872df6e1 ("cpufreq: intel_pstate: Fix unsafe HWP MSR access")
bc95a454b6dc ("intel_pstate: Update cpu_frequency tracepoint every time")
4a7cb7a96aa3 ("intel_pstate: Declare pid_params/pstate_funcs/hwp_active __read_mostly")
eed436095e62 ("intel_pstate: Fix incorrect placement of __initdata")
2c2c1af44975 ("cpufreq: intel_pstate: Fix code ordering in intel_pstate_set_policy()")
c749c64f45fa ("intel_pstate: Simplify conditional in intel_pstate_set_policy()")
3be9200d512b ("cpufreq: intel_pstate: Adjust policy->max")
9522a2ff9cde ("cpufreq: intel_pstate: Enforce _PPC limits")
4836df173aae ("intel_pstate: Use pr_fmt")
22590efb98ae ("intel_pstate: Avoid pointless FRAC_BITS shifts under div_fp()")
4b42fafc1cdc ("Merge branch 'pm-cpufreq-sched' into pm-cpufreq")
