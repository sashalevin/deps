562019695119 ("perf: Make perf_event_output() propagate the output() return")
79ef68c7e1f6 ("perf augmented_syscalls: Start collecting pathnames in the BPF program")
febf8a3712e4 ("perf examples bpf: Start augmenting raw_syscalls:sys_{start,exit}")
7538d16397df ("perf augmented_syscalls: Avoid optimization to pass older BPF validators")
21d7eb9a2473 ("perf augmented_syscalls: Check probe_read_str() return separately")
f5b076dc01e7 ("perf trace augmented_syscalls: Hook into syscalls:sys_exit_SYSCALL too")
24a6c2cd1dbd ("perf trace augmented_syscalls: Add augmented_sockaddr_syscall_enter()")
d5a7e6613b00 ("perf trace augmented_syscalls: Augment connect's 'sockaddr' arg")
9ab5aadebedd ("perf trace: Add a etcsnoop.c augmented syscalls eBPF utility")
16cc63593f67 ("perf trace: Augment 'newstat' (aka 'stat') filename ptr")
f6618ce6c024 ("perf trace: Introduce augmented_filename_syscall_enter() declarator")
9779fc021410 ("perf trace: Augment inotify_add_watch pathname syscall arg")
daa1284af3b9 ("perf trace: Augment the 'open' syscall 'filename' arg")
75d1e30681d0 ("perf trace: Use the augmented filename, expanding syscall enter pointers")
6ccc18a9a17a ("perf trace: Make the augmented_syscalls filter out the tracepoint event")
e0b6d2ef3290 ("perf trace: Handle "bpf-output" events associated with "__augmented_syscalls__" BPF map")
03aeb6c818b6 ("perf trace beauty: Add beautifiers for 'socket''s 'protocol' arg")
933151013564 ("perf/core: Move inline keyword at the beginning of declaration")
9ea42ba4411a ("perf trace: Support setting cgroups as targets")
283ca526a9bd ("bpf: fix corruption on concurrent perf_event_output calls")
5bbcc0f595fa ("Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next")
