aa5266023141 ("perf bpf: Return NULL when RB tree lookup fails in perf_env__find_bpf_prog_info()")
e4378f0cb90b ("perf bpf: Save bpf_prog_info in a rbtree in perf_env")
e5416950454f ("perf bpf: Make synthesize_bpf_events() receive perf_session pointer instead of perf_tool")
a742258af131 ("perf bpf: Synthesize bpf events with bpf_program__get_prog_info_linear()")
71184c6ab7e6 ("perf record: Replace option --bpf-event with --no-bpf-event")
811184fb6977 ("perf bpf: Fix synthesized PERF_RECORD_KSYMBOL/BPF_EVENT")
a40b95bcd30c ("perf top: Synthesize BPF events for pre-existing loaded BPF programs")
7b612e291a5a ("perf tools: Synthesize PERF_RECORD_* for loaded BPF programs")
45178a928a4b ("perf tools: Handle PERF_RECORD_BPF_EVENT")
9aa0bfa370b2 ("perf tools: Handle PERF_RECORD_KSYMBOL")
16c66bc167cc ("perf top: Add processing thread")
d24e3c98ac11 ("perf top: Save and display the lost count stats")
b8494f1df875 ("perf ordered_events: Rework show_progress for __ordered_events__flush")
218d61110f69 ("perf top: Do not use overwrite mode by default")
4e303fbe2d95 ("perf top: Allow disabling the overwrite mode")
cf7905165fee ("perf record: Encode -k clockid frequency into Perf trace")
a8ce99b0ee9a ("perf machine: Synthesize and process mmap events for x86 PTI entry trampolines")
1c5aae7710bb ("perf machine: Create maps for x86 PTI entry trampolines")
5759a6820aad ("perf machine: Allow for extra kernel maps")
4d99e4136580 ("perf machine: Workaround missing maps for x86 PTI entry trampolines")
dbbd34a666ee ("perf machine: Add machine__is() to identify machine arch")
dce0478b5fa0 ("perf map: Remove enum_type arg to map_groups__first()")
abe5449d2de6 ("perf map: Shorten map_groups__find() signature")
68a741868a06 ("perf machine: Introduce machine__kernel_maps()")
e94b861a2315 ("perf map: Introduce map__has_symbols()")
d88205db9caa ("perf dso: Add dso__has_symbols() method")
68766bfa5647 ("perf top: Use __map__is_kernel()")
ee05d21791db ("perf machine: Set main kernel end address properly")
e2091cedd51b ("perf tools: Add MEM_TOPOLOGY feature to perf data file")
b9bae2c841b7 ("perf mmap: Simplify perf_mmap__read_init()")
0019dc87b928 ("perf mmap: Simplify perf_mmap__read_event()")
d6ace3df4304 ("perf mmap: Simplify perf_mmap__consume()")
bdec8b2f7eed ("perf mmap: Use stored 'overwrite' in perf_mmap__consume()")
b9de0f6e507b ("perf mmap: Use the stored data in perf_mmap__read_event()")
07a9461da672 ("perf mmap: Use the stored scope data in perf_mmap__push()")
4fda3459e3c2 ("perf mmap: Store mmap scope in struct perf_mmap()")
2c5f6d876b4e ("perf evlist: Store 'overwrite' in struct perf_mmap")
759487307625 ("perf test: Switch to new perf_mmap__read_event() interface for task-exit")
ee4024ff8582 ("perf test: Switch to new perf_mmap__read_event() interface for switch-tracking")
5d0007cdfc66 ("perf test: Switch to new perf_mmap__read_event() interface for sw-clock")
9dfb85dfaffe ("perf test: Switch to new perf_mmap__read_event() interface for time-to-tsc")
88e37a4bbe6e ("perf test: Switch to new perf_mmap__read_event() interface for perf-record")
1d1b5632ed0b ("perf test: Switch to new perf_mmap__read_event() interface for tp fields")
334f823e2ab5 ("perf test: Switch to new perf_mmap__read_event() interface for mmap-basic")
693d32aebf85 ("perf test: Switch to new perf_mmap__read_event() interface for "keep tracking" test")
00fc2460e735 ("perf test: Switch to new perf_mmap__read_event() interface for 'code reading' test")
2f54f3a4733c ("perf test: Switch to new perf_mmap__read_event() interface for bpf")
35b7cdc6379e ("perf python: Switch to new perf_mmap__read_event() interface")
d7f55c62e634 ("perf trace: Switch to new perf_mmap__read_event() interface")
53172f9057e9 ("perf kvm: Switch to new perf_mmap__read_event() interface")
