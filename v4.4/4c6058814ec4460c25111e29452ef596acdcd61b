4c6058814ec4 ("mm: factor out next_present_section_nr()")
3f1353552e25 ("mm/page_alloc: skip non present sections on zone initialization")
2491f0a2c0b1 ("mm: section numbers use the type "unsigned long"")
1811582587c4 ("drivers/base/memory: pass a block_id to init_memory_block()")
3b6fd6ffb27c ("drivers/base/memory.c: remove an unnecessary check on NR_MEM_SECTIONS")
a9a9e77fbf27 ("mm: move mirrored memory specific code outside of memmap_init_zone")
d3035be4ce23 ("mm: calculate deferred pages after skipping mirrored memory")
d483da5bc78b ("mm: create non-atomic version of SetPageReserved for init use")
03e85f9d5f1f ("mm/page_alloc: Introduce free_area_init_core_hotplug")
0188dc98ad5c ("mm/page_alloc: inline function to handle CONFIG_DEFERRED_STRUCT_PAGE_INIT")
7cc2a9596d77 ("mm: remove __paginginit")
c1093b746c05 ("mm: access zone->node via zone_to_nid() and zone_set_nid()")
ace1db39768c ("mm/page_alloc.c: move ifdefery out of free_area_init_core")
d538c164fc01 ("mm/sparse.c: check __highest_present_section_nr only for a present section")
e69438596bb3 ("mm/page_alloc: remove realsize in free_area_init_core()")
d883c6cf3b39 ("Revert "mm/cma: manage the memory of the CMA area by using the ZONE_MOVABLE"")
6f84f8d1587f ("xen, mm: allow deferred page initialization for xen pv domains")
bad8c6c0b114 ("mm/cma: manage the memory of the CMA area by using the ZONE_MOVABLE")
bc8755ba6632 ("mm: check __highest_present_section_nr directly in memory_dev_init()")
a5c6d6509342 ("mm, page_alloc: extend kernelcore and movablecore for percent")
d0dc12e86b31 ("mm/memory_hotplug: optimize memory hotplug")
c9e97a1997fb ("mm: initialize pages on demand during boot")
f59f1caf72ba ("Revert "mm: page_alloc: skip over regions of invalid pfns where possible"")
3e04040df6d4 ("Revert "mm/page_alloc: fix memmap_init_zone pageblock alignment"")
379b03b7fa05 ("mm/memblock.c: hardcode the end_pfn being -1")
3ff1b28caaff ("Merge tag 'libnvdimm-for-4.16' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm")
