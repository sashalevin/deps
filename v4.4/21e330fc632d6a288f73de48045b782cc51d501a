21e330fc632d ("mm: swap: memcg: fix memcg stats for huge pages")
5d91f31faf8e ("mm: swap: fix vmstats for huge pages")
fbbb602e40c2 ("mm: deactivations shouldn't bias the LRU balance")
1431d4d11abb ("mm: base LRU balancing on an explicit cost model")
968246874739 ("mm: remove use-once cache bias from LRU balancing")
497a6c1b0990 ("mm: keep separate anon and file statistics on page reclaim activity")
5df741963d52 ("mm: fix LRU balancing effect of new transparent huge pages")
9de4f22a60f7 ("mm: code cleanup for MADV_FREE")
1da2f328fa64 ("mm,thp,compaction,cma: allow THP migration for CMA allocations")
3d680bdf60a5 ("mm/page_isolation: fix potential warning from user")
4a55c0474a92 ("mm/hotplug: silence a lockdep splat with printk()")
fe4c86c916d9 ("mm: remove "count" parameter from has_unmovable_pages()")
3f9903b9ca5e ("mm: remove the memory isolate notifier")
5b57b8f22709 ("mm/debug.c: always print flags in dump_page()")
1b05117df78e ("mm: vmscan: harmonize writeback congestion tracking for nodes & memcgs")
0f6a5cff43d3 ("mm: vmscan: split shrink_node() into node part and memcgs part")
d2af339706be ("mm: vmscan: replace shrink_node() loop with a retry jump")
b5ead35e7e1d ("mm: vmscan: naming fixes: global_reclaim() and sane_reclaim()")
f87bccde6a7d ("mm/vmscan: remove unused lru_pages argument")
756d25be457f ("mm/page_isolation.c: convert SKIP_HWPOISON to MEMORY_OFFLINE")
6855ac4acd3b ("mm/debug.c: PageAnon() is true for PageKsm() pages")
76a1850e4572 ("mm/debug.c: __dump_page() prints an extra line")
9783aa9917f8 ("mm, memcg: proportional memory.{low,min} reclaim")
9c276cc65a58 ("mm: introduce MADV_COLD")
0a432dcbeb32 ("mm: shrinker: make shrinker not depend on memcg kmem")
5ee04716c46c ("mm, reclaim: cleanup should_continue_reclaim()")
1c6c15971e47 ("mm, reclaim: make should_continue_reclaim perform dryrun detection")
1ba6fc9af35b ("mm: vmscan: do not share cgroup iteration between reclaimers")
e7a1aaf28770 ("mm: replace list_move_tail() with add_page_to_lru_list_tail()")
d8c6546b1aea ("mm: introduce compound_nr()")
a50b854e073c ("mm: introduce page_size()")
28360f398778 ("mm, vmscan: do not special-case slab reclaim when watermarks are boosted")
dd625285910d ("drivers/base/memory.c: get rid of find_memory_block_hinted()")
ea8846411ad6 ("mm/memory_hotplug: move and simplify walk_memory_blocks()")
fbcf73ce6582 ("mm/memory_hotplug: rename walk_memory_range() and pass start+size instead of pfns")
90ec010fe0d6 ("drivers/base/memory: use "unsigned long" for block ids")
2491f0a2c0b1 ("mm: section numbers use the type "unsigned long"")
4c4b7f9ba948 ("mm/memory_hotplug: remove memory block devices before arch_remove_memory()")
db051a0dac13 ("mm/memory_hotplug: create memory block devices after arch_add_memory()")
80ec922dbd87 ("mm/memory_hotplug: allow arch_remove_memory() without CONFIG_MEMORY_HOTREMOVE")
1811582587c4 ("drivers/base/memory: pass a block_id to init_memory_block()")
22eb634632a2 ("arm64/mm: add temporary arch_remove_memory() implementation")
eca499ab3749 ("mm/hotplug: make remove_memory() interface usable")
1732d2b0117c ("mm/vmscan.c: add checks for incorrect handling of current->reclaim_state")
0308f7cf19c9 ("mm/vmscan.c: calculate reclaimed slab caches in all reclaim paths")
e5ca8071fe65 ("mm/vmscan.c: add a new member reclaim_state in struct shrink_control")
98879b3b9edc ("mm: vmscan: correct some vmscan counters for THP swapout")
aa712399c1e8 ("mm/gup: speed up check_and_migrate_cma_pages() on huge page")
a58f2cef26e1 ("mm/vmscan.c: fix trying to reclaim unevictable LRU page")
b17f18aff287 ("mm/vmscan.c: fix recent_rotated history")
