8f709dbdf9ff ("mm/page_alloc: duplicate include linux/vmalloc.h")
121e6f3258fe ("mm/vmalloc: hugepage vmalloc mappings")
4f6ec8602341 ("mm/vmalloc: separate put pages and flush VM flags")
ba8f3587f556 ("init/main: fix broken buffer_init when DEFERRED_STRUCT_PAGE_INIT set")
34fe653716b0 ("mm/vmalloc.c:__vmalloc_area_node(): avoid 32-bit overflow")
f255935b9767 ("mm: cleanup the gfp_mask handling in __vmalloc_area_node")
b944afc9d64d ("mm: add a VM_MAP_PUT_PAGES flag for vmap")
4aab2be09830 ("mm: khugepaged: recalculate min_free_kbytes after memory hotplug as expected by khugepaged")
e44431498f5f ("mm: parallelize deferred_init_memmap()")
89c7c4022dfc ("mm: don't track number of pages during deferred initialization")
da97f2d56bbd ("mm: call cond_resched() from deferred_init_memmap()")
117003c32771 ("mm/pagealloc.c: call touch_nmi_watchdog() on max order boundaries in deferred init")
2ba3e6947aed ("mm/vmalloc: track which page-table levels were modified")
f38fcb9c1c5e ("mm: remove the prot argument to __vmalloc_node")
88dca4ca5a93 ("mm: remove the pgprot argument to __vmalloc")
ed1f324c5fed ("mm: remove map_vm_range")
60bb44652a0d ("mm: don't return the number of pages from map_kernel_range{,_noflush}")
a29adb6209ce ("mm: rename vmap_page_range to map_kernel_range")
b521c43f58e5 ("mm: remove vmap_page_range_noflush and vunmap_page_range")
78a0e8c4837f ("mm: pass addr as unsigned long to vb_free")
b607e6d17db5 ("mm: only allow page table mappings for built-in zsmalloc")
8f87cc9386dc ("mm: unexport unmap_kernel_range_noflush")
8f87cc9386dc ("mm: unexport unmap_kernel_range_noflush")
8f87cc9386dc ("mm: unexport unmap_kernel_range_noflush")
8f87cc9386dc ("mm: unexport unmap_kernel_range_noflush")
8f87cc9386dc ("mm: unexport unmap_kernel_range_noflush")
8f87cc9386dc ("mm: unexport unmap_kernel_range_noflush")
8f87cc9386dc ("mm: unexport unmap_kernel_range_noflush")
8f87cc9386dc ("mm: unexport unmap_kernel_range_noflush")
8f87cc9386dc ("mm: unexport unmap_kernel_range_noflush")
