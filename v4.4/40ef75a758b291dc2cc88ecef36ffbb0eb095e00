40ef75a758b2 ("KVM/MMU: Add tlb flush with range helper function")
e7912386ede8 ("KVM: x86: reintroduce pte_list_remove, but including mmu_spte_clear_track_bits")
dcdca5fed5f6 ("x86: kvm: mmu: make spte mmio mask more explicit")
312b616b30d8 ("kvm: x86: mmu: Set SPTE_SPECIAL_MASK within mmu.c")
f160c7b7bb32 ("kvm: x86: mmu: Lockless access tracking for Intel CPUs without EPT A bits.")
37f0e8fe6b10 ("kvm: x86: mmu: Do not use bit 63 for tracking special SPTEs")
83ef6c8155c0 ("kvm: x86: mmu: Refactor accessed/dirty checks in mmu_spte_update/clear")
97dceba29a6a ("kvm: x86: mmu: Fast Page Fault path retries")
ea4114bcd3a8 ("kvm: x86: mmu: Rename spte_is_locklessly_modifiable()")
114df303a7ee ("kvm: x86: reduce collisions in mmu_page_hash")
66d73e12f278 ("KVM: X86: MMU: no mmu_notifier_seq++ in kvm_age_hva")
d95c55687e11 ("kvm: mmu: track read permission explicitly for shadow EPT page tables")
ffb128c89b77 ("kvm: mmu: don't set the present bit unconditionally")
8d5cf1610da5 ("kvm: mmu: extend the is_present check to 32 bits")
127393fbe597 ("mm: thp: kvm: fix memory corruption in KVM with THP enabled")
14f4760562e4 ("kvm: set page dirty only if page has been writable")
92f94f1e9e50 ("KVM: MMU: rename has_wrprotected_page to mmu_gfn_lpage_is_disallowed")
d8c1bdeb5d6b ("page-flags: trivial cleanup for PageTrans* helpers")
74c4e63ab9b5 ("KVM: x86: MMU: Use for_each_rmap_spte macro instead of pte_list_walk()")
afd28fe1c901 ("KVM: x86: MMU: Remove is_rmap_spte() and use is_shadow_present_pte()")
018aabb56d61 ("KVM: x86: MMU: Encapsulate the type of rmap-chain head in a new struct")
0e3d0648bd90 ("KVM: x86: MMU: always set accessed bit in shadow PTEs")
