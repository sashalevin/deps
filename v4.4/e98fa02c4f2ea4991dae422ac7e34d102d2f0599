e98fa02c4f2e ("sched/fair: Eliminate bandwidth race between throttling and distribution")
de53fd7aedb1 ("sched/fair: Fix low cpu usage with high throttling by removing expiration of cpu-local slices")
43e9f7f231e4 ("sched/fair: Start tracking SCHED_IDLE tasks count in cfs_rq")
c0ad4aa4d841 ("sched/fair: Robustify CFS-bandwidth timer locking")
b5c0ce7bd184 ("sched/fair: Add lsub_positive() and use it consistently")
92a801e5d5b7 ("sched/fair: Mask UTIL_AVG_UNCHANGED usages")
c469933e7721 ("sched/fair: Fix cpu_util_wake() for 'execl' type workloads")
baa9be4ffb55 ("sched/fair: Fix throttle_list starvation with low CFS quota")
3482d98bbc73 ("sched/util_est: Fix util_est_dequeue() for throttled cfs_rq")
f1d1be8aee6c ("sched/fair: Advance global expiration when period timer is restarted")
512ac999d275 ("sched/fair: Fix bandwidth timer clock drift condition")
c976a862ba48 ("sched/fair: Avoid calling sync_entity_load_avg() unnecessarily")
f1d88b446818 ("sched/fair: Rearrange select_task_rq_fair() to optimize it")
d519329f72a6 ("sched/fair: Update util_est only on util_avg updates")
f9be3e5961c5 ("sched/fair: Use util_est in LB and WU paths")
7f65ea42eb00 ("sched/fair: Add util_est on top of PELT")
97fb7a0a8944 ("sched: Clean up and harmonize the coding style of the scheduler code base")
dcdedb24159b ("sched/nohz: Remove the 1 Hz tick code")
d84b31313ef8 ("sched/isolation: Offload residual 1Hz scheduler tick")
7ebb66a12f85 ("sched/fair: Avoid an unnecessary lookup of current CPU ID during wake_affine")
32e839dda3ba ("sched/fair: Use a recently used CPU as an idle candidate and the basis for SIS")
3b76c4a33959 ("sched/fair: Restructure wake_affine*() to return a CPU id")
89a55f56fd1c ("sched/fair: Remove unnecessary parameters from wake_affine_idle()")
2ed41a55023d ("sched/core: Optimize update_stats_*()")
b85c8b71bf8d ("sched/core: Optimize ttwu_stat()")
70216e18e519 ("membarrier: Provide core serializing command, *_SYNC_CORE")
c5f58bd58f43 ("membarrier: Provide GLOBAL_EXPEDITED command")
306e060435d7 ("membarrier: Document scheduler barrier requirements")
3ccfebedd8cf ("powerpc, membarrier: Skip memory barrier in switch_mm()")
d18be45dbfef ("sched/cpufreq: Split utilization signals")
794a56ebd9a5 ("sched/cpufreq: Change the worker kthread to SCHED_DEADLINE")
d4edd662ac16 ("sched/cpufreq: Use the DEADLINE utilization signal")
34be39305a77 ("sched/deadline: Implement "runtime overrun signal" support")
7332dec055f2 ("sched/fair: Only immediately migrate tasks due to interrupts if prev and target CPUs share cache")
6257e7047890 ("sched/cpufreq: Initialize sg_cpu->flags to 0")
f453ae2200b0 ("sched/fair: Consider RT/IRQ pressure in capacity_spare_wake()")
f01415fdbfe8 ("sched/fair: Use 'unsigned long' for utilization, consistently")
31cb1bc0dc94 ("sched/core: Rework and clarify prepare_lock_switch()")
a4c3c04974d6 ("sched/fair: Update and fix the runnable propagation rule")
6830c8db58c2 ("Merge branch 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip")
