fdade4f69e4c ("rxrpc: Make service connection lookup always check for retry")
8496af50eb38 ("rxrpc: Use RCU to access a peer's service connection tree")
1291e9d10845 ("rxrpc: Move data_ready peer lookup into rxrpc_find_connection()")
e8d70ce177ee ("rxrpc: Prune the contents of the rxrpc_conn_proto struct")
001c11224910 ("rxrpc: Maintain an extra ref on a conn for the cache list")
d991b4a32f65 ("rxrpc: Move peer lookup from call-accept to new-incoming-conn")
7877a4a4bdf0 ("rxrpc: Split service connection code out into its own file")
c6d2b8d764f5 ("rxrpc: Split client connection code out into its own file")
a1399f8bb033 ("rxrpc: Call channels should have separate call number spaces")
dee46364ce6f ("rxrpc: Add RCU destruction for connections and calls")
e653cfe49cec ("rxrpc: Release a call's connection ref on call disconnection")
2c4579e4b1d5 ("rxrpc: Move usage count getting into rxrpc_queue_conn()")
eb9b9d22754d ("rxrpc: Check that the client conns cache is empty before module removal")
bba304db34ec ("rxrpc: Turn connection #defines into enums and put outside struct def")
5acbee464878 ("rxrpc: Provide queuing helper functions")
a263629da519 ("rxrpc: Avoid using stack memory in SG lists in rxkad")
689f4c646d6a ("rxrpc: Check the source of a packet to a client conn")
88b99d0b7af8 ("rxrpc: Fix some sparse errors")
aa390bbe2113 ("rxrpc: Kill off the rxrpc_transport struct")
999b69f89241 ("rxrpc: Kill the client connection bundle concept")
5627cc8b961e ("rxrpc: Provide more refcount helper functions")
4a3388c8033e ("rxrpc: Use IDR to allocate client conn IDs on a machine-wide basis")
b3f575043fcd ("rxrpc: rxrpc_connection_lock shouldn't be a BH lock, but conn_lock is")
42886ffe77f1 ("rxrpc: Pass sk_buff * rather than rxrpc_host_header * to functions")
cc8feb8edd92 ("rxrpc: Fix exclusive connection handling")
85f32278bd98 ("rxrpc: Replace conn->trans->{local,peer} with conn->params.{local,peer}")
19ffa01c9c45 ("rxrpc: Use structs to hold connection params and protocol info")
0e4699e4a37b ("rxrpc: checking for IS_ERR() instead of NULL")
4f95dd78a77e ("rxrpc: Rework local endpoint management")
875636163b4e ("rxrpc: Separate local endpoint event handling out into its own file")
f66d74901960 ("rxrpc: Use the peer record to distribute network errors")
fe77d5fc5ab3 ("rxrpc: Do a little bit of tidying in the ICMP processing")
1a70c05bad13 ("rxrpc: Break MTU determination from ICMP into its own function")
abe89ef0ed1a ("rxrpc: Rename rxrpc_UDP_error_report() to rxrpc_error_report()")
be6e6707f6ee ("rxrpc: Rework peer object handling to use hash table and RCU")
0d81a51ab94a ("rxrpc: Update the comments in ar-internal.h to reflect renames")
8c3e34a4ff85 ("rxrpc: Rename files matching ar-*.c to git rid of the "ar-" prefix")
0e119b41b7f2 ("rxrpc: Limit the listening backlog")
bc6e1ea32c26 ("rxrpc: Trim line-terminal whitespace")
2341e0775747 ("rxrpc: Simplify connect() implementation and simplify sendmsg() op")
9b6d53985fd1 ("rxrpc: Use pr_<level> and pr_fmt, reduce object size a few KB")
02c223470c3c ("net: udp: rename UDP_INC_STATS_BH()")
6aef70a851ac ("net: snmp: kill various STATS_USER() helpers")
e0e4d82f3be6 ("rxrpc: Create a null security type and get rid of conditional calls")
648af7fca159 ("rxrpc: Absorb the rxkad security module")
6dd050f88d70 ("rxrpc: Don't assume transport address family and size when using it")
843099cac0db ("rxrpc: Don't pass gfp around in incoming call handling functions")
dc44b3a09aec ("rxrpc: Differentiate local and remote abort codes in structs")
5b3e87f19e71 ("rxrpc: Static arrays of strings should be const char *const[]")
8e688d9c1666 ("rxrpc: Move some miscellaneous bits out into their own file")
