47ebaac1f32d ("cpufreq: governor: Relocate definitions of tuners structures")
8c8f77fd0719 ("cpufreq: governor: Move per-CPU data to the common code")
7d5a9956af4c ("cpufreq: governor: Make governor private data per-policy")
d1db75fffc22 ("cpufreq: ondemand: Rework the handling of powersave bias updates")
a33cce1c6cc3 ("cpufreq: governor: Fix CPU load information updates via ->store")
76c5f66aa107 ("cpufreq: ondemand: Drop one more callback from struct od_ops")
8434dadbb457 ("cpufreq: governor: Drop unused governor callback and data fields")
702c9e542a25 ("cpufreq: governor: Add a ->start callback for governors")
8847e038c1d1 ("cpufreq: governor: Move io_is_busy to struct dbs_data")
07aa4402a009 ("cpufreq: governor: Use microseconds in sample delay computations")
6e96c5b3ac51 ("cpufreq: ondemand: Simplify conditionals in od_dbs_timer()")
57dc3bcd454e ("cpufreq: governor: Move rate_mult to struct policy_dbs")
4cccf7555770 ("cpufreq: governor: Get rid of the ->gov_check_cpu callback")
e4db2813d2e5 ("cpufreq: governor: Avoid atomic operations in hot paths")
b9db42730aeb ("cpufreq: governor: Avoid irq_work_queue_on() crash on non-SMP ARM")
a23d6d180914 ("cpufreq: ondemand: Rearrange od_dbs_timer() to avoid updating delay")
aded387b94b6 ("cpufreq: conservative: Update sample_delay_ns immediately")
581c214b21e4 ("cpufreq: governor: No need to manage state machine now")
99522fe6788f ("cpufreq: Remove cpufreq_governor_lock")
c54df0718423 ("cpufreq: governor: Create and traverse list of policy_dbs to avoid deadlock")
fd8ddc482a7a ("cpufreq: governor: Drop unused macros for creating governor tunable attributes")
c4435630361d ("cpufreq: governor: New sysfs show/store callbacks for governor tunables")
ff4b17895e31 ("cpufreq: governor: Move common tunables to 'struct dbs_data'")
d0684d3b8934 ("cpufreq: governor: Create generic macro for common tunables")
fafd5e8ab29d ("cpufreq: governor: Drop pointless goto from cpufreq_governor_init()")
686cc637c993 ("cpufreq: governor: Rename skip_work to work_count")
cea6a9e77228 ("cpufreq: governor: Symmetrize cpu_dbs_info initialization and cleanup")
bc505475b85d ("cpufreq: governor: Rearrange governor data structures")
e9751894000a ("cpufreq: governor: Simplify cpufreq_governor_limits()")
d10b5eb5fce4 ("cpufreq: governor: Drop cpu argument from dbs_check_cpu()")
e40e7b255e59 ("cpufreq: governor: Rename cpu_common_dbs_info to policy_dbs_info")
ea59ee0dc979 ("cpufreq: governor: Drop the gov pointer from struct dbs_data")
906a6e5aaef2 ("cpufreq: governor: Rework cpufreq_governor_dbs()")
7bdad34d0890 ("cpufreq: governor: Rename some data types and variables")
af926185231a ("cpufreq: governor: Put governor structure into common_dbs_data")
5da3dd1e0091 ("cpufreq: governor: Avoid passing dbs_data pointers around unnecessarily")
2bb8d94fb03f ("cpufreq: governor: Use common mutex for dbs_data protection")
9be4fd2c7723 ("cpufreq: governor: Replace timers with utilization update callbacks")
34e2c555f3e1 ("cpufreq: Add mechanism for registering utilization update callbacks")
de1df26b7cef ("cpufreq: Clean up default and fallback governor setup")
e4b133cc4b30 ("cpufreq: Fix NULL reference crash while accessing policy->governor_data")
2dd3e724b4e2 ("cpufreq: governor: Use lockless timer function")
f08f638b9c7f ("cpufreq: ondemand: update update_sampling_rate() to make it more efficient")
70f43e5e798c ("cpufreq: governor: replace per-CPU delayed work with timers")
5e4500d8dba1 ("cpufreq: governor: initialize/destroy timer_mutex with 'shared'")
affde5d06af1 ("cpufreq: governor: Pass policy as argument to ->gov_dbs_timer()")
e68fe18c5b54 ("cpufreq: ondemand: Work is guaranteed to be pending")
e128c8640700 ("cpufreq: ondemand: Update sampling rate only for concerned policies")
