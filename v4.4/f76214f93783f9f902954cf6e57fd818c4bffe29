f76214f93783 ("perf trace: Check if the raw_syscalls:sys_{enter,exit} are setup before setting tp filter")
b27b38ed9427 ("perf trace: Implement syscall filtering in augmented_syscalls")
246fbe03edaa ("perf trace: Rename set_ev_qualifier_filter to clarify its a tracepoint filter")
a9964c432bcc ("perf trace: Fill in BPF "filtered_pids" map when present")
744fafc787de ("perf trace: See if there is a map named "filtered_pids"")
7ad92a3371e1 ("perf evlist: Rename perf_evlist__set_filter* to perf_evlist__set_tp_filter*")
ed9a77ba7703 ("perf augmented_syscalls: Use pid_filter")
66067538e042 ("perf augmented_syscalls: Remove needless linux/socket.h include")
55f127b43143 ("perf augmented_syscalls: Filter on a hard coded pid")
79ef68c7e1f6 ("perf augmented_syscalls: Start collecting pathnames in the BPF program")
febf8a3712e4 ("perf examples bpf: Start augmenting raw_syscalls:sys_{start,exit}")
b1a9e2535e20 ("perf trace: Use the raw_syscalls:sys_enter for the augmented syscalls")
d3d1c4bdf5a7 ("perf trace: Setup the augmented syscalls bpf-output event fields")
e0b6d2ef3290 ("perf trace: Handle "bpf-output" events associated with "__augmented_syscalls__" BPF map")
d32855fa35b9 ("perf trace: Setup struct syscall_tp for syscalls:sys_{enter,exit}_NAME events")
63f11c80e5dd ("perf trace: Rename some syscall_tp methods to raw_syscall")
9ea42ba4411a ("perf trace: Support setting cgroups as targets")
082ab9a18e53 ("perf trace: Filter out 'sshd' in the tracer ancestry in syswide tracing")
dd1a50377c92 ("perf trace: Introduce filter_loop_pids()")
b0ad8ea66445 ("perf tools: Remove unused 'prefix' from builtin functions")
e3ba76deef23 ("perf tools: Force uncore events to system wide monitoring")
0d79f8b93187 ("perf stat: Add -a as default target")
d49dd15d6973 ("perf diff: Add diff.order config option")
75fc5ae5cc53 ("perf tools: Only increase index if perf_evsel__new_idx() succeeds")
d01f4e8db22c ("perf ftrace: Introduce new 'ftrace' tool")
017037ff3d0b ("perf trace: Allow specifying list of syscalls and events in -e/--expr/--event")
355637717d57 ("perf kallsyms: Introduce tool to look for extended symbol information on the running kernel")
36662794bb52 ("perf config: Validate config variable arguments before trying use them")
909236083ee5 ("perf config: Add support for getting config key-value pairs")
e36b7821a985 ("perf trace: Implement --delay")
39bcd4a4e4cb ("perf c2c: Add record subcommand")
7aef3bf3daa1 ("perf c2c: Add c2c command")
1c5f01fe8660 ("perf list: Add a --no-desc flag")
08e60ed15d04 ("perf pmu: Support alias descriptions")
893c5c798be9 ("perf config: Show default report configuration in example and docs")
40218daea1db ("perf list: Show SDT and pre-cached events")
1f3736c9c833 ("perf probe: Show all cached probes")
bc0622302f34 ("perf probe: Use cache entry if possible")
8a0a9c7e9146 ("perf config: Introduce new init() and exit()")
2fd457a34525 ("perf probe: Add --cache option to cache the probe definitions")
dd975497adcd ("perf probe: Introduce perf_cache interfaces")
4698b8b7572f ("perf buildid: Rename and export build_id_cache__cachedir()")
78f71c996fb9 ("perf config: Fix abnormal termination at perf_parse_file()")
01412261d994 ("perf buildid-cache: Use path/to/bin/buildid/elf instead of path/to/bin/buildid")
4e4b6c0668dc ("perf symbols: Cleanup the code flow of dso__find_kallsyms")
11870d714a1b ("perf symbols: Introduce filename__readable to check readability")
0a77582f0407 ("perf symbols: Introduce DSO__NAME_KALLSYMS and DSO__NAME_KCORE")
d65444d2fba9 ("perf buildid-cache: Use lsdir() for looking up buildid caches")
d5d71e86d226 ("perf trace: Move futex_op beautifier to tools/perf/trace/beauty/")
62de344e4fed ("perf trace: Move perf_flags beautifier to tools/perf/trace/beauty/")
