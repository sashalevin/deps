68cbc557375e ("ASoC: soc-pcm: add soc_pcm_update_symmetry()")
6fb8944cd289 ("ASoC: soc-pcm: add soc_cpu/codec_dai_name() macro")
1d5cd5254f67 ("ASoC: soc-pcm/compress: reduce verbosity on mapping ok messages")
c2233a266178 ("ASoC: soc: use asoc_rtd_to_cpu() / asoc_rtd_to_codec() macro for DAI pointer")
c840f7698d26 ("ASoC: soc-pcm: Merge for_each_rtd_cpu/codec_dais()")
22a2fc81658b ("ASoC: soc-core: Merge CPU/Codec DAIs")
8cce6569e417 ("ASoC: (cosmetic) simplify dpcm_prune_paths()")
a4be4187b2bf ("ASoC: soc: use for_each_rtd_codecs/cpus_dai() macro")
995cbc3ca1ab ("ASoC: soc.h: add for_each_rtd_codecs/cpus_dai() macro")
a9ee331b537a ("ASoC: soc-pcm: Do Digital Mute for both CPU/Codec in same timing.")
67ad877757ce ("ASoC: soc-pcm: check DAI's activity more simply")
ac5bf39e3968 ("ASoC: soc-dapm: don't use rtd->cpu_dai on for_each_rtd_cpu_dai()")
0e9cf4c452ad ("ASoC: pcm: check if cpu-dai supports a given stream")
6e1276a5e613 ("ASoC: Return error if the function does not support multi-cpu")
de6214a33633 ("ASoC: Add multiple CPU DAI support in DAPM")
6c4b13b51aa3 ("ASoC: Add dapm_add_valid_dai_widget helper")
19bdcc7aeed4 ("ASoC: Add multiple CPU DAI support for PCM ops")
76afa64374a7 ("ASoC: Add initial support for multiple CPU DAIs")
c3212829f812 ("ASoC: soc-pcm: move CONFIG_DEBUG_FS functions to top side")
52645e332d22 ("ASoC: soc-pcm: move dpcm_path_put() to soc-pcm.c")
0c01f6ca8e4c ("ASoC: soc-pcm: add snd_soc_dai_get_widget()")
57be92066f68 ("ASoC: soc-pcm: cleanup soc_pcm_apply_msb()")
acf253c11329 ("ASoC: soc-pcm: add snd_soc_dai_get_pcm_stream()")
7083f877ea66 ("ASoC: soc-pcm: use for_each_pcm_streams() macro")
0f6011fd79a2 ("ASoC: soc-pcm: merge playback/cature_active into stream_active")
93597fae552a ("ASoC: soc-pcm: use dai_get_widget() at dpcm_get_be()")
5d9fa03e6c35 ("ASoC: soc-pcm: tidyup soc_pcm_open() order")
62c86d1d5fd9 ("ASoC: soc-pcm: move soc_pcm_close() next to soc_pcm_open()")
dd03907bf129 ("ASoC: soc-pcm: call snd_soc_component_open/close() once")
b56be800f129 ("ASoC: soc-pcm: call snd_soc_dai_startup()/shutdown() once")
