5a28fc94c914 ("x86/mpx, mm/core: Fix recursive munmap() corruption")
dd2283f2605e ("mm: mmap: zap pages with read mmap_sem in munmap")
8d68fa0e0839 ("signal/x86: Move mpx siginfo generation into do_bounds")
32542ee295be ("x86/mpx, x86/insn: Relocate insn util functions to a new insn-eval file")
4578f06fc93f ("x86/mpx: Do not use SIB.base if its value is 101b and ModRM.mod = 0")
ff9d78025c51 ("x86/mpx: Do not use SIB.index if its value is 100b and ModRM.mod is not 11b")
b8d2eff3b1c6 ("x86/mpx: Use signed variables to compute effective addresses")
b15d70df6e68 ("x86/mpx: Simplify handling of errors when computing linear addresses")
44b04912fa72 ("x86/mpx: Do not allow MPX if we have mappings above 47-bit")
e13b73dd9c80 ("x86/hugetlb: Adjust to the new native/compat mmap bases")
1b028f784e8c ("x86/mm: Introduce mmap_compat_base() for 32-bit mmap()")
8f3e474f3cea ("x86/mm: Add task_size parameter to mmap_base()")
6a0b41d1e23d ("x86/mm: Introduce arch_rnd() to compute 32/64 mmap random base")
010426079ec1 ("sched/headers: Prepare for new header dependencies before moving more code to <linux/sched/mm.h>")
3f07c0144132 ("sched/headers: Prepare for new header dependencies before moving code to <linux/sched/signal.h>")
f7ccbae45c5e ("sched/headers: Prepare for new header dependencies before moving code to <linux/sched/coredump.h>")
6e84f31522f9 ("sched/headers: Prepare for new header dependencies before moving code to <linux/sched/mm.h>")
4eb5aaa3af8a ("sched/headers: Prepare for new header dependencies before moving code to <linux/sched/autogroup.h>")
4f17722c7256 ("sched/headers: Prepare for new header dependencies before moving code to <linux/sched/loadavg.h>")
ae7e81c077d6 ("sched/headers: Prepare for new header dependencies before moving code to <uapi/linux/sched/types.h>")
e601757102cf ("sched/headers: Prepare for new header dependencies before moving code to <linux/sched/clock.h>")
84f001e15737 ("sched/headers: Prepare for new header dependencies before moving code to <linux/sched/wake_q.h>")
3a4f8a0b3ffa ("mm: remove shmem_mapping() shmem_zero_setup() duplicates")
897ab3e0c49e ("userfaultfd: non-cooperative: add event for memory unmaps")
846b1a0f1db0 ("mm: call vm_munmap in munmap syscall instead of using open coded version")
d811914d8757 ("userfaultfd: non-cooperative: rename *EVENT_MADVDONTNEED to *EVENT_REMOVE")
ecf1385d72f0 ("mm: drop unused argument of zap_page_range()")
16e72e9b3098 ("powerpc: do not make the entire heap executable")
da5502c0a39b ("userfaultfd: non-cooperative: selftest: add test for FORK, MADVDONTNEED and REMAP events")
aa0d27217477 ("userfaultfd: non-cooperative: selftest: add ufd parameter to copy_page")
6228b8f2d15b ("userfaultfd: non-cooperative: selftest: introduce userfaultfd_open")
47dd924508f5 ("userfaultfd: hugetlbfs: UFFD_FEATURE_MISSING_SHMEM")
163e11bc4f6e ("userfaultfd: hugetlbfs: UFFD_FEATURE_MISSING_HUGETLBFS")
9903bd7b73ef ("userfaultfd: hugetlbfs: add userfaultfd_hugetlb test")
0594f58dbd95 ("userfaultfd: non-cooperative: avoid MADV_DONTNEED race condition")
05ce77249d50 ("userfaultfd: non-cooperative: add madvise() event for MADV_DONTNEED request")
90794bf19dc1 ("userfaultfd: non-cooperative: optimize mremap_userfaultfd_complete()")
72f87654c696 ("userfaultfd: non-cooperative: add mremap() event")
893e26e61d04 ("userfaultfd: non-cooperative: Add fork() event")
9cd75c3cd4c3 ("userfaultfd: non-cooperative: add ability to report non-PF events from uffd descriptor")
6dcc27fd3943 ("userfaultfd: non-cooperative: Split the find_userfault() routine")
ff47d8c05019 ("Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux")
