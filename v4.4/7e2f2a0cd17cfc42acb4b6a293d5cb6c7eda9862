7e2f2a0cd17c ("mm, page_owner: record page owner for each subpage")
dab4ead1a9d8 ("mm, page_owner: make init_pages_in_zone() faster")
9300d8dfd282 ("mm/page_owner: don't define fields on struct page_ext by hard-coding")
e2f612e673f6 ("mm/page_owner: move page_owner specific function to page_owner.c")
f2ca0b557107 ("mm/page_owner: use stackdepot to store stacktrace")
a9627bc5e34e ("mm/page_owner: introduce split_page_owner and replace manual handling")
a8efe1c982a2 ("mm/page_owner: copy last_migrate_reason in copy_page_owner()")
8285027fc479 ("mm/page_owner: avoid null pointer dereference")
f86e4271978b ("mm: check the return value of lookup_page_ext for all call sites")
0b423ca22f95 ("mm, page_alloc: inline pageblock lookup in page free fast paths")
f75fb889d18d ("mm, page_alloc: avoid unnecessary zone lookups during pageblock operations")
a91c43c7313a ("mm/vmstat: add zone range overlapping check")
756a025f0009 ("mm: coalesce split strings")
1414c7f4f7d7 ("mm/page_poisoning.c: allow for zero poisoning")
8823b1dbc05f ("mm/page_poison.c: enable PAGE_POISONING as a separate option")
4e462112e98f ("mm, page_owner: dump page owner info from dump_page()")
7cd12b4abfd2 ("mm, page_owner: track and print last migrate reason")
d435edca9288 ("mm, page_owner: copy page owner info during migration")
7dd80b8af0bc ("mm, page_owner: convert page_owner_inited to static key")
60f30350fd69 ("mm, page_owner: print migratetype of page and pageblock, symbolic flags")
a0795cd416d1 ("mm, oom: print symbolic gfp_flags in oom warning")
edf14cdbf9a0 ("mm, printk: introduce new format string for flags")
420adbe9fc1a ("mm, tracing: unify mm flags handling in tracepoints and printk")
14e0a214d62d ("tools, perf: make gfp_compact_table up to date")
1f7866b4aebd ("mm, tracing: make show_gfp_flags() up to date")
d977d56ce5b3 ("mm: warn about VmData over RLIMIT_DATA")
9a982250f773 ("thp: introduce deferred_split_huge_page()")
e9b61f19858a ("thp: reintroduce split_huge_page()")
eef1b3ba053a ("thp: implement split_huge_pmd()")
53f9263baba6 ("mm: rework mapcount accounting to enable 4k mapping of THPs")
4b471e8898c3 ("mm, thp: remove infrastructure for handling splitting PMDs")
3ac808fdd2b8 ("mm, thp: remove compound_lock()")
ad0bed24e98b ("thp: drop all split_huge_page()-related code")
122afea9626a ("mm, vmstats: new THP splitting event")
78ddc5347341 ("thp: rename split_huge_page_pmd() to split_huge_pmd()")
6742d293cbe0 ("mm: adjust FOLL_SPLIT for new refcounting")
d281ee614518 ("rmap: add argument to charge compound page")
1c290f642101 ("mm: sanitize page->mapping for tail pages")
d8c1bdeb5d6b ("page-flags: trivial cleanup for PageTrans* helpers")
7d2eba0557c1 ("mm: add tracepoint for scanning pages")
84638335900f ("mm: rework virtual memory accounting")
d07e22597d1d ("mm: mmap: add new /proc tunable for mmap_base ASLR")
8cee852ec53f ("mm, procfs: breakdown RSS for anon, shmem and file in /proc/pid/status")
eca56ff906bd ("mm, shmem: add internal shmem resident memory accounting")
0b57d6ba0bd1 ("mm/mmap.c: remove redundant local variables for may_expand_vm()")
1031bc589228 ("lib/vsprintf: add %*pg format specifier")
