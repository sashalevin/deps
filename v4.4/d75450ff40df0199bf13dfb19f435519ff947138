d75450ff40df ("mm: fix page_vma_mapped_walk() for ksm pages")
ace71a19cec5 ("mm: introduce page_vma_mapped_walk()")
fec89c109f3a ("thp: rewrite freeze_page()/unfreeze_page() with generic rmap walkers")
2a52bcbcc688 ("rmap: extend try_to_unmap() to be usable by split_huge_page()")
a3d0a918502c ("thp: make split_queue per-node")
0b9b6fff7b4c ("thp: fix interrupt unsafe locking in split_huge_page()")
5c7fb56e5e3f ("mm, dax: dax-pmd vs thp-pmd vs hugetlbfs-pmd")
bd56086f1018 ("thp: fix split_huge_page() after mremap() of THP")
b8d3c4c3009d ("mm/huge_memory.c: don't split THP page when MADV_FREE syscall is called")
64b42bc1cfdf ("mm/madvise.c: free swp_entry in madvise_free")
854e9ed09ded ("mm: support madvise(MADV_FREE)")
8749cfea11f3 ("mm: add page_check_address_transhuge() helper")
d965432234db ("thp: increase split_huge_page() success rate")
b20ce5e03b93 ("mm: prepare page_referenced() and page_idle to new THP refcounting")
e90309c9f772 ("thp: allow mlocked THP again")
9a982250f773 ("thp: introduce deferred_split_huge_page()")
e9b61f19858a ("thp: reintroduce split_huge_page()")
ba98828088ad ("thp: add option to setup migration entries during PMD split")
eef1b3ba053a ("thp: implement split_huge_pmd()")
53f9263baba6 ("mm: rework mapcount accounting to enable 4k mapping of THPs")
4b471e8898c3 ("mm, thp: remove infrastructure for handling splitting PMDs")
3ac808fdd2b8 ("mm, thp: remove compound_lock()")
ad0bed24e98b ("thp: drop all split_huge_page()-related code")
122afea9626a ("mm, vmstats: new THP splitting event")
78ddc5347341 ("thp: rename split_huge_page_pmd() to split_huge_pmd()")
7479df6da950 ("thp, mlock: do not allow huge pages in mlocked area")
6742d293cbe0 ("mm: adjust FOLL_SPLIT for new refcounting")
d281ee614518 ("rmap: add argument to charge compound page")
1c290f642101 ("mm: sanitize page->mapping for tail pages")
d8c1bdeb5d6b ("page-flags: trivial cleanup for PageTrans* helpers")
eca56ff906bd ("mm, shmem: add internal shmem resident memory accounting")
