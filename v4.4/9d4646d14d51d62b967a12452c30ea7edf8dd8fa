9d4646d14d51 ("locking/qspinlock: Elide back-to-back RELEASE operations with smp_wmb()")
625e88be1f41 ("locking/qspinlock: Merge 'struct __qspinlock' into 'struct qspinlock'")
95bcade33a8a ("locking/qspinlock: Ensure node is initialised before updating prev->next")
548095dea63f ("locking: Remove smp_read_barrier_depends() from queued_spin_lock_slowpath()")
11752adb68a3 ("locking/pvqspinlock: Implement hybrid PV queued/unfair locks")
34d54f3d6917 ("locking/pvqspinlock: Relax cmpxchg's to improve performance on some architectures")
b193049375b0 ("locking/pv-qspinlock: Use cmpxchg_release() in __pv_queued_spin_unlock()")
64a5e3cb3080 ("locking/qspinlock: Improve readability")
8d53fa19041a ("locking/qspinlock: Clarify xchg_tail() ordering")
b82e530290a0 ("locking/qspinlock: Move __ARCH_SPIN_LOCK_UNLOCKED to qspinlock_types.h")
eaff0e7003cc ("locking/pvqspinlock: Move lock stealing count tracking code into pv_queued_spin_steal_lock()")
cd0272fab785 ("locking/pvqspinlock: Queue node adaptive spinning")
1c4941fd53af ("locking/pvqspinlock: Allow limited lock stealing")
45e898b73562 ("locking/pvqspinlock: Collect slowpath lock statistics")
b3e0b1b6d841 ("locking, sched: Introduce smp_cond_acquire() and use it")
829cf31751aa ("Merge branch 'sched/urgent' into locking/core, to pick up scheduler fix we rely on")
