b3156274ca01 ("rxrpc: Partially handle OpenAFS's improper termination of calls")
248f219cb8bc ("rxrpc: Rewrite the data and ack handling code")
00e907127e6f ("rxrpc: Preallocate peers, conns and calls for incoming service requests")
49e19ec7d349 ("rxrpc: Add tracepoints to record received packets and end of data_ready")
2ab27215ea27 ("rxrpc: Remove skb_count from struct rxrpc_call")
de8d6c7401ae ("rxrpc: Convert rxrpc_local::services to an hlist")
5a42976d4fe5 ("rxrpc: Add tracepoint for working out where aborts happen")
8d94aa381dab ("rxrpc: Calls shouldn't hold socket refs")
6543ac523558 ("rxrpc: Use rxrpc_is_service_call() rather than rxrpc_conn_is_service()")
8b7fac50ab7f ("rxrpc: Pass the connection pointer to rxrpc_post_packet_to_call()")
278ac0cdd5e5 ("rxrpc: Cache the security index in the rxrpc_call struct")
f4fdb3525b24 ("rxrpc: Use call->peer rather than call->conn->params.peer")
fff72429c2e8 ("rxrpc: Improve the call tracking tracepoint")
e796cb419237 ("rxrpc: Delete unused rxrpc_kernel_free_skb()")
df423a4af125 ("rxrpc: Rearrange net/rxrpc/sendmsg.c")
0b58b8a18be4 ("rxrpc: Split sendmsg from packet transmission code")
af338a9ea60a ("rxrpc: The client call state must be changed before attachment to conn")
00b5407e427a ("rxrpc: Fix uninitialised variable warning")
30787a417086 ("rxrpc: fix undefined behavior in rxrpc_mark_call_released")
d001648ec7cf ("rxrpc: Don't expose skbs to in-kernel users [ver #2]")
4de48af663d8 ("rxrpc: Pass struct socket * to more rxrpc kernel interface functions")
ea82aaec9879 ("rxrpc: Use call->peer rather than going to the connection")
8324f0bcfbfc ("rxrpc: Provide a way for AFS to ask for the peer address of a call")
378c9c9603a4 ("afs: Miscellaneous simple cleanups")
e34d4234b0b7 ("rxrpc: Trace rxrpc_call usage")
f5c17aaeb2ae ("rxrpc: Calls should only have one terminal state")
ccbd3dbe85e1 ("rxrpc: Fix a potential NULL-pointer deref in rxrpc_abort_calls")
45025bceef17 ("rxrpc: Improve management and caching of client connection objects")
4d028b2c8299 ("rxrpc: Dup the main conn list for the proc interface")
df5d8bf70f64 ("rxrpc: Make /proc/net/rxrpc_calls safer")
18bfeba50dfd ("rxrpc: Perform terminal call ACK/ABORT retransmission from conn processor")
563ea7d5d4ea ("rxrpc: Calculate serial skew on packet reception")
f51b4480021c ("rxrpc: Set connection expiry on idle, not put")
df844fd46b98 ("rxrpc: Use a tracepoint for skb accounting debugging")
01a90a459850 ("rxrpc: Drop channel number field from rxrpc_call struct")
f36b5e444cf7 ("rxrpc: When clearing a socket, clear the call sets in the right order")
dabe5a790655 ("rxrpc: Tidy up the rxrpc_call struct a bit")
26164e77cafb ("rxrpc: Remove RXRPC_CALL_PROC_BUSY")
992c273af9d9 ("rxrpc: Free packets discarded in data_ready")
50fd85a1f947 ("rxrpc: Fix a use-after-push in data_ready handler")
2e7e9758b2b6 ("rxrpc: Once packet posted in data_ready, don't retry posting")
f9dc575725ba ("rxrpc: Don't access connection from call if pointer is NULL")
17b963e31944 ("rxrpc: Need to flag call as being released on connect failure")
55cae7a403f3 ("rxrpc: fix uninitialized pointer dereference in debug code")
372ee16386bb ("rxrpc: Fix races between skb free, ACK generation and replying")
7acef60455c4 ("rxrpc: checking for IS_ERR() instead of NULL")
d440a1ce5d2c ("rxrpc: Kill off the call hash table")
8496af50eb38 ("rxrpc: Use RCU to access a peer's service connection tree")
1291e9d10845 ("rxrpc: Move data_ready peer lookup into rxrpc_find_connection()")
e8d70ce177ee ("rxrpc: Prune the contents of the rxrpc_conn_proto struct")
