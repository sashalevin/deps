72139dfa2464 ("watchdog: Fix the race between the release of watchdog_core_data and cdev")
1ff688209e2e ("watchdog: core: make sure the watchdog_worker is not deferred")
38a1222ae4f3 ("watchdog: core: make sure the watchdog worker always works")
914d65f3f013 ("watchdog: Fix kref imbalance seen if handle_boot_enabled=0")
4bcd615fad6a ("watchdog: Fix potential kref imbalance when opening watchdog")
44ea39420fc9 ("drivers/watchdog: make use of devm_register_reboot_notifier()")
c013b65ad8a1 ("watchdog: introduce watchdog_worker_should_ping helper")
2501b015313f ("watchdog: core: add option to avoid early handling of watchdog")
bb292ac1c602 ("watchdog: Introduce watchdog_stop_on_unregister helper")
ff84136cb6a4 ("watchdog: add watchdog pretimeout governor framework")
df044e022062 ("watchdog: add pretimeout support to the core")
138913cb632b ("watchdog: core: Fix error handling of watchdog_dev_init()")
90b826f17a4e ("watchdog: Implement status function in watchdog core")
3fbfe9264756 ("watchdog: change watchdog_need_worker logic")
d1ed3ba4e3d7 ("watchdog: Ensure that wdd is not dereferenced if NULL")
15013ad813f6 ("watchdog: Add support for minimum time between heartbeats")
ee142889e32f ("watchdog: Introduce WDOG_HW_RUNNING flag")
664a39236e71 ("watchdog: Introduce hardware maximum heartbeat in watchdog core")
fb32e9b9deeb ("watchdog: Make set_timeout function optional")
0254e953537c ("watchdog: Drop pointer to watchdog device from struct watchdog_device")
faa584757b63 ("watchdog: Add support for creating driver specific sysfs attributes")
b4ffb1909843 ("watchdog: Separate and maintain variables based on variable lifetime")
32ecc6392654 ("watchdog: Create watchdog device in watchdog_dev.c")
33b711269ade ("watchdog: Read device status through sysfs attributes")
906d7a5cfeda ("watchdog: Use static struct class watchdog_class in stead of pointer")
e131319669e0 ("watchdog: core: add reboot notifier support")
2165bf524da5 ("watchdog: core: add restart handler support")
