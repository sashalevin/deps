61433af56077 ("xprtrdma: Throw away reply when version is unrecognized")
07ff2dd510d8 ("xprtrdma: Refactor rpcrdma_reply_handler()")
41c8f70f5a3d ("xprtrdma: Harden backchannel call decoding")
96f8778f70d0 ("xprtrdma: Add xdr_init_decode to rpcrdma_reply_handler()")
431af645cf66 ("xprtrdma: Fix client lock-up after application signal fires")
a80d66c9e0d1 ("xprtrdma: Rename rpcrdma_req::rl_free")
451d26e151f0 ("xprtrdma: Pass only the list of registered MRs to ro_unmap_sync")
4b196dc6fee9 ("xprtrdma: Pre-mark remotely invalidated MRs")
04d25b7d5d1b ("xprtrdma: On invalidation failure, remove MWs from rl_registered")
5c741d4f2215 ("SUNRPC: Add a helper function xdr_stream_decode_string_dup()")
0ae060ca2bdf ("SUNRPC: Add generic helpers for xdr_stream encode/decode")
9a5c63e9c405 ("xprtrdma: Refactor management of mw_list field")
3a72dc771cc3 ("xprtrdma: Relocate connection helper functions")
a100fda1a2e1 ("xprtrdma: Refactor FRMR invalidation")
48016dce46ad ("xprtrdma: Avoid calls to ro_unmap_safe()")
8d38de65644d ("xprtrdma: Make FRWR send queue entry accounting more accurate")
496b77a5c5ce ("xprtrdma: Eliminate rpcrdma_receive_worker()")
eeb30613e1ef ("xprtrmda: Report address of frmr, not mw")
655fec6987be ("xprtrdma: Use gathered Send for large inline messages")
c8b920bb4993 ("xprtrdma: Basic support for Remote Invalidation")
87cfb9a0c85c ("xprtrdma: Client-side support for rpcrdma_connect_private")
6ea8e71150ec ("xprtrdma: Move recv_wr to struct rpcrdma_rep")
90aab6029606 ("xprtrdma: Move send_wr to struct rpcrdma_req")
b157380af194 ("xprtrdma: Simplify rpcrdma_ep_post_recv()")
13650c23f106 ("xprtrdma: Eliminate "ia" argument in rpcrdma_{alloc, free}_regbuf")
54cbd6b0c6b9 ("xprtrdma: Delay DMA mapping Send and Receive buffers")
99ef4db329f1 ("xprtrdma: Replace DMA_BIDIRECTIONAL")
08cf2efd5423 ("xprtrdma: Use smaller buffers for RPC-over-RDMA headers")
9c40c49f145f ("xprtrdma: Initialize separate RPC call and reply buffers")
5a6d1db45569 ("SUNRPC: Add a transport-specific private field in rpc_rqst")
68778945e46f ("SUNRPC: Separate buffer pointers for RPC Call and Reply messages")
3435c74aed2d ("SUNRPC: Generalize the RPC buffer release API")
5fe6eaa1f9a0 ("SUNRPC: Generalize the RPC buffer allocation API")
b9c5bc03be6a ("SUNRPC: Refactor rpc_xdr_buf_init()")
eb342e9a38a5 ("xprtrdma: Eliminate INLINE_THRESHOLD macros")
05c974669ece ("xprtrdma: Fix receive buffer accounting")
78d506e1b707 ("xprtrdma: Revert 3d4cf35bd4fa ("xprtrdma: Reply buffer exhaustion...")")
65b80179f9b8 ("xprtrdma: No direct data placement with krb5i and krb5p")
64695bde6c28 ("xprtrdma: Clean up fixup_copy_count accounting")
cfabe2c634e6 ("xprtrdma: Update only specific fields in private receive buffer")
cb0ae1fbb2f5 ("xprtrdma: Do not update {head, tail}.iov_len in rpcrdma_inline_fixup()")
80414abc2848 ("xprtrdma: rpcrdma_inline_fixup() overruns the receive page list")
5ab8142839c7 ("xprtrdma: Chunk list encoders no longer share one rl_segments array")
9d6b04097882 ("xprtrdma: Place registered MWs on a per-req list")
e2ac236c0b65 ("xprtrdma: Allocate MRs on demand")
a54d4059e5f3 ("xprtrdma: Chunk list encoders must not return zero")
7a89f9c626e3 ("xprtrdma: Honor ->send_request API contract")
3d4cf35bd4fa ("xprtrdma: Reply buffer exhaustion can be catastrophic")
a473018cfe0e ("xprtrdma: Remove rpcrdma_map_one() and friends")
2dc3a69de0d6 ("xprtrdma: Remove ALLPHYSICAL memory registration mode")
