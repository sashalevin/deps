ff244303301f ("kernel: always initialize task->pf_io_worker to NULL")
ba14a194a434 ("fork: Add generic vmalloced stack support")
efdc94907977 ("mm: fix memcg stack accounting for sub-page stacks")
d30dd8be06a5 ("mm: track NR_KERNEL_STACK in KiB instead of number of stacks")
75ef71840539 ("mm, vmstat: add infrastructure for per-node vmstats")
65c453778aea ("mm, rmap: account shmem thp pages")
baa355fd3314 ("thp: file pages support for split_huge_page()")
dd78fedde4b9 ("rmap: support file thp")
4949148ad433 ("mm: charge/uncharge kmemcg from generic page allocator paths")
452647784b2f ("mm: memcontrol: cleanup kmem charge functions")
9521d39976db ("Fix build break in fork.c when THREAD_SIZE < PAGE_SIZE")
b235beea9e99 ("Clarify naming of thread info/stack allocators")
725fc629ff25 ("kernek/fork.c: allocate idle task for a CPU always on its local node")
fff7fb0b2d90 ("lib/GCD.c: use binary GCD algorithm instead of Euclidean")
e2769dbdc51f ("mm, page_alloc: don't duplicate code in free_pcp_prepare")
4db7548ccbd9 ("mm, page_alloc: defer debugging checks of freed pages until a PCP drain")
da838d4fcba6 ("mm, page_alloc: pull out side effects from free_pages_check")
bb552ac6c6b4 ("mm, page_alloc: un-inline the bad part of free_pages_check")
7bfec6f47bb0 ("mm, page_alloc: check multiple page fields with a single branch")
4fcb0971175f ("mm, page_alloc: shorten the page allocator fast path")
