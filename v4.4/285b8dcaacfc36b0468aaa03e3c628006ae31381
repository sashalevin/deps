285b8dcaacfc ("mm, hugetlbfs: pass fault address to no page handler")
7868a2087ec1 ("mm/hugetlb: add size parameter to huge_pte_offset()")
ace71a19cec5 ("mm: introduce page_vma_mapped_walk()")
369cd2121be4 ("userfaultfd: hugetlbfs: userfaultfd_huge_must_wait for hugepmd ranges")
1a1aad8a9b7b ("userfaultfd: hugetlbfs: add userfaultfd hugetlb hook")
8fb5debc5fcd ("userfaultfd: hugetlbfs: add hugetlb_mcopy_atomic_pte for userfaultfd support")
82b0f8c39a38 ("mm: join struct fault_env and vm_fault")
953c66c2b22a ("mm: THP page cache support for ppc64")
1dd38b6c27d5 ("mm: move vma_is_anonymous check within pmd_move_must_withdraw")
fd60775aea80 ("mm, thp: avoid unlikely branches for split_huge_pmd")
3999f52e3198 ("mm/hugetlb.c: use the right pte val for compare in hugetlb_cow")
96b96a96ddee ("mm/hugetlb: fix huge page reservation leak in private mapping error paths")
6fcb52a56ff6 ("thp: reduce usage of huge zero page's atomic counter")
74d2fad1334d ("thp, dax: add thp_get_unmapped_area for pmd mappings")
3f70dc38cec2 ("mm: make sure that kthreads will not refault oom reaped memory")
862e3073b3ee ("mm, oom: get rid of signal_struct::oom_victims")
26db62f179d1 ("oom: keep mm of the killed task available")
8496afaba93e ("mm,oom_reaper: do not attempt to reap a task twice")
7ebffa45551f ("mm,oom_reaper: reduce find_lock_task_mm() usage")
7c5f64f84483 ("mm: oom: deduplicate victim selection code for memcg and global oom")
38e088546522 ("mm: check VMA flags to avoid invalid PROT_NONE NUMA balancing")
982785c6b05a ("mm, thp: fix leaking mapped pte in __collapse_huge_page_swapin()")
c131f751ab1a ("khugepaged: fix use-after-free in collapse_huge_page()")
c5f88bd29ab4 ("mm: fail prefaulting if page table allocation fails")
55779ec759cc ("mm: fix vm-scalability regression in cgroup-aware workingset code")
091f362c53c2 ("mm, oom: tighten task_will_free_mem() locking")
a373966d1f64 ("mm, oom: hide mm which is shared with kthread or global init")
11a410d516e8 ("mm, oom_reaper: do not attempt to reap a task more than twice")
696453e66630 ("mm, oom: task_will_free_mem should skip oom_reaped tasks")
1af8bb432695 ("mm, oom: fortify task_will_free_mem()")
b18dc5f291c0 ("mm, oom: skip vforked tasks from being selected")
0db501f7a34c ("mm, thp: convert from optimistic swapin collapsing to conservative")
47f863ea2200 ("mm, thp: fix comment inconsistency for swapin readahead functions")
e496cf3d7821 ("thp: introduce CONFIG_TRANSPARENT_HUGE_PAGECACHE")
f3f0e1d2150b ("khugepaged: add support of collapse for tmpfs/shmem pages")
b46e756f5e47 ("thp: extract khugepaged from mm/huge_memory.c")
657e3038c4e6 ("shmem, thp: respect MADV_{NO,}HUGEPAGE for file mappings")
800d8c63b2e9 ("shmem: add huge pages support")
c01d5b300774 ("shmem: get_unmapped_area align huge page")
5a6e75f8110c ("shmem: prepare huge= mount option and sysfs knob")
83929372f629 ("filemap: prepare find and delete operations for huge pages")
baa355fd3314 ("thp: file pages support for split_huge_page()")
af9e4d5f2de2 ("thp: handle file COW faults")
d21b9e57c74c ("thp: handle file pages in split_huge_pmd()")
b5072380eb61 ("thp: support file pages in zap_huge_pmd()")
101024596441 ("mm: introduce do_set_pmd()")
7267ec008b5c ("mm: postpone page table allocation until we have page to map")
bae473a423f6 ("mm: introduce fault_env")
dcddffd41d3f ("mm: do not pass mm_struct into handle_mm_fault")
1f52e67e5e7f ("khugepaged: recheck pmd after mmap_sem re-acquired")
