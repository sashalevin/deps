1d18feb2c915 ("bpf: Allow initializing dynptrs in kfuncs")
7e0dac2807e6 ("bpf: Refactor process_dynptr_func")
1ee72bcbe48d ("bpf: Avoid recomputing spi in process_dynptr_func")
f5b625e5f8bb ("bpf: Combine dynptr_get_spi and is_spi_bounds_valid")
379d4ba831cf ("bpf: Allow reinitializing unreferenced dynptr stack slots")
ef8fc7a07c0e ("bpf: Fix partial dynptr stack slot reads/writes")
79168a669d81 ("bpf: Fix missing var_off check for ARG_PTR_TO_DYNPTR")
d6fefa1105da ("bpf: Fix state pruning for STACK_DYNPTR stack slots")
f6ee298fa140 ("bpf: Move PTR_TO_STACK alignment check to process_dynptr_func")
270605317366 ("bpf: Rework process_dynptr_func")
ac50fe51ce87 ("bpf: Propagate errors from process_* checks in check_func_arg")
6b75bd3d0367 ("bpf: Refactor ARG_PTR_TO_DYNPTR checks into process_dynptr_func")
26c386ecf021 ("selftests/bpf: convert dynptr_fail and map_kptr_fail subtests to generic tester")
8cab76ec6349 ("bpf: Introduce single ownership BPF linked list API")
ac9f06050a35 ("bpf: Introduce bpf_obj_drop")
958cf2e273f0 ("bpf: Introduce bpf_obj_new")
a50388dbb328 ("bpf: Support constant scalar arguments for kfuncs")
00b85860feb8 ("bpf: Rewrite kfunc argument handling")
d0d78c1df9b1 ("bpf: Allow locking bpf_spin_lock global variables")
4e814da0d599 ("bpf: Allow locking bpf_spin_lock in allocated objects")
