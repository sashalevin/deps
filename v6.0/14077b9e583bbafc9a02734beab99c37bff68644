14077b9e583b ("debugobjects: Use static key for boot pool selection")
a3b9e191f5fc ("debugobjects: Rework object freeing")
fb60c004f33e ("debugobjects: Rework object allocation")
96a9a0421c77 ("debugobjects: Move min/max count into pool struct")
18b8afcb37d8 ("debugobjects: Rename and tidy up per CPU pools")
cb58d1908430 ("debugobjects: Use separate list head for boot pool")
e18328ff7052 ("debugobjects: Move pools into a datastructure")
d8c6cd3a5c80 ("debugobjects: Reduce parallel pool fill attempts")
49a5cb827d3d ("debugobjects: Provide and use free_object_list()")
a2a702383e8b ("debugobjects: Dont free objects directly on CPU hotplug")
55fb412ef7d0 ("debugobjects: Dont destroy kmem cache in init()")
813fd07858cf ("debugobjects: Collect newly allocated objects in a list to reduce lock contention")
a0ae95040853 ("debugobjects: Delete a piece of redundant code")
63a4a9b52c3c ("debugobjects: Remove redundant checks in fill_pool()")
684d28feb854 ("debugobjects: Fix conditions in fill_pool()")
e4757c710ba2 ("debugobjects: Fix the compilation attributes of some global variables")
5b5baba62222 ("debugobjects: Annotate racy debug variables")
68279f9c9f59 ("treewide: mark stuff as __ro_after_init")
967b494e2fd1 ("workqueue: Use a kthread_worker to release pool_workqueues")
aa6fde93f3a4 ("workqueue: Scale up wq_cpu_intensive_thresh_us if BogoMIPS is below 4000")
