a50ea6412966 ("x86/percpu: Unify percpu read-write accessors")
08d564ad699e ("x86/percpu: Move some percpu macros around for readability")
0e3703630bd3 ("x86/percpu: Fix "const_pcpu_hot" version generation failure")
0548eb067ed6 ("x86/percpu: Return correct variable from current_top_of_stack()")
ed2f752e0e0a ("x86/percpu: Introduce const-qualified const_pcpu_hot to micro-optimize code generation")
e39828d2c1c0 ("x86/percpu: Use the correct asm operand modifier in percpu_stable_op()")
ca4256348660 ("x86/percpu: Use C for percpu read/write accessors")
9a462b9eafa6 ("x86/percpu: Use compiler segment prefix qualifier")
5f863897d964 ("x86/percpu: Define raw_cpu_try_cmpxchg and this_cpu_try_cmpxchg()")
54cd971c6f44 ("x86/percpu: Define {raw,this}_cpu_try_cmpxchg{64,128}")
febe950dbfb4 ("arch: Remove cmpxchg_double")
6d12c8d308e6 ("percpu: Wire up cmpxchg128")
c5c0ba953b8c ("percpu: Add {raw,this}_cpu_try_cmpxchg()")
8c8b096a23d1 ("instrumentation: Wire up cmpxchg128()")
b23e139d0b66 ("arch: Introduce arch_{,try_}_cmpxchg128{,_local}()")
ec570320b09f ("locking/atomic: Correct (cmp)xchg() instrumentation")
e6ce9d741163 ("locking/atomic: Add generic try_cmpxchg{,64}_local() support")
e5ab9eff46b0 ("atomics: Provide atomic_add_negative() variants")
031af50045ea ("arm64: cmpxchg_double*: hazard against entire exchange variable")
94a855111ed9 ("Merge tag 'x86_core_for_v6.2' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip")
