8268614b408b ("mm: remove CONFIG_ARCH_HAS_HUGEPD")
e6c0c03245b1 ("mm: provide mm_struct and address to huge_ptep_get()")
f442fa614137 ("mm: gup: stop abusing try_grab_folio")
01d89b93e176 ("mm/gup: fix hugepd handling in hugetlb rework")
9cbe4954c6d9 ("gup: use folios for gup_devmap")
53e45c4f6d4f ("mm: convert put_devmap_managed_page_refs() to put_devmap_managed_folio_refs()")
6785c54a1b43 ("mm: remove put_devmap_managed_page()")
6401a2e69008 ("fs/proc/task_mmu: convert smaps_hugetlb_range() to work on folios")
bd722058e34d ("hugetlb: convert hugetlb_wp() to use struct vm_fault")
7b6ec181de37 ("hugetlb: convert hugetlb_no_page() to use struct vm_fault")
9b42fa16195f ("hugetlb: convert hugetlb_fault() to use struct vm_fault")
25176ad09ca3 ("mm/treewide: rename CONFIG_HAVE_FAST_GUP to CONFIG_HAVE_GUP_FAST")
23babe1934d7 ("mm/gup: consistently name GUP-fast functions")
a12083d721d7 ("mm/gup: handle hugepd for follow_page()")
4418c522f683 ("mm/gup: handle huge pmd for follow_pmd_mask()")
1b1676180246 ("mm/gup: handle huge pud for follow_pud_mask()")
caf8cab79857 ("mm/gup: cache *pudp in follow_pud_mask()")
878b0c451621 ("mm/gup: handle hugetlb for no_page_table()")
f3c94c625fe3 ("mm/gup: refactor record_subpages() to find 1st small page")
607c63195d63 ("mm/gup: drop gup_fast_folio_allowed() in hugepd processing")
