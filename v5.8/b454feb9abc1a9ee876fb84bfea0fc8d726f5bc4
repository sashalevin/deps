b454feb9abc1 ("x86/fpu/xstate: Add supervisor PASID state for ENQCMD")
ce711ea3cab9 ("perf/x86/intel/lbr: Support XSAVES/XRSTORS for LBR context switch")
f0dccc9da4c0 ("x86/fpu/xstate: Support dynamic supervisor feature for LBR")
5a09928d339f ("perf/x86: Remove task_ctx_size")
33cad284497c ("perf/x86/intel/lbr: Create kmem_cache for the LBR context data")
217c2a633ebb ("perf/core: Use kmem_cache to allocate the PMU specific data")
ff9ff926889d ("perf/core: Factor out functions to allocate/free the task_ctx_data")
47125db27e47 ("perf/x86/intel/lbr: Support Architectural LBR")
631618a0dca3 ("perf/x86/intel/lbr: Factor out intel_pmu_store_lbr")
fda1f99f34a8 ("perf/x86/intel/lbr: Factor out rdlbr_all() and wrlbr_all()")
020d91e5f32d ("perf/x86/intel/lbr: Mark the {rd,wr}lbr_{to,from} wrappers __always_inline")
5624986dc61b ("perf/x86/intel/lbr: Unify the stored format of LBR information")
49d8184f2036 ("perf/x86/intel/lbr: Support LBR_CTL")
f42be8651a7a ("perf/x86/intel/lbr: Use dynamic data structure for task_ctx")
530bfff64803 ("perf/x86/intel/lbr: Factor out a new struct for generic optimization")
799571bf38fc ("perf/x86/intel/lbr: Add the function pointers for LBR save and restore")
c301b1d80ed5 ("perf/x86/intel/lbr: Add a function pointer for LBR read")
9f354a726cb1 ("perf/x86/intel/lbr: Add a function pointer for LBR reset")
e1ad1ac2deb8 ("perf/x86: Keep LBR records unchanged in host context for guest usage")
097e4311cda9 ("perf/x86: Add constraint to create guest LBR event without hw counter")
b2d6504761a5 ("perf/x86/lbr: Add interface to get LBR information")
027440b5d426 ("perf/x86/core: Refactor hw->idx checks and cleanup")
3cb9d5464c1c ("perf/x86: Fix variable types for LBR registers")
