d9b6f90794ba ("arm64: kasan: allow to init memory when setting tags")
2cb34276427a ("arm64: kasan: simplify and inline MTE functions")
cde8a7eb778c ("kasan: ensure poisoning size alignment")
e2db1a9aa381 ("kasan, mm: optimize kmalloc poisoning")
928501344fc6 ("kasan, mm: don't save alloc stacks twice")
2b8305260fb3 ("kfence, kasan: make KFENCE compatible with KASAN")
0ce20dd84089 ("mm: add Kernel Electric-Fence infrastructure")
611806b4bf8d ("kasan: fix bug detection via ksize for HW_TAGS mode")
027b37b552f3 ("kasan: move _RET_IP_ to inline wrappers")
f00748bfa024 ("kasan: prefix global functions with kasan_")
97593cad003c ("kasan: sanitize objects when metadata doesn't fit")
1ef3133bd3b8 ("kasan: simplify assign_tag and set_tag calls")
d99f6a10c161 ("kasan: don't round_up too much")
eeb3160c2419 ("kasan, mm: rename kasan_poison_kfree")
34303244f261 ("kasan, mm: check kasan_enabled in annotations")
8028caaca7a8 ("kasan: add and integrate kasan boot parameters")
57345fa68a27 ("kasan: inline (un)poison_range and check_invalid_free")
bffe690708c8 ("kasan: open-code kasan_unpoison_slab")
d8dd397120be ("kasan: inline random_tag for HW_TAGS")
c0054c565ae5 ("kasan: inline kasan_reset_tag for tag-based modes")
77f57c983065 ("kasan: remove __kasan_unpoison_stack")
d56a9ef84bd0 ("kasan, arm64: unpoison stack only with CONFIG_KASAN_STACK")
8bb0009b1946 ("kasan: introduce set_alloc_info")
6476792f1015 ("kasan: rename get_alloc/free_info")
c696de9f12b7 ("kasan: simplify quarantine_put call site")
4291e9ee6189 ("kasan, arm64: print report from tag fault handler")
2e903b914797 ("kasan, arm64: implement HW_TAGS runtime")
6c6a04fe367f ("kasan: define KASAN_GRANULE_SIZE for HW_TAGS")
ccbe2aaba1ed ("arm64: kasan: add arch layer for memory tagging helpers")
bad1e1c663e0 ("arm64: mte: switch GCR_EL1 in kernel entry and exit")
