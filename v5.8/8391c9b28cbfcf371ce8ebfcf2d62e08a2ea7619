8391c9b28cbf ("drm/i915/selftests: Confirm CS_TIMESTAMP / CTX_TIMESTAMP share a clock")
45233ab2d036 ("drm/i915/gt: Move gen8 CS emitters into gen8_engine_cs.h")
d0d829e56674 ("drm/i915: split gen8+ flush and bb_start emission functions")
70a2b431c364 ("drm/i915/gt: Rename lrc.c to execlists_submission.c")
e67d01d84946 ("drm/i915/gt: Flush xcs before tgl breadcrumbs")
306bb61d6bb3 ("drm/i915/gt: Expose more parameters for emitting writes into the ring")
8ce70996f759 ("drm/i915/gt: Use the local HWSP offset during submission")
bfdf8b1d3868 ("drm/i915: Use ww locking in intel_renderstate.")
b3786b29379c ("drm/i915/gt: Distinguish the virtual breadcrumbs from the irq breadcrumbs")
2854d866327a ("drm/i915/gt: Replace intel_engine_transfer_stale_breadcrumbs")
c18636f76344 ("drm/i915: Remove requirement for holding i915_request.lock for breadcrumbs")
a817c891c124 ("drm/i915/gt: Disable preparser around xcs invalidations on tgl")
96c5a15f9f39 ("drm/i915/kbl: Fix revision ID checks")
1d9221e9d395 ("drm/i915: Skip signaling a signaled request")
1b90e4a43b74 ("drm/i915/selftests: Enable selftesting of busy-stats")
dfdfbd382348 ("drm/i915/selftests: Check preemption rollback of different ring queue depths")
9199c070cdde ("drm/i915/selftests: Exercise far preemption rollbacks")
7102a76043eb ("drm/i915/selftests: Disable preemptive heartbeats over preemption tests")
d4b02a4c613e ("drm/i915/selftests: Trim execlists runtime")
e36ba817fa96 ("drm/i915/gt: Incrementally check for rewinding")
5a8339953641 ("drm/i915: Drop i915_request.i915 backpointer")
c1f858787060 ("drm/i915/gt: Split low level gen2-7 CS emitters")
98b7067a17ba ("drm/i915: Add a few asserts around handling of i915_request_is_active()")
b72f02d78e4f ("drm/i915/gt: Prevent timeslicing into unpreemptable requests")
fc0e12702216 ("drm/i915: Improve execute_cb struct packing")
3a230a554dbb ("drm/i915/selftests: Restore to default heartbeat")
ad6586850b6d ("drm/i915/selftests: Change priority overflow detection")
25c26f18ea79 ("drm/i915/selftests: Measure dispatch latency")
