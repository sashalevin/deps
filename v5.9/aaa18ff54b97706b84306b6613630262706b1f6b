aaa18ff54b97 ("thermal: gov_power_allocator: Return early in manage if trip_max is NULL")
ca0e9728d372 ("thermal: gov_power_allocator: Eliminate a redundant variable")
41ddbcc6fd2c ("thermal: gov_power_allocator: Use .manage() callback instead of .throttle()")
e95fa7404716 ("thermal: gov_power_allocator: avoid inability to reset a cdev")
912e97c67cc3 ("thermal: gov_power_allocator: Move memory allocation out of throttle()")
792c3dc08ddc ("thermal: gov_power_allocator: Change trace functions")
3d827317b17f ("thermal: gov_power_allocator: Refactor checks in divvy_up_power()")
401888e72067 ("thermal: gov_power_allocator: Rearrange initialization of local variables")
0458d536ae97 ("thermal: gov_power_allocator: Remove excessive local variables")
499cc391b41c ("thermal: gov_power_allocator: Rearrange local variables")
e83747c2f8e3 ("thermal: gov_power_allocator: Set up trip points earlier")
4e6d4687f764 ("thermal: gov_power_allocator: Rename trip_max_desired_temperature")
8c35b1f47253 ("thermal: core: Pass trip pointer to governor throttle callback")
fdcf70ed4e16 ("thermal: gov_step_wise: Fold update_passive_instance() into its caller")
94be1d27aa8d ("thermal: gov_power_allocator: Use trip pointers instead of trip indices")
2c7b4bfadef0 ("thermal: core: Store trip pointer in struct thermal_instance")
950210887670 ("thermal: core: Drop trips_disabled bitmask")
fb2c10245f20 ("thermal: core: Fix disabled trip point check in handle_thermal_trip()")
8289d810ea85 ("thermal: core: Rework .get_trend() thermal zone callback")
9caaad2ca02c ("ACPI: thermal: Rework thermal_get_trend()")
