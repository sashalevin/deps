971f45928815 ("arm64/cache: Restrict which headers are included in __ASSEMBLY__")
d949a8155d13 ("mm: make minimum slab alignment a runtime property")
50757018b4c9 ("mm/slob: Convert SLOB to use struct slab and struct folio")
0c24811b12ba ("mm: Convert __ksize() to struct slab")
2cb34276427a ("arm64: kasan: simplify and inline MTE functions")
dc09b29fd071 ("arm64: kasan: align allocations for HW_TAGS")
bad1e1c663e0 ("arm64: mte: switch GCR_EL1 in kernel entry and exit")
620954a67bce ("arm64: mte: convert gcr_user into an exclude mask")
bfc62c598527 ("arm64: kasan: allow enabling in-kernel MTE")
85f49cae4dfc ("arm64: mte: add in-kernel MTE helpers")
49b3cf035edc ("kasan: arm64: set TCR_EL1.TBID1 when enabled")
36943aba9186 ("arm64: mte: Enable swap of tagged pages")
18ddbaa02b7a ("arm64: mte: ptrace: Add PTRACE_{PEEK,POKE}MTETAGS support")
93f067f6caf5 ("arm64: mte: Allow {set,get}_tagged_addr_ctrl() on non-current tasks")
39d08e8318c4 ("arm64: mte: Restore the GCR_EL1 register after a suspend")
af5ce95282dc ("arm64: mte: Allow user control of the generated random tags via prctl()")
1c101da8b971 ("arm64: mte: Allow user control of the tag check mode via prctl()")
4d1a8a2dc0f4 ("arm64: mte: Tags-aware aware memcmp_pages() implementation")
2563776b41c3 ("arm64: mte: Tags-aware copy_{user_,}highpage() implementations")
34bfeea4a9e9 ("arm64: mte: Clear the tags when a page is mapped in user-space with PROT_MTE")
