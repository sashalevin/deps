6a6b7b77cc0f ("mm: list_lru: transpose the array of per-node per-memcg lru lists")
3eef11279ba5 ("mm: list_lru: only add memcg-aware lrus to the global lru list")
60ec6a48eec2 ("mm: list_lru: remove holding lru lock")
16f6bf266c94 ("mm/list_lru.c: prefer struct_size over open coded arithmetic")
a7b7e1df8924 ("mm/list_lru.c: remove kvfree_rcu_local()")
a1f459354a0f ("mm/list_lru: fix a data race in list_lru_count_one")
e0feed08ab41 ("mm/list_lru.c: Rename kvfree_rcu() to local variant")
859b494111b1 ("list_lru.h: Replace zero-length array with flexible-array member")
3510955b3271 ("mm/list_lru.c: fix memory leak in __memcg_init_list_lru_node")
3e8589963773 ("memcg: make it work on sparse non-0-node systems")
6b51e88199ca ("mm/list_lru: introduce list_lru_shrink_walk_irq()")
6e018968f8d3 ("mm/list_lru.c: pass struct list_lru_node* as an argument to __list_lru_walk_one()")
6cfe57a96ba3 ("mm/list_lru.c: move locking from __list_lru_walk_one() to its caller")
fae91d6d8be5 ("mm/list_lru.c: set bit in memcg shrinker bitmap on first list_lru item appearance")
9bec5c35bfa3 ("mm/list_lru: pass dst_memcg argument to memcg_drain_list_lru_node()")
44bd4a4759d5 ("mm/list_lru.c: add memcg argument to list_lru_from_kmem()")
c92e8e10cafe ("fs: propagate shrinker::id to list_lru")
2b3648a6ff83 ("fs/super.c: refactor alloc_super()")
39887653aab4 ("mm/workingset.c: refactor workingset_init()")
0a4465d34028 ("mm, memcg: assign memcg-aware shrinkers bitmap to memcg")
