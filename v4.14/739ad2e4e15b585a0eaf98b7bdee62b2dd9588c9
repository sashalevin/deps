739ad2e4e15b ("s390/uaccess: limit number of retries for cmpxchg_user_key()")
51098f0eb22e ("s390/cmpxchg: make loop condition for 1,2 byte cases precise")
4148575abe1e ("s390/uaccess: add cmpxchg_user_key()")
ce968f654570 ("s390/cmpxchg: make variables local to each case label")
13f62e84385f ("s390/cmpxchg: use symbolic names for inline assembly operands")
3e5ee32392ef ("s390/atomic,cmpxchg: make constraints work with old compilers")
13525f0a62cc ("s390/cmpxchg: use unsigned long values instead of void pointers")
d2b1f6d2d350 ("s390/cmpxchg: get rid of gcc atomic builtins")
b23eb636d7f9 ("s390/atomic: get rid of gcc atomic builtins")
ca897bb1814f ("s390/atomic: use proper constraints")
c8a91c285d8c ("s390/atomic: move remaining inline assemblies to atomic_ops.h")
110a6dbb2eca ("s390/uaccess: add HAVE_GET_KERNEL_NOFAULT support")
0ca94800762e ("locking/atomic, s390: Use s64 for atomic64")
b3a2a05f9111 ("atomics/treewide: Make conditional inc/dec ops optional")
9837559d8eb0 ("atomics/treewide: Make unconditional inc/dec ops optional")
18cc1814d4e7 ("atomics/treewide: Make test ops optional")
356701329fb3 ("atomics/treewide: Make atomic64_fetch_add_unless() optional")
0ae1d994020d ("atomics: Prepare for atomic64_fetch_add_unless()")
eccc2da8c03f ("atomics/treewide: Make atomic_fetch_add_unless() optional")
bef828204a1b ("atomics/treewide: Make atomic64_inc_not_zero() optional")
