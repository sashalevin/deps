6696d2a6f38c ("mm,hwpoison: fix printing of page flags")
8295d535e2aa ("mm,hwpoison: refactor get_any_page")
b94e02822deb ("mm,hwpoison: try to narrow window race for free pages")
1f2481ddbe44 ("mm,hwpoison: double-check page count in __get_any_page()")
6b9a217eda4a ("mm,hwpoison: refactor soft_offline_huge_page and __soft_offline_page")
79f5f8fab482 ("mm,hwpoison: rework soft offline for in-use pages")
06be6ff3d2ec ("mm,hwpoison: rework soft offline for free pages")
694bf0b0cdf9 ("mm,hwpoison: unify THP handling for hard and soft offline")
dd6e2402fad9 ("mm,hwpoison: kill put_hwpoison_page")
7e27f22c9e40 ("mm,hwpoison: unexport get_hwpoison_page and make it static")
9de4f22a60f7 ("mm: code cleanup for MADV_FREE")
1da2f328fa64 ("mm,thp,compaction,cma: allow THP migration for CMA allocations")
3d680bdf60a5 ("mm/page_isolation: fix potential warning from user")
4a55c0474a92 ("mm/hotplug: silence a lockdep splat with printk()")
fe4c86c916d9 ("mm: remove "count" parameter from has_unmovable_pages()")
3f9903b9ca5e ("mm: remove the memory isolate notifier")
5b57b8f22709 ("mm/debug.c: always print flags in dump_page()")
756d25be457f ("mm/page_isolation.c: convert SKIP_HWPOISON to MEMORY_OFFLINE")
feec24a6139d ("mm, soft-offline: convert parameter to pfn")
6855ac4acd3b ("mm/debug.c: PageAnon() is true for PageKsm() pages")
76a1850e4572 ("mm/debug.c: __dump_page() prints an extra line")
641fe2e9387a ("drivers/base/memory.c: don't access uninitialized memmaps in soft_offline_page_store()")
9c276cc65a58 ("mm: introduce MADV_COLD")
d8c6546b1aea ("mm: introduce compound_nr()")
a50b854e073c ("mm: introduce page_size()")
dd625285910d ("drivers/base/memory.c: get rid of find_memory_block_hinted()")
ea8846411ad6 ("mm/memory_hotplug: move and simplify walk_memory_blocks()")
fbcf73ce6582 ("mm/memory_hotplug: rename walk_memory_range() and pass start+size instead of pfns")
90ec010fe0d6 ("drivers/base/memory: use "unsigned long" for block ids")
2491f0a2c0b1 ("mm: section numbers use the type "unsigned long"")
4c4b7f9ba948 ("mm/memory_hotplug: remove memory block devices before arch_remove_memory()")
db051a0dac13 ("mm/memory_hotplug: create memory block devices after arch_add_memory()")
80ec922dbd87 ("mm/memory_hotplug: allow arch_remove_memory() without CONFIG_MEMORY_HOTREMOVE")
1811582587c4 ("drivers/base/memory: pass a block_id to init_memory_block()")
22eb634632a2 ("arm64/mm: add temporary arch_remove_memory() implementation")
eca499ab3749 ("mm/hotplug: make remove_memory() interface usable")
98879b3b9edc ("mm: vmscan: correct some vmscan counters for THP swapout")
aa712399c1e8 ("mm/gup: speed up check_and_migrate_cma_pages() on huge page")
faf53def3b14 ("mm: hugetlb: soft-offline: dissolve_free_huge_page() return zero on !PageHuge")
b38e5962f8ed ("mm: soft-offline: return -EBUSY if set_hwpoison_free_buddy_page() fails")
a58f2cef26e1 ("mm/vmscan.c: fix trying to reclaim unevictable LRU page")
b03641af6809 ("mm: move buddy list manipulations into helpers")
136ac591f047 ("mm: update references to page _refcount")
60b62ff7cc42 ("mm/vmscan: simplify trace_reclaim_flags and trace_shrink_flags")
ac5c94264580 ("mm/memory_hotplug: make __remove_pages() and arch_remove_memory() never fail")
9d1d887d785b ("mm/memory_hotplug: make __remove_section() never fail")
cb7b3a3685b2 ("mm/memory_hotplug: make unregister_memory_section() never fail")
d9eb1417c77d ("mm/memory_hotplug: release memory resource after arch_remove_memory()")
5557c766abad ("mm, memory_hotplug: cleanup memory offline path")
7269f999934b ("mm/mmu_notifier: use correct mmu_notifier events for each invalidation")
