0975fb565b8b ("timers: Remove must_forward_clk")
d4f7dae87096 ("timers: Spare timer softirq until next expiry")
1f8a4212dc83 ("timers: Expand clk forward logic beyond nohz")
90d52f65f303 ("timers: Reuse next expiry cache after nohz exit")
30c66fc30ee7 ("timer: Prevent base->clk from moving backward")
e430d802d6a3 ("timer: Read jiffies once when forwarding base clk")
030dcdd197d7 ("timers: Prepare support for PREEMPT_RT")
f28d3d5346e9 ("timer/trace: Improve timer tracing")
6849cbb0f9a8 ("timer/trace: Replace deprecated vsprintf pointer extension %pf by %ps")
363e934d8811 ("timers: Clear timer_base::must_forward_clk with timer_base::lock held")
30587589251a ("timer: Fix coding style")
63e2ed365975 ("tracing/hrtimer: Print the hrtimer mode in the 'hrtimer_start' tracepoint")
ae67badaa164 ("hrtimer: Optimize the hrtimer code by using static keys for migration_enable/nohz_active")
ed4bbf7910b2 ("timers: Unconditionally check deferrable base")
26456f87aca7 ("timers: Reinitialize per cpu bases on hotplug")
354b46b1a0ad ("timer: Switch callback prototype to take struct timer_list * argument")
c1eba5bcb643 ("timer: Pass timer_list pointer to callbacks unconditionally")
3653bc95bcc7 ("timer: Prepare to change all DEFINE_TIMER() callbacks")
52f737c2da40 ("timer: Provide wrappers safe for use with LOCKDEP")
c310ce4dcb9d ("timers: Avoid an unnecessary iteration in __run_timers()")
8ede369b2ccc ("timer: Remove expires argument from __TIMER_INITIALIZER()")
1d27e3e2252b ("timer: Remove expires and data arguments from DEFINE_TIMER")
1ff97897454b ("timer: Remove users of expire and data arguments to DEFINE_TIMER")
fca7ce5b7c6d ("timer: Remove unused static initializer macros")
51487d9ed1e3 ("timer: Remove last user of TIMER_INITIALIZER")
58e1177b4cd1 ("timer: Convert schedule_timeout() to use from_timer()")
