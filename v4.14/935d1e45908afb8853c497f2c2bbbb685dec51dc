935d1e45908a ("io_uring: Fix race for sqes with userspace")
5c8b0b54db22 ("io_uring: have submission side sqe errors post a cqe")
6c271ce2f1d5 ("io_uring: add submission polling")
6b06314c47e1 ("io_uring: add file set registration")
edafccee56ff ("io_uring: add support for pre-mapped user IO buffers")
9a56a2323dbb ("io_uring: use fget/fput_many() for file references")
def596e9557c ("io_uring: support for IO polling")
c992fe2925d7 ("io_uring: add fsync support")
2b188cc1bb85 ("Add io_uring IO interface")
4e21565b7fd4 ("asm-generic: add kexec_file_load system call to unistd.h")
45cd0faae371 ("vfs: add the fadvise() file operation")
17ef445f9bef ("Documentation/filesystems: update documentation of file_operations")
db7a2d1809a5 ("asm-generic: unistd.h: Wire up sys_rseq")
05c17cedf85b ("x86: Wire up restartable sequence system call")
6e8b704df584 ("fs: update documentation to mention __poll_t and match the code")
7a074e96dee6 ("aio: implement io_pgetevents")
d5a00528b58c ("syscalls/core, syscalls/x86: Rename struct pt_regs-based sys_*() to __x64_sys_*()")
5ac9efa3c50d ("syscalls/core, syscalls/x86: Clean up compat syscall stub naming convention")
e145242ea0df ("syscalls/core, syscalls/x86: Clean up syscall stub naming convention")
f8781c4a2263 ("syscalls/x86: Unconditionally enable 'struct pt_regs' based syscalls on x86_64")
ebeb8c82ffaf ("syscalls/x86: Use 'struct pt_regs' based syscall calling for IA32_EMULATION and x32")
7303e30ec1d8 ("syscalls/core: Prepare CONFIG_ARCH_HAS_SYSCALL_WRAPPER=y for compat syscalls")
fa697140f9a2 ("syscalls/x86: Use 'struct pt_regs' based syscall calling convention for 64-bit syscalls")
1bd21c6c21e8 ("syscalls/core: Introduce CONFIG_ARCH_HAS_SYSCALL_WRAPPER=y")
dfe64506c01e ("x86/syscalls: Don't pointlessly reload the system call number")
c9a211951c7c ("bpf: whitelist all syscalls for error injection")
67a7acd3773a ("kernel/sys_ni: remove {sys_,sys_compat} from cond_syscall definitions")
70dd4b316079 ("kernel/sys_ni: sort cond_syscall() entries")
3e2052e5dd40 ("syscalls/x86: auto-create compat_sys_*() prototypes")
c679a08983db ("syscalls: sort syscall prototypes in include/linux/compat.h")
3c1c456f9b96 ("syscalls: sort syscall prototypes in include/linux/syscalls.h")
66f4e88cc69d ("x86/ioport: add ksys_ioperm() helper; remove in-kernel calls to sys_ioperm()")
9d5b7c956b09 ("mm: add ksys_fadvise64_64() helper; remove in-kernel call to sys_fadvise64_64()")
edf292c76b88 ("fs: add ksys_fallocate() wrapper; remove in-kernel calls to sys_fallocate()")
36028d5dd711 ("fs: add ksys_p{read,write}64() helpers; remove in-kernel calls to syscalls")
806cbae1228c ("fs: add ksys_sync_file_range helper(); remove in-kernel calls to syscall")
e2aaa9f42336 ("kernel: add ksys_setsid() helper; remove in-kernel call to sys_setsid()")
9b32105ec6b1 ("kernel: add ksys_unshare() helper; remove in-kernel calls to sys_unshare()")
70f68ee81e2e ("fs: add ksys_sync() helper; remove in-kernel calls to sys_sync()")
3ce4a7bf6626 ("fs: add ksys_read() helper; remove in-kernel calls to sys_read()")
76847e434435 ("fs: add ksys_lseek() helper; remove in-kernel calls to sys_lseek()")
cbb60b924b9f ("fs: add ksys_ioctl() helper; remove in-kernel calls to sys_ioctl()")
454dab3f965e ("fs: add ksys_getdents64() helper; remove in-kernel calls to sys_getdents64()")
bae217ea8c7e ("fs: add ksys_open() wrapper; remove in-kernel calls to sys_open()")
2ca2a09d6215 ("fs: add ksys_close() wrapper; remove in-kernel calls to sys_close()")
411d9475cf90 ("fs: add ksys_ftruncate() wrapper; remove in-kernel calls to sys_ftruncate()")
55731b3cda3a ("fs: add do_fchownat(), ksys_fchown() helpers and ksys_{,l}chown() wrappers")
cbfe20f56522 ("fs: add do_faccessat() helper and ksys_access() wrapper; remove in-kernel calls to syscall")
03450e271a16 ("fs: add ksys_fchmod() and do_fchmodat() helpers and ksys_chmod() wrapper; remove in-kernel calls to syscall")
46ea89eb652a ("fs: add do_linkat() helper and ksys_link() wrapper; remove in-kernel calls to syscall")
