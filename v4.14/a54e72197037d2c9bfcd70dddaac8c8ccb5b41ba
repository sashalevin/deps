a54e72197037 ("netfilter: propagate net to nf_bridge_get_physindev")
aeaa44075f8e ("netfilter: nf_queue: remove excess nf_bridge variable")
7a847c00eeba ("netfilter: nf_log: incorrect offset to network header")
0c8783806f63 ("netfilter: nf_log_syslog: Don't ignore unknown protocols")
e465cccd0b9d ("netfilter: nf_log_common: merge with nf_log_syslog")
1510618e45cb ("netfilter: nf_log_netdev: merge with nf_log_syslog")
f5466caab9a8 ("netfilter: nf_log_ipv6: merge with nf_log_syslog")
f11d61e7957d ("netfilter: nf_log_arp: merge with nf_log_syslog")
db3187ae21bb ("netfilter: nf_log_ipv4: rename to nf_log_syslog")
0d9826bc18ce ("netfilter: nf_log: missing vlan offload tag and proto")
119e52e664c5 ("netfilter: nf_queue: place bridge physports into queue_entry struct")
dd3cc111f2e3 ("netfilter: nf_queue: make nf_queue_entry_release_refs static")
a8eceea84a3a ("inet: Use fallthrough;")
648ef4b88673 ("mptcp: Implement MPTCP receive path")
6d0060f600ad ("mptcp: Write MPTCP DSS headers to outgoing data packets")
79c0949e9a09 ("mptcp: Add key generation and token tree")
cf7da0d66cc1 ("mptcp: Create SUBFLOW socket for incoming connections")
cec37a6e41aa ("mptcp: Handle MP_CAPABLE options for outgoing connections")
2303f994b3e1 ("mptcp: Associate MPTCP context with TCP socket")
eda7acddf808 ("mptcp: Handle MPTCP TCP options")
