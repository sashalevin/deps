d9a74051a73c ("loop: clean up grammar in warning message")
b0bd158dd630 ("loop: Refactor loop_set_status() size calculation")
5795b6f5607f ("loop: Factor out setting loop device size")
083a6a50783e ("loop: Remove sector_t truncation checks")
7c5014b0987a ("loop: Call loop_config_discard() only after new config is applied")
5db470e229e2 ("loop: drop caches if offset or block_size are changed")
85b0a54a82e4 ("loop: Move loop_reread_partitions() out of loop_ctl_mutex")
c371077000f4 ("loop: Push loop_ctl_mutex down to loop_change_fd()")
757ecf40b7e0 ("loop: Push loop_ctl_mutex down to loop_set_fd()")
550df5fdacff ("loop: Push loop_ctl_mutex down to loop_set_status()")
a13165441d58 ("loop: Push lo_ctl_mutex down into individual ioctls")
310ca162d779 ("block/loop: Use global lock for ioctl() operation.")
b1ab5fa309e6 ("block/loop: Don't grab "struct file" for vfs_getattr() operation.")
d2ac838e4cd7 ("loop: add recursion validation to LOOP_CHANGE_FD")
bdac616db9bb ("loop: fix LOOP_GET_STATUS lock imbalance")
1e047eaab3bb ("block/loop: fix deadlock after loop_set_status")
3148ffbdb916 ("loop: use killable lock in ioctls")
2d1d4c1e591f ("loop: don't call into filesystem while holding lo_ctl_mutex")
