f10271ffdaba ("drm/nouveau/fifo/tu102: rename implementation from tu104")
7ebec5f43134 ("drm/nouveau/core: recognise TU102")
1b2a5aff3505 ("drm/nouveau/fifo/tu106: initial support")
1a38496cdd44 ("drm/nouveau/dma/tu106: initial support")
73010b8e2b9a ("drm/nouveau/top/tu106: initial support")
a39cb42a7541 ("drm/nouveau/pci/tu106: initial support")
2cc0d7c0f761 ("drm/nouveau/core: recognise TU106")
641d0b3056e0 ("drm/nouveau/fifo/tu104: initial support")
aff70760be71 ("drm/nouveau/dma/tu104: initial support")
67e5abb78d0e ("drm/nouveau/top/tu104: initial support")
2d7ca8cb1995 ("drm/nouveau/pci/tu104: initial support")
344d9c8f35b9 ("drm/nouveau/core: recognise TU104")
9d24907ccffe ("drm/nouveau/fifo/gv100: return work submission token in channel ctor args")
85532bd984d7 ("drm/nouveau/fifo/gk104-: support enabling privileged ce functions")
86b442d74c33 ("drm/nouveau/fifo/gk104-: return channel instance in ctor args")
37e1c45a58b5 ("drm/nouveau/fifo/gv100: initial support")
6fb566b91372 ("drm/nouveau/dma/gv100: initial support")
a1c771a5cb86 ("drm/nouveau/top/gv100: initial support")
893855d8215f ("drm/nouveau/pci/gv100: initial support")
c1f856bb9949 ("drm/nouveau/core: recognise gv100")
19ca10d82e33 ("drm/nouveau/gem: lookup VMAs for buffers referenced by pushbuf ioctl")
334cc26d4db1 ("drm/nouveau/fifo/gp100-: force individual channels into a channel group")
665870837a76 ("drm/nouveau/fifo/gk104-: add interfaces to support different runlist layouts")
f9360c3aa61f ("drm/nouveau/fifo/gk104-: simplify definition of channel classes")
a7cf01809bf2 ("drm/nouveau/fifo/gk104-: require explicit runlist selection for channel allocation")
cc36205085bb ("drm/nouveau/fifo/gk104-: support querying engines available on each runlist")
ddc669e25645 ("drm/nouveau/fifo/gk104-: allow fault recovery code to be called by other subdevs")
eb47db4f3bb5 ("drm/nouveau/fifo: support channel count query")
6eb01aa89888 ("drm/nouveau/device: support querying available engines of a specific type")
c5c9127b25b2 ("drm/nouveau/device: implement a generic method to query device-specific properties")
d0e9351e4206 ("drm/nouveau/fault/gp100: implement replayable fault buffer initialisation")
36780d7eee82 ("drm/nouveau/fault: add infrastructure to support fault buffers")
1ce466894b53 ("drm/nouveau/core: define FAULT subdev")
832ca2ac3c95 ("drm/nouveau: pass handle of vmm object to channel allocation ioctls")
920d2b5ef215 ("drm/nouveau/mmu: define user interfaces to mmu vmm opertaions")
c83c4097eba8 ("drm/nouveau/mmu: define user interfaces to mmu memory allocation")
eea5cf0f0170 ("drm/nouveau/mmu: define user interfaces to mmu")
68af607d269c ("drm/nouveau/mmu/gf100-: type-based vram allocation and bar mapping")
0766116157bf ("drm/nouveau/mmu/nv50,g84: type-based vram allocation and bar mapping")
957e18a70da1 ("drm/nouveau/mmu/nv04-nv4x: type-based vram allocation and bar mapping")
eaf1a69110f4 ("drm/nouveau/mmu: add base for type-based memory allocation")
01f349fcad68 ("drm/nouveau/fifo/gf100-: use new interfaces for vmm operations")
f66c57d9229c ("drm/nouveau/fifo: initialise vmm with new interfaces")
f9463a4bc8ea ("drm/nouveau/mmu: implement new vmm frontend")
26880e76863a ("drm/nouveau/mmu: remove support for old backends")
e12cf6ad4388 ("drm/nouveau/mmu/gm200,gm20b: implement new vmm backend")
b597764327e1 ("drm/nouveau/mmu/gk104,gk20a: implement new vmm backend")
b77791da0ee0 ("drm/nouveau/mmu/gf100: implement new vmm backend")
fd542a3e525c ("drm/nouveau/mmu/nv50,g84: implement new vmm backend")
6ce513529aa5 ("drm/nouveau/mmu/nv44: implement new vmm backend")
