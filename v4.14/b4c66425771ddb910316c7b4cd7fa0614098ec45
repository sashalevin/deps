b4c66425771d ("bnxt_en: refactor bnxt_cancel_reservations()")
d900aadd86b0 ("bnxt_en: refactor cancellation of resource reservations")
15a7deb89549 ("bnxt_en: check return value of bnxt_hwrm_func_resc_qcaps")
b187e4bae0aa ("bnxt_en: handle CRASH_NO_MASTER during bnxt_open()")
87f7ab8d6f88 ("bnxt_en: perform no master recovery during startup")
ba02629ff6cb ("bnxt_en: log firmware status on firmware init failure")
3e9ec2bb932d ("bnxt_en: refactor bnxt_alloc_fw_health()")
8280b38e01f7 ("bnxt_en: Fix bp->fw_health allocation and free logic.")
e4e38237d7e3 ("bnxt_en: Report health status update after reset is done")
f3a6d206c25a ("bnxt_en: Call bnxt_ulp_stop()/bnxt_ulp_start() during error recovery.")
e07ab2021eb6 ("bnxt_en: Add support to invoke OP-TEE API to reset firmware")
acfb50e4e773 ("bnxt_en: Add FW fatal devlink_health_reporter.")
d1db9e166bf6 ("bnxt_en: Add bnxt_fw_exception() to handle fatal firmware errors.")
cbb51067a5f5 ("bnxt_en: Add RESET_FW state logic to bnxt_fw_reset_task().")
b4fff2079d10 ("bnxt_en: Do not send firmware messages if firmware is in error state.")
2cd869685045 ("bnxt_en: Retain user settings on a VF after RESET_NOTIFY event.")
657a33c8a0a2 ("bnxt_en: Add devlink health reset reporter.")
230d1f0de754 ("bnxt_en: Handle firmware reset.")
2151fe0830fd ("bnxt_en: Handle RESET_NOTIFY async event from firmware.")
6763c779c2d8 ("bnxt_en: Add new FW devlink_health_reporter")
