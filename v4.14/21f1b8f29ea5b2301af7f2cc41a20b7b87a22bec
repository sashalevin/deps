21f1b8f29ea5 ("KVM: x86: Explicitly pass an exception struct to check_intercept")
35a571346a94 ("KVM: nVMX: Check IO instruction VM-exit conditions")
e71237d3ff1a ("KVM: nVMX: Refactor IO bitmap checks into helper function")
07721feee46b ("KVM: nVMX: Don't emulate instructions in guest mode")
1e9e2622a149 ("KVM: VMX: FIXED+PHYSICAL mode single target IPI fastpath")
03a8871add95 ("KVM: nVMX: Expose load IA32_PERF_GLOBAL_CTRL VM-{Entry,Exit} control")
b35e5548b411 ("KVM: x86/vPMU: Add lazy mechanism to release perf_event per vPMC")
a6da0d77e98e ("KVM: x86/vPMU: Reuse perf_event to avoid unnecessary pmc_reprogram_counter")
4289d2728664 ("KVM: retpolines: x86: eliminate retpoline from vmx.c exit handlers")
4be946728f65 ("KVM: x86/vPMU: Declare kvm_pmu->reprogram_pmi field using DECLARE_BITMAP")
f20935d85a23 ("KVM: x86: Refactor up kvm_{g,s}et_msr() to simplify callers")
f8ea7c6049d5 ("x86: kvm: svm: propagate errors from skip_emulated_instruction()")
05402f64544f ("x86: KVM: svm: don't pretend to advance RIP in case wrmsr_interception() results in #GP")
30cd8604323d ("KVM: x86: Add fixed counters to PMU filter")
d7a08882a0a4 ("KVM: x86: Unconditionally enable irqs in guest context")
66bb8a065f5a ("KVM: x86: PMU Event Filter")
95b5a48c4f2b ("KVM: VMX: Handle NMIs, #MCs and async #PFs in common irqs-disabled fn")
165072b089e5 ("KVM: x86: Move kvm_{before,after}_interrupt() calls to vendor code")
49def500e5ec ("KVM: VMX: Read cached VM-Exit reason to detect external interrupt")
2ea72039808d ("kvm: nVMX: small cleanup in handle_exception")
beb8d93b3e42 ("KVM: VMX: Fix handling of #MC that occurs during VM-Entry")
fdb28619a8f0 ("kvm: vmx: segment limit check: use access length")
c1a9acbc5295 ("kvm: vmx: fix limit checking in get_vmx_mem_address()")
dd53f6102c30 ("Merge tag 'kvmarm-for-v5.2' of git://git.kernel.org/pub/scm/linux/kernel/git/kvmarm/kvmarm into HEAD")
