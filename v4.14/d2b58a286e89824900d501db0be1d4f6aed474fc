d2b58a286e89 ("sched/uclamp: Rename uclamp_util_with() into uclamp_rq_util_with()")
686516b55e98 ("sched/uclamp: Make uclamp util helpers use and return UL values")
7763baace1b7 ("sched/uclamp: Fix overzealous type replacement")
0413d7f33e60 ("sched/uclamp: Always use 'enum uclamp_id' for clamp_id values")
babbe170e053 ("sched/uclamp: Update CPU's refcount on TG's clamp changes")
3eac870a3247 ("sched/uclamp: Use TG's clamps to restrict TASK's clamps")
7274a5c1bbec ("sched/uclamp: Propagate system defaults to the root group")
0b60ba2dd342 ("sched/uclamp: Propagate parent clamps")
2480c093130f ("sched/uclamp: Extend CPU's cgroup controller")
af24bde8df20 ("sched/uclamp: Add uclamp support to energy_compute()")
9d20ad7dfc9a ("sched/uclamp: Add uclamp_util_with()")
982d9cdc22c9 ("sched/cpufreq, sched/uclamp: Add clamps for FAIR and RT tasks")
1a00d999971c ("sched/uclamp: Set default clamps for RT tasks")
a87498ace58e ("sched/uclamp: Reset uclamp values on RESET_ON_FORK")
a509a7cd7974 ("sched/uclamp: Extend sched_setattr() to support utilization clamping")
1d6362fa0cfc ("sched/core: Allow sched_setattr() to use the current policy")
e8f14172c6b1 ("sched/uclamp: Add system default clamps")
e496187da710 ("sched/uclamp: Enforce last task's UCLAMP_MAX")
60daf9c19410 ("sched/uclamp: Add bucket local max tracking")
69842cba9ace ("sched/uclamp: Add CPU's clamp buckets refcounting")
8ec59c0f5f49 ("sched/topology: Remove unused 'sd' parameter from arch_scale_cpu_capacity()")
10a35e6812aa ("sched/pelt: Skip updating util_est when utilization is higher than CPU's capacity")
23127296889f ("sched/fair: Update scale invariance of PELT")
390031e4c309 ("sched/fair: Introduce an energy estimation helper function")
27871f7a8a34 ("PM: Introduce an Energy Model management framework")
938e5e4b0d15 ("sched/cpufreq: Prepare schedutil for Energy Aware Scheduling")
5bd0988be127 ("sched/topology: Relocate arch_scale_cpu_capacity() to the internal header")
765d0af19f5f ("sched/topology: Remove the ::smt_gain field from 'struct sched_domain'")
2ce7135adc9a ("psi: cgroup support")
eb414681d5a0 ("psi: pressure stall information for CPU, memory, and IO")
1f351d7f7590 ("sched: sched.h: make rq locking and clock functions available in stats.h")
b1d29ba82cf2 ("delayacct: track delays from thrashing cache pages")
4a465e3ebbc8 ("sched/fair: Remove setting task's se->runnable_weight during PELT update")
05484e098448 ("sched/topology: Add SD_ASYM_CPUCAPACITY flag detection")
287cdaac5700 ("sched/fair: Fix scale_rt_capacity() for SMT")
12b04875d666 ("sched/pelt: Fix update_blocked_averages() for RT and DL classes")
305c1fac3225 ("sched/numa: Evaluate move once per node")
2e62c4743adc ("sched/fair: Remove #ifdefs from scale_rt_capacity()")
45f5519ec55e ("sched/cpufreq: Clarify sugov_get_util()")
bbb62c0b024a ("sched/core: Remove the rt_avg code")
523e979d3164 ("sched/core: Use PELT for scale_rt_capacity()")
dfa444dc2ff6 ("sched/cpufreq: Remove sugov_aggregate_util()")
9033ea11889f ("cpufreq/schedutil: Take time spent in interrupts into account")
91c27493e78d ("sched/irq: Add IRQ utilization tracking")
8cc90515a4fa ("cpufreq/schedutil: Use DL utilization tracking")
3727e0e16340 ("sched/dl: Add dl_rq utilization tracking")
3ae117c6cd7c ("cpufreq/schedutil: Use RT utilization tracking")
371bf4273269 ("sched/rt: Add rt_rq utilization tracking")
c079629862b2 ("sched/pelt: Move PELT related code in a dedicated file")
8fe5c5a937d0 ("sched/fair: Fix util_avg of new tasks for asymmetric systems")
