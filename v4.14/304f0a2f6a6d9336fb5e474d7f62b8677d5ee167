304f0a2f6a6d ("perf record: Fix event fd races")
da231338ec9c ("perf record: Use an eventfd to wakeup when done")
5d7f41164930 ("perf record: Implement compression for serial trace streaming")
d3c8c08e75c4 ("perf session: Define 'bytes_transferred' and 'bytes_compressed' metrics")
2d4f27999b88 ("perf data: Add global path holder")
f13de6609a9a ("perf record: Apply affinity masks when reading mmap buffers")
9d2ed64587c0 ("perf record: Allocate affinity masks")
93f20c0fe3e8 ("perf record: Extend trace writing to multi AIO")
d3d1af6f011a ("perf record: Enable asynchronous trace writing")
0b77383134f3 ("perf mmap: Map data buffer for preserving collected data")
c04c859f439f ("perf tools: Initialize perf_data_file fd field")
ded2b8fe2e43 ("perf tools: Add 'struct perf_mmap' arg to record__write()")
e035f4ca2ac9 ("perf auxtrace: Pass struct perf_mmap into mmap__read* functions")
31fb4c0d7b88 ("perf mmap: Store real cpu number in 'struct perf_mmap'")
cff17205d6bd ("perf record: Avoid duplicate call of perf_default_config()")
07a9461da672 ("perf mmap: Use the stored scope data in perf_mmap__push()")
189f2cc91f9f ("perf mmap: Add new return value logic for perf_mmap__read_init()")
8872481bd048 ("perf mmap: Introduce perf_mmap__read_init()")
f92c8cbe597a ("perf mmap: Cleanup perf_mmap__push()")
dc6c35c679e9 ("perf mmap: Recalculate size for overwrite mode")
