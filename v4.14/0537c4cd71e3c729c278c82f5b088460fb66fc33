0537c4cd71e3 ("arm64: BTI: Reset BTYPE when skipping emulated instructions")
172a797661d9 ("arm64: unify native/compat instruction skipping")
32a3e635fb0e ("arm64: compat: Add CNTFRQ trap handler")
50de013d22e4 ("arm64: compat: Add CNTVCT trap handler")
2a8905e18c55 ("arm64: compat: Add cp15_32 and cp15_64 handler arrays")
1f1c014035a8 ("arm64: compat: Add condition code checks and IT advance")
70c63cdfd6ee ("arm64: compat: Add separate CP15 trapping hook")
bd7ac140b82f ("arm64: Add decoding macros for CP15_32 and CP15_64 traps")
9478f1927e6e ("arm64: only advance singlestep for user instruction traps")
af4a81b9cd84 ("arm64: fpsimd: Fix bad si_code for undiagnosed SIGFPE")
af40ff687bc9 ("arm64: signal: Ensure si_code is valid for all fault signals")
2c9120f3a86a ("arm64: signal: Make force_signal_inject more robust")
526c3ddb6aa2 ("signal/arm64: Document conflicts with SI_USER and SIGFPE,SIGTRAP,SIGBUS")
bc0ee4760364 ("arm64/sve: Core task context handling")
1fc5dce78ad1 ("arm64/sve: Low-level SVE architectural state manipulation functions")
94ef7ecbdf6f ("arm64: fpsimd: Correctly annotate exception helpers called from asm")
a92d4d1454ab ("arm64: entry.S: move SError handling into a C function for future expansion")
6436beeee572 ("arm64: Fix single stepping in kernel traps")
3f7c86b2382e ("arm64: Update fault_info table with new exception types")
