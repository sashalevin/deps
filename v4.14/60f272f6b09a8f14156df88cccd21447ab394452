60f272f6b09a ("mm/memory-failure.c: move clear_hwpoisoned_pages")
5ed867037eb1 ("mm/sparse.c: remove NULL check in clear_hwpoisoned_pages()")
9f82883c6d9a ("mm/sparse.c: don't manually decrement num_poisoned_pages")
ba72b4c8cf60 ("mm/sparsemem: support sub-section hotplug")
7ea6216049ff ("mm/sparsemem: prepare for sub-section ranges")
e9c0a3f05477 ("mm/sparsemem: convert kmalloc_section_memmap() to populate_section_memmap()")
326e1b8f83a4 ("mm/sparsemem: introduce a SECTION_IS_EARLY flag")
f1eca35a0dc7 ("mm/sparsemem: introduce struct mem_section_usage")
2491f0a2c0b1 ("mm: section numbers use the type "unsigned long"")
26f26bedab33 ("mm/sparse.c: set section nid for hot-add memory")
b9bf8d342d9b ("mm/memory_hotplug: remove "zone" parameter from sparse_remove_one_section")
4c4b7f9ba948 ("mm/memory_hotplug: remove memory block devices before arch_remove_memory()")
05f800a0bd08 ("mm/memory_hotplug: drop MHP_MEMBLOCK_API")
db051a0dac13 ("mm/memory_hotplug: create memory block devices after arch_add_memory()")
80ec922dbd87 ("mm/memory_hotplug: allow arch_remove_memory() without CONFIG_MEMORY_HOTREMOVE")
1811582587c4 ("drivers/base/memory: pass a block_id to init_memory_block()")
22eb634632a2 ("arm64/mm: add temporary arch_remove_memory() implementation")
ac5c94264580 ("mm/memory_hotplug: make __remove_pages() and arch_remove_memory() never fail")
9d1d887d785b ("mm/memory_hotplug: make __remove_section() never fail")
cb7b3a3685b2 ("mm/memory_hotplug: make unregister_memory_section() never fail")
