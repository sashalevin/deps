a9e64931eec5 ("drm/i915: No need to save/restore irq status in intel_breadcrumbs_fake_irq")
61d3dc708077 ("drm/i915: Split breadcrumbs spinlock into two")
b66255f0f779 ("drm/i915: Refactor wakeup of the next breadcrumb waiter")
24754d751cb8 ("drm/i915: Take reference for signaling the request from hardirq")
675204153e82 ("drm/i915: s/assert_spin_locked/lockdep_assert_held/")
e60a870d7f83 ("drm/i915: Assert that fence->lock is held in an irq-safe manner")
67b807a89230 ("drm/i915: Delay disabling the user interrupt for breadcrumbs")
19d0a5727123 ("drm/i915: Defer enabling hangcheck to the first fake breadcrumb interrupt")
56299fb7d904 ("drm/i915: Signal first fence from irq handler if complete")
8d769ea7bc16 ("drm/i915: Report both waiters and success from intel_engine_wakeup()")
d6a2289d9d6b ("drm/i915: Remove the preempted request from the execution queue")
9eb143bbec7d ("drm/i915: Allow a request to be cancelled")
cced5e2f098d ("drm/i915: Take a reference whilst processing the signaler request")
754c9fd57649 ("drm/i915: Protect the request->global_seqno with the engine->timeline lock")
fe49789fab97 ("drm/i915: Deconstruct execute fence")
541ca6ed79f0 ("drm/i915: Inline __i915_gem_request_wait_for_execute()")
7de53bf7e6f3 ("drm/i915: Add ourselves to the gpu error waitqueue for the entire wait")
4b36b2e50677 ("drm/i915: Use a local to shorten req->i915->gpu_error.wait_queue")
9b6586ae9f6b ("drm/i915: Keep a global seqno per-engine")
309663ab7b4f ("drm/i915: Check against the signaled bit for fences/requests")
dffabc8f4ee3 ("drm/i915/tracepoints: Rename i915_gem_request_notify")
354d036fcf70 ("drm/i915/tracepoints: Add request submit and execute tracepoints")
6ef98ea0dacd ("drm/i915: Only start with the fake-irq timer if interrupts are dead")
8998567b5114 ("drm/i915: Defer declaration of missed-interrupt until the waiter is asleep")
2246bea6cf77 ("drm/i915: Postpone fake breadcrumb interrupt until real interrupts cease")
e62e8ad1ba57 ("drm/i915: Add unit tests for the breadcrumb rbtree, wakeups")
ae1f8090b1a7 ("drm/i915: Add unit tests for the breadcrumb rbtree, completion")
f97fbf9606a1 ("drm/i915: Add unit tests for the breadcrumb rbtree, insert/remove")
935a2f776aa5 ("drm/i915: Add some selftests for sg_table manipulation")
953c7f82eb89 ("drm/i915: Provide a hook for selftests")
fe3288b5da2c ("drm/i915: Park the breadcrumbs signaler across a GPU reset")
c00122f33fe6 ("drm/i915: Assert that the active request hasn't been signaled")
969bb72cbfd9 ("drm/i915: Check for timeout completion when waiting for the rq to submitted")
1f7b847d72c3 ("drm/i915: Disable engine->irq_tasklet around resets")
d80270931314 ("drm/i915: Split GEM resetting into 3 phases")
7c9e934ef8a0 ("drm/i915: Emit dma-fence (and execlists submit) first from signaler")
538b257dae83 ("drm/i915: Move breadcrumbs irq_posted up a level to engine")
2f1ac9cc68e0 ("drm/i915: Queue hangcheck when irqs are disabled")
0e178aef8f13 ("drm/i915: Detect a failed GPU reset+recovery")
bf2f04366c1e ("drm/i915: Introduce engine_stalled helper")
36193acd54bd ("drm/i915: Introduce engine_skip_context")
4c9655436522 ("drm/i915: Move engine reset preparation to i915_gem_reset_prepare()")
6ffb7d0756e3 ("drm/i915: Construct a request even if the GPU is currently hung")
c781c978e784 ("drm/i915: Add a sanity check that no request is submitted in the middle")
2edc6e0df1c1 ("drm/i915: Consolidate reset_request()")
5c37daf5dd2e ("Merge tag 'drm-intel-next-2017-01-09' of git://anongit.freedesktop.org/git/drm-intel into drm-next")
