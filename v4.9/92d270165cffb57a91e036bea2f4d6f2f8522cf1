92d270165cff ("merging pick_link() with get_link(), part 4")
40fcf5a931af ("merging pick_link() with get_link(), part 3")
1ccac622f9da ("merging pick_link() with get_link(), part 2")
43679723d27f ("merging pick_link() with get_link(), part 1")
cbae4d12eeee ("fold handle_mounts() into step_into()")
aca2903eefd0 ("new step_into() flag: WALK_NOFOLLOW")
56676ec39019 ("step_into() callers: dismiss the symlink earlier")
20e343571cef ("lookup_fast(): take mount traversal into callers")
c153007b7b7a ("teach handle_mounts() to handle RCU mode")
b023e1728bec ("lookup_fast(): consolidate the RCU success case")
db3c9ade50b1 ("handle_mounts(): pass dentry in, turn path into a pure out argument")
e73cabff5917 ("do_last(): collapse the call of path_to_nameidata()")
da5ebf5aa676 ("lookup_open(): saner calling conventions (return dentry on success)")
239eb983383b ("atomic_open(): saner calling conventions (return dentry on success)")
bd7c4b508344 ("handle_mounts(): start building a sane wrapper for follow_managed()")
31d1726d7250 ("make build_open_flags() treat O_CREAT | O_EXCL as implying O_NOFOLLOW")
278121417a72 ("namei: LOOKUP_NO_SYMLINKS: block symlink resolution")
d41efb522e90 ("fs/namei.c: pull positivity check into follow_managed()")
5f336e722cc9 ("few more cleanups of link_path_walk() callers")
9b5858e99ae1 ("allow link_path_walk() to take ERR_PTR()")
edc2b1da7798 ("make path_init() unconditionally paired with terminate_walk()")
00a07c1591a3 ("switch atomic_open() and lookup_open() to returning 0 in all success cases")
3ec2eef116e9 ("get rid of 'opened' in path_openat() and the helpers downstream")
73a09dd94377 ("introduce FMODE_CREATED and switch to it")
aad888f828fe ("switch all remaining checks for FILE_OPENED to FMODE_OPENED")
69527c554f82 ("now we can fold open_check_o_direct() into do_dentry_open()")
7c1c01ec20d6 ("lift fput() on late failures into path_openat()")
4d27f3266f14 ("fold put_filp() into fput()")
f5d11409e61d ("introduce FMODE_OPENED")
ae2bb293a3e8 ("get rid of cred argument of vfs_open() and do_dentry_open()")
ea73ea727988 ("pass ->f_flags value to alloc_empty_file()")
6de37b6dc085 ("pass creds to get_empty_filp(), make sure dentry_open() passes the right creds")
c9c554f21490 ("alloc_file(): switch to passing O_... flags instead of FMODE_... mode")
e8cff84faa4d ("fold security_file_free() into file_free()")
d202797f480c ("cxl_getfile(): fix double-iput() on alloc_file() failures")
b4e7a7a88b5d ("drm_mode_create_lease_ioctl(): fix open-coded filp_clone_open()")
5f85942c2ea2 ("Merge tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi")
