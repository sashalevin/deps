e67876962ecf ("selftests/x86/lam: Add mmap and SYSCALL test cases for linear-address masking")
3de9745c12d6 ("selftests/x86/lam: Add malloc and tag-bits test cases for linear-address masking")
6a3e0651b4a0 ("selftests/x86/amx: Add test cases for AMX state management")
b7c11876d24b ("selftests/x86: Test signal frame XSTATE header corruption handling")
6365b842aae4 ("x86/syscalls: Split the x32 syscalls into their own table")
d5a00528b58c ("syscalls/core, syscalls/x86: Rename struct pt_regs-based sys_*() to __x64_sys_*()")
5ac9efa3c50d ("syscalls/core, syscalls/x86: Clean up compat syscall stub naming convention")
e145242ea0df ("syscalls/core, syscalls/x86: Clean up syscall stub naming convention")
f8781c4a2263 ("syscalls/x86: Unconditionally enable 'struct pt_regs' based syscalls on x86_64")
ebeb8c82ffaf ("syscalls/x86: Use 'struct pt_regs' based syscall calling for IA32_EMULATION and x32")
7303e30ec1d8 ("syscalls/core: Prepare CONFIG_ARCH_HAS_SYSCALL_WRAPPER=y for compat syscalls")
fa697140f9a2 ("syscalls/x86: Use 'struct pt_regs' based syscall calling convention for 64-bit syscalls")
1bd21c6c21e8 ("syscalls/core: Introduce CONFIG_ARCH_HAS_SYSCALL_WRAPPER=y")
dfe64506c01e ("x86/syscalls: Don't pointlessly reload the system call number")
c9a211951c7c ("bpf: whitelist all syscalls for error injection")
67a7acd3773a ("kernel/sys_ni: remove {sys_,sys_compat} from cond_syscall definitions")
70dd4b316079 ("kernel/sys_ni: sort cond_syscall() entries")
3e2052e5dd40 ("syscalls/x86: auto-create compat_sys_*() prototypes")
c679a08983db ("syscalls: sort syscall prototypes in include/linux/compat.h")
3c1c456f9b96 ("syscalls: sort syscall prototypes in include/linux/syscalls.h")
