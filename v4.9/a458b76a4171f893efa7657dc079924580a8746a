a458b76a4171 ("mm: gup: pack has_pinned in MMF_HAS_PINNED")
292648ac5cf1 ("mm: gup: allow FOLL_PIN to scale in SMP")
2e3025434a6b ("mm: relocate 'write_protect_seq' in struct mm_struct")
97a7e4733b9b ("mm: introduce page_needs_cow_for_dma() for deciding whether cow")
9348b73c2e1b ("mm: don't play games with pinned pages in clear_page_refs")
67197a4f28d2 ("mm, oom_adj: don't loop through tasks in __set_oom_adj when not necessary")
c78f463649d6 ("mm: remove src/dst mm parameter in copy_page_range()")
a4d63c3732f1 ("mm: do not rely on mm == current->mm in __get_user_pages_locked")
d042035eaf5f ("mm/thp: Split huge pmds/puds if they're pinned when fork()")
70e806e4e645 ("mm: Do early cow for pinned pages during fork() for ptes")
7a4830c380f3 ("mm/fork: Pass new vma pointer into copy_page_range()")
008cfe4418b3 ("mm: Introduce mm_struct.has_pinned")
79a1971c5f14 ("mm: move the copy_one_pte() pte_present check into the caller")
df3a57d1f607 ("mm: split out the non-present case from copy_one_pte()")
da1c55f1b272 ("mmap locking API: rename mmap_sem to mmap_lock")
42fc541404f2 ("mmap locking API: add mmap_assert_locked() and mmap_assert_write_locked()")
14c3656b7284 ("mmap locking API: add MMAP_LOCK_INITIALIZER")
0cc55a0213a0 ("mmap locking API: add mmap_read_trylock_non_owner()")
aaa2cc56c1cd ("mmap locking API: convert nested write lock sites")
d8ed45c5dcd4 ("mmap locking API: use coccinelle to convert mmap_sem rwsem call sites")
