0364cd19d61c ("drm/i915: Serialize per-engine resets against new requests")
b4f3e1631f5e ("drm/i915: Reset context image on engines after triggering the reset")
a1ef70e14453 ("drm/i915: Add support for per engine reset recovery")
142bc7d99bcf ("drm/i915: Modify error handler for per engine hang recovery")
c64992e035d7 ("drm/i915: Look for active requests earlier in the reset path")
d5367307d409 ("drm/i915: Wait for concurrent global resets to complete")
2e8f9d322948 ("drm/i915: Restore engine->submit_request before unwedging")
8c185ecaf4ee ("drm/i915: Split I915_RESET_IN_PROGRESS into two flags")
1604a86d0805 ("drm/i915: Extend rpm wakelock during i915_handle_error()")
e07051142cbc ("drm/i915: Refactor direct GPU reset from request waiters")
a49625f90662 ("drm/i915: Replace reset_wait_queue with default_wake_function")
d6a2289d9d6b ("drm/i915: Remove the preempted request from the execution queue")
cced5e2f098d ("drm/i915: Take a reference whilst processing the signaler request")
754c9fd57649 ("drm/i915: Protect the request->global_seqno with the engine->timeline lock")
fe49789fab97 ("drm/i915: Deconstruct execute fence")
541ca6ed79f0 ("drm/i915: Inline __i915_gem_request_wait_for_execute()")
7de53bf7e6f3 ("drm/i915: Add ourselves to the gpu error waitqueue for the entire wait")
4b36b2e50677 ("drm/i915: Use a local to shorten req->i915->gpu_error.wait_queue")
9b6586ae9f6b ("drm/i915: Keep a global seqno per-engine")
309663ab7b4f ("drm/i915: Check against the signaled bit for fences/requests")
57822dc6b9cf ("drm/i915: Perform object clflushing asynchronously")
f6aaba4dfbc8 ("drm/i915: Skip clflushes for all non-page backed objects")
5a97bcc69cc0 ("drm/i915: Amalgamate flushing of display objects")
e59dc1721180 ("drm/i915: Move cpu_cache_is_coherent() to header")
354d036fcf70 ("drm/i915/tracepoints: Add request submit and execute tracepoints")
496b575e3ccb ("drm/i915: Add initial selftests for hang detection and resets")
791ff39ae32a ("drm/i915: Live testing for context execution")
1c42819a14a0 ("drm/i915: Add initial selftests for i915_gem_gtt")
170594502cf5 ("drm/i915: Test coherency of and barriers between cache domains")
12d30d879398 ("drm/i915: Add a live seftest for GEM objects")
8335fd65ce6c ("drm/i915: Add selftests for object allocation, phys")
b348090d6758 ("drm/i915: Simple selftest to exercise live requests")
c835c5508358 ("drm/i915: Add selftests for i915_gem_request")
44653988ef7c ("drm/i915: Create a fake object for testing huge allocations")
0daf0113cff6 ("drm/i915: Mock infrastructure for request emission")
3b5bb0a37665 ("drm/i915: Mock a GGTT for self-testing")
66d9cb5d805a ("drm/i915: Mock the GEM device for self-testing")
e62e8ad1ba57 ("drm/i915: Add unit tests for the breadcrumb rbtree, wakeups")
ae1f8090b1a7 ("drm/i915: Add unit tests for the breadcrumb rbtree, completion")
f97fbf9606a1 ("drm/i915: Add unit tests for the breadcrumb rbtree, insert/remove")
935a2f776aa5 ("drm/i915: Add some selftests for sg_table manipulation")
953c7f82eb89 ("drm/i915: Provide a hook for selftests")
2ae557388d9f ("drm/i915: Clear the last_retired_context following a hang/reset")
fe3288b5da2c ("drm/i915: Park the breadcrumbs signaler across a GPU reset")
1d309634bcf4 ("drm/i915: Kill the tasklet then disable")
8d613c539c74 ("drm/i915: Always call i915_gem_reset_finish() following i915_gem_reset_prepare()")
c00122f33fe6 ("drm/i915: Assert that the active request hasn't been signaled")
8c12d121590e ("drm/i915: Move the irq_barrier for reset earlier into reset_prepare")
969bb72cbfd9 ("drm/i915: Check for timeout completion when waiting for the rq to submitted")
1f7b847d72c3 ("drm/i915: Disable engine->irq_tasklet around resets")
