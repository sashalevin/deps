2f53ae347f59 ("perf top: Add --switch-on/--switch-off events")
a0c0a4ac021b ("perf top: Add --namespaces option")
e5416950454f ("perf bpf: Make synthesize_bpf_events() receive perf_session pointer instead of perf_tool")
a742258af131 ("perf bpf: Synthesize bpf events with bpf_program__get_prog_info_linear()")
811184fb6977 ("perf bpf: Fix synthesized PERF_RECORD_KSYMBOL/BPF_EVENT")
a40b95bcd30c ("perf top: Synthesize BPF events for pre-existing loaded BPF programs")
7b612e291a5a ("perf tools: Synthesize PERF_RECORD_* for loaded BPF programs")
45178a928a4b ("perf tools: Handle PERF_RECORD_BPF_EVENT")
9aa0bfa370b2 ("perf tools: Handle PERF_RECORD_KSYMBOL")
16c66bc167cc ("perf top: Add processing thread")
d24e3c98ac11 ("perf top: Save and display the lost count stats")
b8494f1df875 ("perf ordered_events: Rework show_progress for __ordered_events__flush")
218d61110f69 ("perf top: Do not use overwrite mode by default")
4e303fbe2d95 ("perf top: Allow disabling the overwrite mode")
982d410bc6b4 ("perf annotate stdio: Use annotation_options consistently")
a8ce99b0ee9a ("perf machine: Synthesize and process mmap events for x86 PTI entry trampolines")
1c5aae7710bb ("perf machine: Create maps for x86 PTI entry trampolines")
5759a6820aad ("perf machine: Allow for extra kernel maps")
4d99e4136580 ("perf machine: Workaround missing maps for x86 PTI entry trampolines")
029c75e5cf16 ("perf tools: No need to unconditionally read the max_stack sysctls")
dce0478b5fa0 ("perf map: Remove enum_type arg to map_groups__first()")
abe5449d2de6 ("perf map: Shorten map_groups__find() signature")
68a741868a06 ("perf machine: Introduce machine__kernel_maps()")
e94b861a2315 ("perf map: Introduce map__has_symbols()")
d88205db9caa ("perf dso: Add dso__has_symbols() method")
68766bfa5647 ("perf top: Use __map__is_kernel()")
ee05d21791db ("perf machine: Set main kernel end address properly")
592c10e217f3 ("perf annotate: Allow showing offsets in more than just jump targets")
520d3f01ea53 ("perf annotate stdio2: Print more descriptive event information header")
864298f224f2 ("perf annotate: Add function header to --stdio2")
3563289208ec ("perf annotate: Use the default annotation options for --stdio2")
7f0b6fde3111 ("perf annotate: Move the default annotate options to the library")
befd2a38a632 ("perf annotate: Introduce the --stdio2 output mode")
a1e9b74cc2ef ("perf annotate: Finish the generalization of annotate_browser__write()")
2ba5eca10486 ("perf annotate: Introduce annotation_line__print_start() out of TUI code")
2f025ea0bac2 ("perf annotate: Introduce annotation_line__max_percent()")
ecda45bd6cfe ("perf annotate: Introduce symbol__annotate2 method")
b8b0d819858e ("perf annotate: Introduce init_column_widths() method out of TUI code")
7232bf7a8954 ("perf annotate: Move update_column_widths() to the generic lib")
9761e86e36c0 ("perf annotate: Move the column widths from the TUI to generic lib")
5bc49f612020 ("perf annotate: Introduce set_offsets() method out of TUI code")
1cf5f98a5edb ("perf annotate: Move nr_{asm_}entries to struct annotation")
0ca693b315aa ("perf annotate: Move 'start' to struct annotation")
4850c92e4083 ("perf annotate: Nuke struct browser_line")
0db45bcfac85 ("perf annotate: Move mark_jump_targets from the TUI to the annotation library")
6dcd57e8ae20 ("perf annotate: Move nr_jumps to struct annotation")
27feb761c721 ("perf annotate: Move jumps_percent_color to ui_browser")
bc1c0f3dfa77 ("perf annotate: Move max_jump_sources to struct annotation")
95aa89d92de8 ("perf annotate tui: Add browser__annotation() helper")
6af612d2b105 ("perf annotate: Move pcnt_with() to the annotation library")
