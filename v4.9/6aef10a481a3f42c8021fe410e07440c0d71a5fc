6aef10a481a3 ("libbpf: Factor out low-level BPF program loading helper")
0f0e55d8247c ("libbpf: Improve BTF sanitization handling")
2d39d7c56f11 ("libbpf: Refactor map creation logic and fix cleanup leak")
e411eb257b33 ("libbpf: Return err if bpf_object__load failed")
1e092a031829 ("tools/libbpf: Add support for BPF_PROG_TYPE_LSM")
e2842be53d4f ("libbpf: Add setter for initial value for internal maps")
bd5ca3ef93cd ("libbpf: Add function to set link XDP fd while specifying old program")
b35f14f41041 ("libbpf: Split BTF presence checks into libbpf- and kernel-specific parts")
c016b68edc7a ("libbpf: Add bpf_link pinning/unpinning")
ff26ce5cd768 ("libbpf: Add support for dynamic program attach target")
dd88aed92d01 ("libbpf: Bump libpf current version to v0.0.8")
5327644614a1 ("libbpf: Relax check whether BTF is mandatory")
2db6eab18b97 ("libbpf: Add support for program extensions")
a6ed02cac690 ("libbpf: Load btf_vmlinux only once per object.")
b7d7f3e185b6 ("libbpf: Simplify BTF initialization logic")
fb2426ad00b1 ("libbpf: Expose bpf_find_kernel_btf as a LIBBPF_API")
1d1a3bcffe36 ("libbpf: Poison kernel-only integer types")
2d3eb67f64ec ("libbpf: Sanitize global functions")
590a00888250 ("bpf: libbpf: Add STRUCT_OPS support")
17328d618c17 ("bpf: Synch uapi bpf.h to tools/")
630628cb7dc3 ("libbpf: BTF is required when externs are present")
81bfdd087bf3 ("libbpf: Put Kconfig externs into .kconfig section")
d69587062c34 ("libbpf: Add bpf_link__disconnect() API to preserve underlying BPF resource")
dc3a2d254782 ("libbpf: Print hint about ulimit when getting permission denied error")
330a73a7b6ca ("selftests/bpf: Add tests for libbpf-provided externs")
2ad97d473db5 ("bpftool: Generate externs datasec in BPF skeleton")
166750bc1dd2 ("libbpf: Support libbpf-provided extern variables")
ac9d1389631a ("libbpf: Extract internal map names into constants")
197448eaac1a ("selftests/bpf: Add test validating data section to struct convertion layout")
985ead416df3 ("bpftool: Add skeleton codegen command")
d66562fba1ce ("libbpf: Add BPF object skeleton support")
13acb508ae20 ("libbpf: Postpone BTF ID finding for TRACING programs to load phase")
eba9c5f498a1 ("libbpf: Refactor global data map initialization")
01af3bf06755 ("libbpf: Expose BPF program's function name")
9f81654eebe8 ("libbpf: Expose BTF-to-C type declaration emitting API")
3d208f4ca111 ("libbpf: Expose btf__align_of() API")
917f6b7b07a4 ("libbpf: Add BPF_EMBED_OBJ macro for embedding BPF .o files")
612d05be250a ("libbpf: Move non-public APIs from libbpf.h to libbpf_internal.h")
d7a18ea7e8b6 ("libbpf: Add generic bpf_program__attach()")
0d13bfce023a ("libbpf: Don't require root for bpf_object__open()")
6803ee25f0ea ("libbpf: Extract and generalize CPU mask parsing logic")
67d69ccdf389 ("libbpf: Recognize SK_REUSEPORT programs from section name")
09c4708d3cf4 ("libbpf: Bump libpf current version to v0.0.7")
53f8dd434b6f ("libbpf: Fix global variable relocation")
b615e5a1e067 ("libbpf: Fix usage of u32 in userspace code")
f9a7cf6eb17c ("bpf: Introduce BPF_TRACE_x helper for the tracing tests")
c4781e37c6a2 ("selftests/bpf: Add BPF trampoline performance test")
393cdfbee809 ("libbpf: Support initialized global variables")
8983b731ceb4 ("libbpf: Fix various errors and warning reported by checkpatch.pl")
1f8e2bcb2cd5 ("libbpf: Refactor relocation handling")
