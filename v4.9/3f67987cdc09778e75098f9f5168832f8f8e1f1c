3f67987cdc09 ("ptrace: Provide set/get interface for syscall user dispatch")
43360686328b ("syscall_user_dispatch: Split up set_syscall_user_dispatch()")
90f093fa8ea4 ("rseq, ptrace: Add PTRACE_GET_RSEQ_CONFIGURATION request")
a4452e671c67 ("docs: Document Syscall User Dispatch")
1446e1df9eb1 ("kernel: Implement selective syscall userspace redirection")
5903f61e0353 ("entry: Fix boot for !CONFIG_GENERIC_ENTRY")
785dc4eb7fd7 ("audit: Migrate to use SYSCALL_WORK flag")
64eb35f701f0 ("ptrace: Migrate TIF_SYSCALL_EMU to use SYSCALL_WORK flag")
64c19ba29b66 ("ptrace: Migrate to use SYSCALL_TRACE flag")
524666cb5de7 ("tracepoints: Migrate to use SYSCALL_WORK flag")
23d67a54857a ("seccomp: Migrate to use SYSCALL_WORK flag")
b86678cf0f1d ("entry: Wire up syscall_work in common entry code")
3136b93c3fb2 ("entry: Expose helpers to migrate TIF to SYSCALL_WORK flags")
0f2122045b94 ("io_uring: don't rely on weak ->files references")
e3bc8e9dad7f ("io_uring: unconditionally grab req->task")
f573d384456b ("io_uring: move dropping of files into separate helper")
b6ec41346103 ("core/entry: Report syscall correctly for trace and audit")
4facb95b7ada ("x86/entry: Unbreak 32bit fast syscall")
bb175342aa64 ("io_uring: fix racy req->flags modification")
3b2a4439e0ae ("io_uring: get rid of kiocb_wait_page_queue_init()")
