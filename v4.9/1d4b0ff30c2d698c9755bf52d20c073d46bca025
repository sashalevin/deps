1d4b0ff30c2d ("crypto: x86/aesni - Use local .L symbols for code")
c75962f1c439 ("crypto: x86/aesni - Use RIP-relative addressing")
032d049ea0f4 ("crypto: aesni - Use TEST %reg,%reg instead of CMP $0,%reg")
d7866e503bdc ("crypto: x86 - Remove include/asm/inst.h")
74d8b90a8890 ("x86/asm/crypto: Annotate local functions")
603f8c3b0dbb ("crypto: aesni - Add scatter/gather avx stubs, and use them in C")
e044d5056396 ("crypto: aesni - Introduce partial block macro")
ec8c02d9a30b ("crypto: aesni - Introduce READ_PARTIAL_BLOCK macro")
517a448e0984 ("crypto: aesni - Move ghash_mul to GCM_COMPLETE")
a44b419fe5ae ("crypto: aesni - Fill in new context data structures")
1cb1bcbb567d ("crypto: aesni - Merge avx precompute functions")
38003cd26c9f ("crypto: aesni - Split AAD hash calculation to separate macro")
e377bedb09d6 ("crypto: aesni - Add GCM_COMPLETE macro")
5350b0f56343 ("crypto: aesni - support 256 byte keys in avx asm")
2426f64bc51f ("crypto: aesni - Macro-ify func save/restore")
de85fc46b103 ("crypto: aesni - Introduce gcm_context_data")
f9b1d6467860 ("crypto: aesni - Merge GCM_ENC_DEC")
8b65f34c5821 ("crypto: x86/chacha20 - refactor to allow varying number of rounds")
4af78261870a ("crypto: x86/chacha20 - add XChaCha20 support")
180def6c4ad1 ("crypto: x86/chacha20 - Add a 4-block AVX-512VL variant")
