fe4d0b6317e3 ("drm: omapdrm: Export correct scatterlist for TILER backed BOs")
cec4fa7511ef ("drm/omap: use refcount API to track the number of users of dma_addr")
3cbd0c587b12 ("drm/omap: gem: Replace struct_mutex usage with omap_obj private lock")
2491244d7709 ("drm/omap: gem: Merge __omap_gem_get_pages() and omap_gem_attach_pages()")
620063e10ed4 ("drm/omap: gem: Rename GEM function with omap_gem_* prefix")
6ada1328642b ("gpu: drm: omapdrm: Adding new typedef vm_fault_t")
dfe9cfccb264 ("drm: omapdrm: Use kernel integer types")
b55614129756 ("drm: omapdrm: Deconstruct the omap_drv.h header.")
7fb15c480eea ("drm: omapdrm: Pass drm_device to omap_gem_resume()")
a7631c4b9846 ("drm/omap: Filter displays mode based on bandwidth limit")
84f9bd12d46d ("soc: qcom: ipa: IPA endpoints")
84f9bd12d46d ("soc: qcom: ipa: IPA endpoints")
84f9bd12d46d ("soc: qcom: ipa: IPA endpoints")
84f9bd12d46d ("soc: qcom: ipa: IPA endpoints")
84f9bd12d46d ("soc: qcom: ipa: IPA endpoints")
84f9bd12d46d ("soc: qcom: ipa: IPA endpoints")
84f9bd12d46d ("soc: qcom: ipa: IPA endpoints")
84f9bd12d46d ("soc: qcom: ipa: IPA endpoints")
84f9bd12d46d ("soc: qcom: ipa: IPA endpoints")
84f9bd12d46d ("soc: qcom: ipa: IPA endpoints")
