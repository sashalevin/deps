93690cdf3060 ("leds: trigger: add support for LED-private device triggers")
11f700022137 ("leds: remove PAGE_SIZE limit of /sys/class/leds/<led>/trigger")
b2b998c0f944 ("leds: class: Improve LED and LED flash class registration API")
3f467ebe9e89 ("leds: pwm: Support ACPI via firmware-node framework")
5be102eb161a ("leds: max77650: Add LEDs support")
8146aace60c7 ("led: triggers: Initialize LED_INIT_DEFAULT_TRIGGER if trigger is brought after class")
02d31765bb35 ("led: triggers: Add LED_INIT_DEFAULT_TRIGGER flag")
c4f7bd4a4275 ("led: triggers: Break the for loop after default trigger is found")
cb14e6d6d8f4 ("leds: pwm: Use OF variant of LED registering function")
e5a0436dd08a ("leds: pwm: Simplify with resource-managed devm_led_classdev_register()")
a7e7a3156300 ("leds: triggers: add device attribute support")
2282e125a406 ("leds: triggers: let struct led_trigger::activate() return an error code")
6d71021ab3b0 ("leds: class: ensure workqueue is initialized before setting brightness")
9e50d5fb0d18 ("leds: add LED driver for CR0014114 board")
06f502f57d0d ("leds: trigger: Introduce a NETDEV trigger")
55edd1dad96b ("leds: Replace flags bit shift with BIT() macros")
7df4f9a9f066 ("leds: ledtrig-activity: Add a system activity LED trigger")
f5808ac158f2 ("leds: gpio: Allow LED to retain state at shutdown")
cd3b0b05328e ("leds: cpcap: new driver")
442c609830e9 ("leds: core: add OF variants of LED registering functions")
0cb8eb30d425 ("leds: class: Add new optional brightness_hw_changed attribute")
a9c6ce57ec2f ("led: core: Use atomic bit-field for the blink-flags")
