b5a756a72228 ("Revert "drm/i915: mark all device info struct with __initconst"")
42a3ae88500e ("drm/i915: Organize GEN features inheritance.")
e6b20bf1b77c ("drm/i915/cfl: Remove alpha support protection.")
e57f1c02155f ("drm/i915/gen9+: Add has_ipc flag in device info structure")
5d95c24867ae ("drm/i915: Move device_info.has_snoop into the static tables")
5b54eddd3920 ("drm/i915: mark all device info struct with __initconst")
0890540e21cf ("drm/i915: add GT number to intel_device_info")
6602be0e2c61 ("drm/i915/cnl: Cannonlake color init.")
142bc7d99bcf ("drm/i915: Modify error handler for per engine hang recovery")
d5367307d409 ("drm/i915: Wait for concurrent global resets to complete")
cebfcead63de ("drm/i915/DMC/CNL: Load DMC on CNL")
84cd843e7152 ("drm/i915/cfl: Coffee Lake reuses Kabylake DMC.")
c0f82960fa6d ("drm/i915/guc: Load GuC on Coffee Lake")
d29fe702c9cb ("drm/i915/cfl: Add Coffee Lake PCI IDs for U Sku.")
ccfd13215fd2 ("drm/i915/cfl: Add Coffee Lake PCI IDs for H Sku.")
b056f8f3d6b9 ("drm/i915/cfl: Add Coffee Lake PCI IDs for S Skus.")
71851fa82f4d ("drm/i915/cfl: Introduce Coffee Lake platform definition.")
94829de433db ("drm/i915: Unify GT* and GT3 definitions")
e918d79a5d0a ("drm/i915/cnl: Add Cannonlake PCI IDs for U-skus.")
413f3c19f8ec ("drm/i915/cnl: Introduce Cannonlake platform defition.")
46f788ba2e09 ("drm/i915: Extract skl_plane_ctl()")
8c185ecaf4ee ("drm/i915: Split I915_RESET_IN_PROGRESS into two flags")
1604a86d0805 ("drm/i915: Extend rpm wakelock during i915_handle_error()")
8fc2a4e42799 ("drm/i915/uc: Simplify firmware path handling")
6cd5a72c3577 ("drm/i915/guc: Simplify intel_guc_init_hw()")
d2be9f2f41a8 ("drm/i915/guc: Extract param logic form guc_init_fw()")
29ad6a30de84 ("drm/i915/uc: Introduce intel_uc_init_fw()")
4c0fed7911fa ("drm/i915/uc: Move intel_uc_fw_fetch() to intel_uc.c")
882d1db09bf0 ("drm/i915/uc: Rename intel_?uc_{setup, load}() to _init_hw()")
0417a2b3a15b ("drm/i915/uc: Drop superfluous externs in intel_uc.h")
dd584fc0711a ("drm/i915: Use I915_READ_FW for plane updates")
78587de299dd ("drm/i915: Organize plane register writes into tighter bunches")
7762ebb9a455 ("drm/i915/guc: Release GuC interrupts in i915_guc_submission_disable")
cbf4b77af11b ("drm/i915/guc: Fix request re-submission after reset")
9735b04d0c1b ("drm/i915: Initialize pm_intr_keep during intel_irq_init for GuC")
13e867f6faaa ("i915/HuC: Add an extra check for platforms that do not have HUC")
9160095c0e89 ("drm/i915: use BUILD_BUG_ON to ensure platform name has been set up")
349ab9192cc3 ("drm/i915/guc: Make wq_lock irq-safe")
e07051142cbc ("drm/i915: Refactor direct GPU reset from request waiters")
a49625f90662 ("drm/i915: Replace reset_wait_queue with default_wake_function")
d6a2289d9d6b ("drm/i915: Remove the preempted request from the execution queue")
cced5e2f098d ("drm/i915: Take a reference whilst processing the signaler request")
754c9fd57649 ("drm/i915: Protect the request->global_seqno with the engine->timeline lock")
fe49789fab97 ("drm/i915: Deconstruct execute fence")
541ca6ed79f0 ("drm/i915: Inline __i915_gem_request_wait_for_execute()")
7de53bf7e6f3 ("drm/i915: Add ourselves to the gpu error waitqueue for the entire wait")
4b36b2e50677 ("drm/i915: Use a local to shorten req->i915->gpu_error.wait_queue")
9b6586ae9f6b ("drm/i915: Keep a global seqno per-engine")
309663ab7b4f ("drm/i915: Check against the signaled bit for fences/requests")
354d036fcf70 ("drm/i915/tracepoints: Add request submit and execute tracepoints")
