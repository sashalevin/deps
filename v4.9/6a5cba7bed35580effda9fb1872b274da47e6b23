6a5cba7bed35 ("KVM: x86/pmu: Correct the mask used in a pmu event filter lookup")
89cb454ea984 ("KVM: x86/pmu: Extract check_pmu_event_filter() handling both GP and fixed counters")
95b065bf5c43 ("KVM: x86/pmu: Use different raw event masks for AMD and Intel")
710c47651431 ("KVM: x86/pmu: Use AMD64_RAW_EVENT_MASK for PERF_TYPE_RAW")
b8bfee85f130 ("KVM: x86/pmu: Don't truncate the PerfEvtSeln MSR when creating a perf event")
7ff775aca48a ("KVM: x86/pmu: Use binary search to check filtered events")
7c174f305cbe ("KVM: x86/pmu: Refactoring find_arch_event() to pmc_perf_hw_id()")
cb1d220da0fa ("KVM: x86/pmu: Fix reserved bits for AMD PerfEvtSeln register")
9aa4f622460f ("KVM: vmx/pmu: Release guest LBR event via lazy release mechanism")
e6209a3bef79 ("KVM: vmx/pmu: Emulate legacy freezing LBRs on virtual PMI")
1b5ac3226a1a ("KVM: vmx/pmu: Pass-through LBR msrs when the guest LBR event is ACTIVE")
8e12911b243e ("KVM: vmx/pmu: Create a guest LBR event when vcpu sets DEBUGCTLMSR_LBR")
c646236344e9 ("KVM: vmx/pmu: Add PMU_CAP_LBR_FMT check when guest LBR is enabled")
9c9520ce8833 ("KVM: vmx/pmu: Add PMU_CAP_LBR_FMT check when guest LBR is enabled")
a755753903a4 ("KVM: x86/pmu: preserve IA32_PERF_CAPABILITIES across CPUID refresh")
d855066f8172 ("KVM: VMX: read/write MSR_IA32_DEBUGCTLMSR from GUEST_IA32_DEBUGCTL")
8e5332402164 ("KVM: VMX: Convert vcpu_vmx.exit_reason to a union")
2cdef91cf882 ("KVM: x86: handle MSR_IA32_DEBUGCTLMSR with report_ignored_msrs")
3eb900173c71 ("KVM: x86: VMX: Prevent MSR passthrough when MSR access is denied")
476c9bd8e997 ("KVM: x86: Prepare MSR bitmaps for userspace tracked MSRs")
