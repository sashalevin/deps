eaf7b66b76f8 ("mm, memcg: Prevent memory.oom.group load/store tearing")
3d8b38eb81ca ("mm, oom: introduce memory.oom.group")
5989ad7b5ede ("mm, oom: refactor oom_kill_process()")
cd04ae1e2dc8 ("mm, oom: do not rely on TIF_MEMDIE for memory reserves access")
c288983dddf7 ("mm/page_alloc.c: make sure OOM victim can try allocations with no watermarks once")
ccda7f4360be ("mm: memcontrol: use node page state naming scheme for memcg")
71cd31135d4c ("mm: memcontrol: re-use node VM page state enum")
df0e53d0619e ("mm: memcontrol: re-use global VM event enum")
31176c781508 ("mm: memcontrol: clean up memory.events counting function")
2a2e48854d70 ("mm: vmscan: fix IO/refault regression in cache workingset transition")
d6622f6365db ("mm/vmscan: more restrictive condition for retry in do_try_to_free_pages")
9a4caf1e9fa4 ("mm: memcontrol: provide shmem statistics")
553af430e7c9 ("mm: rmap: fix huge file mmap accounting in the memcg stats")
bbef938429f5 ("mm: vmscan: remove old flusher wakeup from direct reclaim path")
726d061fbd36 ("mm: vmscan: kick flushers when we encounter dirty pages on the LRU")
9a67f6488eca ("mm: consolidate GFP_NOFAIL checks in the allocator slowpath")
a8e99259e7e3 ("mm, page_alloc: warn_alloc print nodemask")
71ab6cfe88dc ("mm, vmscan: consider eligible zones in get_scan_count")
fd538803731e ("mm, vmscan: cleanup lru size claculations")
dcec0b60a821 ("mm, vmscan: add mm_vmscan_inactive_list_is_low tracepoint")
