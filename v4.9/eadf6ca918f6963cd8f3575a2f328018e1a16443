eadf6ca918f6 ("can: flexcan: add CAN-FD mode support")
d9b90b05fd78 ("can: flexcan: use struct canfd_frame for CAN classic frame")
890599bc8618 ("can: flexcan: flexcan_set_bittiming(): move setup of CAN-2.0 bitiming into separate function")
ef4b623b141f ("can: flexcan: quirks: get rid of long lines")
555f6e568dfb ("can: flexcan: sort include files alphabetically")
4e9c9484b085 ("can: rx-offload: Prepare for CAN FD support")
678d85ed8554 ("can: ti_hecc: add fifo overflow error reporting")
99383749c259 ("can: ti_hecc: release the mailbox a bit earlier")
10f5d55ddcbf ("can: ti_hecc: keep MIM and MD set")
d763ab3044f0 ("can: rx-offload: can_rx_offload_offload_one(): use ERR_PTR() to propagate error value in case of errors")
4e9016bee3bf ("can: rx-offload: can_rx_offload_offload_one(): increment rx_fifo_errors on queue overflow or OOM")
a2dc3f5e1022 ("can: rx-offload: can_rx_offload_offload_one(): do not increase the skb_queue beyond skb_queue_len_max")
d7bda7307020 ("can: dev: avoid long lines")
4c7f71548515 ("can: ti_hecc: use timestamp based rx-offloading")
ca10989632d8 ("can: flexcan: implement can Runtime PM")
6cbf76028dca ("can: flexcan: split the Message Buffer RAM area")
0517961ccdf1 ("can: flexcan: Add provision for variable payload size")
5156c7b11f35 ("can: flexcan: move rx_offload_add() from flexcan_probe() to flexcan_open()")
7ad0f53a394b ("can: flexcan: flexcan_chip_start(): enable loopback mode in flexcan")
de3578c198c6 ("can: flexcan: add self wakeup support")
22233f7bf2c9 ("can: flexcan: FLEXCAN_IFLAG_MB: add () around macro argument")
ed72bc8bcb92 ("can: flexcan: handle tx-complete CAN frames via rx-offload infrastructure")
a4310fa2f246 ("can: dev: can_get_echo_skb(): factor out non sending code to __can_get_echo_skb()")
e05237f9da42 ("can: flexcan: remove not needed struct flexcan_priv::tx_mb and struct flexcan_priv::tx_mb_idx")
cbffaf7aa09e ("can: flexcan: Always use last mailbox for TX")
5178b7cd8e42 ("can: flexcan: Unlock the MB unconditionally")
0e030a373df3 ("can: flexcan: fix endianess detection")
