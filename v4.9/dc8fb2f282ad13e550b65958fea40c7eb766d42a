dc8fb2f282ad ("mm: dump_page(): additional diagnostics for huge pinned pages")
6197ab984b41 ("mm: improve dump_page() for compound pages")
4a55c0474a92 ("mm/hotplug: silence a lockdep splat with printk()")
fe4c86c916d9 ("mm: remove "count" parameter from has_unmovable_pages()")
3f9903b9ca5e ("mm: remove the memory isolate notifier")
eddb1c228f79 ("mm/gup: introduce pin_user_pages*() and FOLL_PIN")
f4000fdf435b ("mm/gup: allow FOLL_FORCE for get_user_pages_fast()")
c4237f8b1f4f ("mm: fix get_user_pages_remote()'s handling of FOLL_LONGTERM")
5b57b8f22709 ("mm/debug.c: always print flags in dump_page()")
756d25be457f ("mm/page_isolation.c: convert SKIP_HWPOISON to MEMORY_OFFLINE")
d2dfbe47fa0e ("mm/gup.c: fix comments of __get_user_pages() and get_user_pages_remote()")
6855ac4acd3b ("mm/debug.c: PageAnon() is true for PageKsm() pages")
76a1850e4572 ("mm/debug.c: __dump_page() prints an extra line")
f9652594195f ("mm: untag user pointers in mm/gup.c")
bfe7b00de6d1 ("mm, thp: introduce FOLL_SPLIT_PMD")
dd625285910d ("drivers/base/memory.c: get rid of find_memory_block_hinted()")
ea8846411ad6 ("mm/memory_hotplug: move and simplify walk_memory_blocks()")
fbcf73ce6582 ("mm/memory_hotplug: rename walk_memory_range() and pass start+size instead of pfns")
90ec010fe0d6 ("drivers/base/memory: use "unsigned long" for block ids")
2491f0a2c0b1 ("mm: section numbers use the type "unsigned long"")
4c4b7f9ba948 ("mm/memory_hotplug: remove memory block devices before arch_remove_memory()")
db051a0dac13 ("mm/memory_hotplug: create memory block devices after arch_add_memory()")
80ec922dbd87 ("mm/memory_hotplug: allow arch_remove_memory() without CONFIG_MEMORY_HOTREMOVE")
1811582587c4 ("drivers/base/memory: pass a block_id to init_memory_block()")
22eb634632a2 ("arm64/mm: add temporary arch_remove_memory() implementation")
eca499ab3749 ("mm/hotplug: make remove_memory() interface usable")
817be129e6f2 ("mm: validate get_user_pages_fast flags")
050a9adc6438 ("mm: consolidate the get_user_pages* implementations")
d3649f68b433 ("mm: reorder code blocks in gup.c")
67a929e097b7 ("mm: rename CONFIG_HAVE_GENERIC_GUP to CONFIG_HAVE_FAST_GUP")
7b9afb86b632 ("sparc64: use the generic get_user_pages_fast code")
5875509d2f30 ("sparc64: define untagged_addr()")
3c9b9accad9f ("sh: use the generic get_user_pages_fast code")
39656e83dab9 ("mm: lift the x86_32 PAE version of gup_get_pte to common code")
26f4c328079d ("mm: simplify gup_fast_permitted")
f455c854877d ("mm: use untagged_addr() for get_user_pages_fast addresses")
7ac870747988 ("x86/vdso: Switch to generic vDSO implementation")
ff17bbe0bb40 ("x86/vdso: Prevent segfaults due to hoisted vclock reads")
7e300dabb7e7 ("treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 223")
b03641af6809 ("mm: move buddy list manipulations into helpers")
136ac591f047 ("mm: update references to page _refcount")
ac5c94264580 ("mm/memory_hotplug: make __remove_pages() and arch_remove_memory() never fail")
9d1d887d785b ("mm/memory_hotplug: make __remove_section() never fail")
cb7b3a3685b2 ("mm/memory_hotplug: make unregister_memory_section() never fail")
d9eb1417c77d ("mm/memory_hotplug: release memory resource after arch_remove_memory()")
5557c766abad ("mm, memory_hotplug: cleanup memory offline path")
063b8a4cee80 ("drivers/base/memory.c: clean up relics in function parameters")
fc1d8e7cca2d ("mm: introduce put_user_page*(), placeholder versions")
7af75561e171 ("mm/gup: add FOLL_LONGTERM capability to GUP fast")
73b0140bf0fe ("mm/gup: change GUP fast to use flags rather than a write 'bool'")
