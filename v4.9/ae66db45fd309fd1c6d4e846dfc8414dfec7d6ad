ae66db45fd30 ("saner calling conventions for unlazy_child()")
9deed3ebca24 ("new helper: traverse_mounts()")
a9dc1494a782 ("expand the only remaining call of path_lookup_conditional()")
20e343571cef ("lookup_fast(): take mount traversal into callers")
c153007b7b7a ("teach handle_mounts() to handle RCU mode")
b023e1728bec ("lookup_fast(): consolidate the RCU success case")
db3c9ade50b1 ("handle_mounts(): pass dentry in, turn path into a pure out argument")
e73cabff5917 ("do_last(): collapse the call of path_to_nameidata()")
da5ebf5aa676 ("lookup_open(): saner calling conventions (return dentry on success)")
239eb983383b ("atomic_open(): saner calling conventions (return dentry on success)")
bd7c4b508344 ("handle_mounts(): start building a sane wrapper for follow_managed()")
31d1726d7250 ("make build_open_flags() treat O_CREAT | O_EXCL as implying O_NOFOLLOW")
1c9f5e06a613 ("follow_automount() doesn't need the entire nameidata")
26df6034fdb2 ("fix automount/automount race properly")
8f11538ebe98 ("do_add_mount(): lift lock_mount/unlock_mount into callers")
72ba29297e14 ("namei: LOOKUP_NO_XDEV: block mountpoint crossing")
4b99d4996979 ("namei: LOOKUP_NO_MAGICLINKS: block magic-link resolution")
278121417a72 ("namei: LOOKUP_NO_SYMLINKS: block symlink resolution")
740a16782750 ("namei: allow set_root() to produce errors")
1bc82070fa27 ("namei: allow nd_jump_link() to produce errors")
2fa6b1e01a9b ("fs/namei.c: fix missing barriers when checking positivity")
6c2d4798a8d1 ("new helper: lookup_positive_unlocked()")
d41efb522e90 ("fs/namei.c: pull positivity check into follow_managed()")
