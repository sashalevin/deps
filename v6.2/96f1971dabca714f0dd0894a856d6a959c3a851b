96f1971dabca ("mm/damon/paddr: report filter-passed bytes back for normal actions")
b696722d784f ("mm/damon/paddr: introduce DAMOS_MIGRATE_HOT action for promotion")
b51820ebea65 ("mm/damon/paddr: introduce DAMOS_MIGRATE_COLD action for demotion")
b6993be23601 ("mm/damon/paddr: minor refactor of damon_pa_mark_accessed_or_deactivate()")
dd411433129c ("mm/damon/paddr: minor refactor of damon_pa_pageout()")
dd52a61da0dd ("mm/damon/paddr: fix folio_nr_pages() after folio_put() in damon_pa_mark_accessed_or_deactivate()")
3f98c9a62c33 ("mm/damon/paddr: fix missing folio_put()")
be2d57563822 ("mm: change to return bool for folio_isolate_lru()")
4a64981dfee9 ("mm/mempolicy: convert migrate_page_add() to migrate_folio_add()")
3dae02bbd07f ("mm/mempolicy: convert queue_pages_pte_range() to queue_folios_pte_range()")
de1f5055523e ("mm/mempolicy: convert queue_pages_pmd() to queue_folios_pmd()")
07bb1fbaa2bb ("mm/damon/paddr: convert damon_pa_*() to use a folio")
5a9e34747c9f ("mm/swap: convert deactivate_page() to folio_deactivate()")
f70da5ee8fe1 ("mm/damon: convert damon_pa_mark_accessed_or_deactivate() to use folios")
07e8c82b5eff ("madvise: convert madvise_cold_or_pageout_pte_range() to use folios")
18250e78f9c7 ("mm/damon/paddr: support DAMOS filters")
6a6fe9ebd571 ("mm: swap: convert mark_page_lazyfree() to folio_mark_lazyfree()")
fc986a38b670 ("mm: huge_memory: convert madvise_free_huge_pmd to use a folio")
