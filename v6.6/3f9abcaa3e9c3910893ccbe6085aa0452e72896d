3f9abcaa3e9c ("mm: introduce pte_move_swp_offset() helper which can move offset bidirectionally")
a62fb92ac12e ("mm: swap: free_swap_and_cache_nr() as batched free_swap_and_cache()")
d7d0d389ff90 ("mm: swap: remove CLUSTER_FLAG_HUGE from swap_cluster_info:flags")
82b1c07a0af6 ("mm: swap: fix race between free_swap_and_cache() and swapoff()")
ac96cc4d1ced ("mm: make folio_pte_batch available outside of mm/memory.c")
c010d47f107f ("mm: thp: split huge page to any lower order pages")
46d44d09d24c ("mm: page_owner: add support for splitting to any order in split page_owner")
b8791381d7ed ("mm: memcg: make memcg huge page split support any order split")
9a581c12cddb ("mm/page_owner: use order instead of nr in split_page_owner()")
502003bb76b8 ("mm/memcg: use order instead of nr in split_page_memcg()")
c6ec76a2ebc5 ("mm: add pte_batch_hint() to reduce scanning in folio_pte_batch()")
fb23bf6bd288 ("mm: tidy up pte_next_pfn() definition")
583ceaaa3399 ("mm: introduce pte_advance_pfn() and use for pte_next_pfn()")
10ebac4f95e7 ("mm/memory: optimize unmap/zap with PTE-mapped THP")
2b42a7e53150 ("mm/memory: factor out zapping folio pte into zap_present_folio_pte()")
d11838ed63ee ("mm/memory: further separate anon and pagecache folio handling in zap_present_pte()")
0cf18e839f64 ("mm/memory: handle !page case in zap_present_pte() separately")
789753e17c4d ("mm/memory: factor out zapping of present pte into zap_present_pte()")
d7c0e5f722ab ("mm/memory: ignore writable bit in folio_pte_batch()")
25365e10699a ("mm/memory: ignore dirty/accessed/soft-dirty bits in folio_pte_batch()")
