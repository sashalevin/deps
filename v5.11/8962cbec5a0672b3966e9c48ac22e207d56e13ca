8962cbec5a06 ("perf stat: Split process_counters() to share it with process_stat_round_event()")
8f97963e0976 ("perf stat: Reset aggr counts for each interval")
ae7e6492ee54 ("perf stat: Allocate aggr counts for recorded data")
ca68b374d040 ("perf stat: Add struct perf_stat_aggr to perf_stat_evsel")
f407aac4056c ("perf stat: Kill unused per-thread runtime stats")
429b8e84517b ("perf stat: Don't call perf_stat_evsel_id_init() repeatedly")
66b76e30ee36 ("perf stat: Convert perf_stat_evsel.res_stats array")
2ca0a3718da2 ("perf evsel: Derive CPUs and threads in alloc_counts")
51b826fadf4f ("perf cpumap: Rename empty functions")
3ac23d199c2b ("perf cpumap: Simplify equal function name")
88031a0de7d6 ("perf stat: Switch to cpu version of cpu_map__get()")
a023283fadef ("perf stat: Switch aggregation to use for_each loop")
01843ca01977 ("perf stat: Correct aggregation CPU map")
ca2c9b76bc3c ("perf stat: Add aggr creators that are passed a cpu")
112cb56164bc ("perf stat: Introduce config stat.bpf-counter-events")
0bdad97801af ("perf stat: Align CSV output for summary mode")
7fac83aaf2ee ("perf stat: Introduce 'bperf' to share hardware PMCs with BPF")
034f7ee130c1 ("perf stat: Fix wrong skipping for per-die aggregation")
fa853c4b839e ("perf stat: Enable counting events for BPF programs")
fbcdaa1908e8 ("perf build: Support build BPF skeletons with perf")
