3a3e841d050d ("drm/amdkfd: use vma_lookup() instead of find_vma()")
9527b9caf82b ("drm/amdkfd: evict svm bo worker handle error")
7ad153db5859 ("drm/amdkfd: handle VMA remove race")
740a451b0797 ("drm/amdkfd: Handle incomplete migration to system memory")
33c6bd989d5e ("drm/amdkfd: debug message to count successfully migrated pages")
75fa98d6e458 ("drm/amdkfd: clarify the origin of cpages returned by migration functions")
ca432dcc27a1 ("drm/amdkfd: handle svm partial migration cpages 0")
71cbfeb38141 ("drm/amdkfd: avoid conflicting address mappings")
2f617f4df8df ("drm/amdkfd: map SVM range with correct access permission")
ff891a2e6431 ("drm/amdkfd: check access permisson to restore retry fault")
1ade5f84cc25 ("drm/amdkfd: skip invalid pages during migrations")
1d5dbfe6c06a ("drm/amdkfd: classify and map mixed svm range pages in GPU")
278a708758b5 ("drm/amdkfd: use hmm range fault to get both domain pfns")
1fc160cfe17a ("drm/amdgpu: get owner ref in validate and map")
8c21fc49a8e6 ("drm/amdkfd: add owner ref param to get hmm pages")
3a61dae854cc ("drm/amdkfd: device pgmap owner at the svm migrate init")
d4ebc2007040 ("drm/amdkfd: implement counters for vm fault and migration")
0dc2bafb08c0 ("drm/amdkfd: pages_addr offset must be 0 for system range")
bf546940d5aa ("drm/amdgpu: flush TLB if valid PDE turns into PTE")
0ccc3ccf5b3a ("drm/amdgpu: re-apply "use the new cursor in the VM code" v2")
