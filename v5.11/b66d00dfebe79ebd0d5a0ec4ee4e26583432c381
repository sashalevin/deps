b66d00dfebe7 ("mm: memory-failure: make action_result() return int")
2ace36f0f557 ("mm: memory-failure: cleanup try_to_split_thp_page()")
405ce051236c ("mm/hwpoison: fix race between hugetlb free/demotion and memory_failure_hugetlb()")
888af2701db7 ("mm/memory-failure.c: fix race with changing page compound again")
d1fe111fb62a ("mm/hwpoison: avoid the impact of hwpoison_filter() return value on mce handler")
75ee64b3c9a9 ("mm/memory-failure.c: fix race with changing page more robustly")
91d005479e06 ("mm/hwpoison: mf_mutex for soft offline and unpoison")
e37e7b0b3bd5 ("mm, hwpoison: fix condition in free hugetlb page path")
4966455d9100 ("mm: hwpoison: handle non-anonymous THP correctly")
dd0f230a0a80 ("mm: hwpoison: refactor refcount check handling")
eac96c3efdb5 ("mm: filemap: check if THP has hwpoisoned subpage for PMD page fault")
ed8c2f492d4e ("mm/hwpoison: change argument struct page **hpagep to *hpage")
510d25c92ec4 ("mm/hwpoison: disable pcp for page_handle_poison()")
0ed950d1f281 ("mm,hwpoison: make get_hwpoison_page() call get_any_page()")
a3f5d80ea401 ("mm,hwpoison: send SIGBUS with error virutal address")
ea6d0630100b ("mm/hwpoison: do not lock page again when me_huge_page() successfully recovers")
47af12bae17f ("mm,hwpoison: return -EHWPOISON to denote that the page has already been poisoned")
171936ddaf97 ("mm/memory-failure: use a mutex to avoid memory_failure() races")
25182f05ffed ("mm,hwpoison: fix race with hugetlb page allocation")
f0953a1bbaca ("mm: fix typos in comments")
