17d707260765 ("drm/i915: extract intel_uncore_trace.[ch]")
dac2ec8d3ba2 ("drm/i915/pps: Decouple pps delays from VBT struct definition")
01389846f7d6 ("drm/i915: Plumb 'dsb' all way to the plane hooks")
84d2d0430f08 ("drm/i915/color: Extract intel_color_modeset()")
66bdc6a61e67 ("drm/i915/pps: add bxt_ prefix to pps_reset")
8a37cd4dc50e ("drm/i915/pps: convert intel_pps.[ch] to struct intel_display")
631ef2e6adb0 ("drm/i915/pps: pass intel_dp to pps_name()")
a9556637a233 ("drm/i915: move rawclk from runtime to display runtime info")
c7085d08c7e5 ("drm/i915/pps: Disable DPLS_GATING around pps sequence")
42c8065d83fa ("drm/i915: Pass the whole atomic state to intel_color_prepare_commit()")
91103ca3750c ("drm/i915: Add async flip tracepoint")
1eb28818c241 ("drm/i915/display: Wa 16021440873 is writing wrong register")
9a875f958062 ("drm/i915: pass dev_priv explicitly to DPLL")
b758cd8057e9 ("drm/i915: pass dev_priv explicitly to PP_DIVISOR")
07776fb3c8b3 ("drm/i915: pass dev_priv explicitly to PP_OFF_DELAYS")
dc368a87457a ("drm/i915: pass dev_priv explicitly to PP_ON_DELAYS")
de49b912d2ad ("drm/i915: pass dev_priv explicitly to PP_CONTROL")
fdc97fdc0469 ("drm/i915: pass dev_priv explicitly to PP_STATUS")
92cd5d046a96 ("drm/i915: pass dev_priv explicitly to _MMIO_PPS")
5f128aa1052e ("drm/i915: Plumb the entire atomic state into intel_color_check()")
