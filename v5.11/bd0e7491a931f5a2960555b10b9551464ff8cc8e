bd0e7491a931 ("mm, slub: convert kmem_cpu_slab protection to local_lock")
25c00c506e81 ("mm, slub: use migrate_disable() on PREEMPT_RT")
e0a043aa4145 ("mm, slub: protect put_cpu_partial() with disabled irqs instead of cmpxchg")
5a836bf6b09f ("mm: slub: move flush_cpu_slab() invocations __free_slab() invocations out of IRQ context")
fc1455f4e023 ("mm, slub: separate detaching of partial list in unfreeze_partials() from unfreezing")
c2f973ba42ed ("mm, slub: detach whole partial list at once in unfreeze_partials()")
8de06a6f48f2 ("mm, slub: discard slabs in unfreeze_partials() without irqs disabled")
f3ab8b6b9228 ("mm, slub: move irq control into unfreeze_partials()")
cfdf836e1f93 ("mm, slub: call deactivate_slab() without disabling irqs")
a019d2016258 ("mm, slub: move reset of c->page and freelist out of deactivate_slab()")
4b1f449dedd2 ("mm, slub: stop disabling irqs around get_partial()")
9f101ee89465 ("mm, slub: check new pages with restored irqs")
3f2b77e35a4f ("mm, slub: validate slab from partial list or page allocator before making it cpu slab")
6c1dbb674c5c ("mm, slub: restore irqs around calling new_slab()")
fa417ab7506f ("mm, slub: move disabling irqs closer to get_partial() in ___slab_alloc()")
0b303fb40286 ("mm, slub: do initial checks in ___slab_alloc() with irqs enabled")
e500059ba552 ("mm, slub: move disabling/enabling irqs to ___slab_alloc()")
1572df7cbcb4 ("mm, slub: restructure new page checks in ___slab_alloc()")
75c8ff281d7a ("mm, slub: return slab page from get_partial() and set c->page afterwards")
53a0de06e50a ("mm, slub: dissolve new_slab_objects() into ___slab_alloc()")
