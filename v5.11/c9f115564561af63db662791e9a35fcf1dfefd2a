c9f115564561 ("libbpf: Ensure undefined bpf_attr field stays 0")
9e926acda0c2 ("libbpf: Find correct module BTFs for struct_ops maps and progs.")
a4fbfdd7a160 ("libbpf: Fix BPF_MAP_TYPE_PERF_EVENT_ARRAY auto-pinning")
878d8def0603 ("libbpf: Rework feature-probing APIs")
e542f2c4cd16 ("libbpf: Auto-bump RLIMIT_MEMLOCK if kernel needs it for BPF")
0ed08d6725b5 ("libbpf: Add OPTS-based bpf_btf_load() API")
dbdd2c7f8cec ("libbpf: Add API to get/set log_level at per-program level")
74d980702357 ("libbpf: Use __u32 fields in bpf_map_create_opts")
341ac5ffc4bd ("libbpf: Support static initialization of BPF_MAP_TYPE_PROG_ARRAY")
a9606f405f2c ("libbpf: Use bpf_map_create() consistently internally")
992c4225419a ("libbpf: Unify low-level map creation APIs w/ new bpf_map_create()")
16e0c35c6f7a ("libbpf: Load global data maps lazily on legacy kernels")
8cccee9e91e1 ("libbpf: Change bpf_program__set_extra_flags to bpf_program__set_flags")
7615209f42a1 ("libbpf: Add runtime APIs to query libbpf version")
2dc1e488e5cd ("libbpf: Support BTF_KIND_TYPE_TAG")
417889346577 ("libbpf: Make perf_buffer__new() use OPTS-based interface")
6084f5dc928f ("libbpf: Ensure btf_dump__new() and btf_dump_opts are future-proof")
957d350a8b94 ("libbpf: Turn btf_dedup_opts into OPTS-based struct")
50dee7078b66 ("selftests/bpf: Fix bpf_prog_test_load() logic to pass extra log level")
a6ca71583137 ("libbpf: Add ability to get/set per-program load flags")
