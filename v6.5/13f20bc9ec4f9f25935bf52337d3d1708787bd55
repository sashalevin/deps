13f20bc9ec4f ("netfilter: nf_tables: store chain pointer in rule transaction")
d4f6f3994e13 ("netfilter: nf_tables: avoid usage of embedded nft_ctx")
0c2e0ee861de ("netfilter: nf_tables: pass more specific nft_trans_chain where possible")
06fcaca2ed1f ("netfilter: nf_tables: reduce trans->ctx.table references")
17d8f3ad36a5 ("netfilter: nf_tables: move bind list_head into relevant subtypes")
605efd54b504 ("netfilter: nf_tables: make struct nft_trans first member of derived subtypes")
216e7bf7402c ("netfilter: nf_tables: skip netdev hook unregistration if table is dormant")
31bf508be656 ("netfilter: nf_tables: Implement table adoption support")
0e1ea651c971 ("netfilter: nf_tables: shrink memory consumption of set elements")
9dad402b89e8 ("netfilter: nf_tables: expose opaque set element as struct nft_elem_priv")
6509a2e410c3 ("netfilter: nf_tables: set backend .flush always succeeds")
26cec9d4144e ("netfilter: nft_set_pipapo: no need to call pipapo_deactivate() from flush")
7d259f021aaa ("netfilter: nft_set_rbtree: prefer sync gc to async worker")
8079fc30f797 ("netfilter: nft_set_rbtree: rename gc deactivate+erase function")
cf5000a7787c ("netfilter: nf_tables: fix memleak when more than 255 elements expired")
4a9e12ea7e70 ("netfilter: nft_set_pipapo: call nft_trans_gc_queue_sync() in catchall GC")
96b33300fba8 ("netfilter: nft_set_rbtree: use read spinlock to avoid datapath contention")
7e9be1124dbe ("netfilter: nf_tables: Audit log setelem reset")
