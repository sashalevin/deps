632230ff1939 ("mm: rename mm_put_huge_zero_page to mm_put_huge_zero_folio")
5691753d73a2 ("mm: convert huge_zero_page to huge_zero_folio")
5beaee54a324 ("mm: add is_huge_zero_folio()")
dee3d0bef2b0 ("proc: rewrite stable_page_flags()")
85edc15a4c60 ("mm: remove folio_prep_large_rmappable()")
b7b098cf00a2 ("mm: always initialise folio->_deferred_list")
63b774993dd0 ("mm: convert free_swap_cache() to take a folio")
d4111eecdc3c ("mm: use a folio in __collapse_huge_page_copy_succeeded()")
4907e80b76af ("mm: convert free_pages_and_swap_cache() to use folios_put()")
c010d47f107f ("mm: thp: split huge page to any lower order pages")
46d44d09d24c ("mm: page_owner: add support for splitting to any order in split page_owner")
b8791381d7ed ("mm: memcg: make memcg huge page split support any order split")
9a581c12cddb ("mm/page_owner: use order instead of nr in split_page_owner()")
502003bb76b8 ("mm/memcg: use order instead of nr in split_page_memcg()")
8897277acfef ("mm: support order-1 folios in the page cache")
d7f861b9c43a ("mm/mmu_gather: add __tlb_remove_folio_pages()")
da510964c095 ("mm/mmu_gather: define ENCODED_PAGE_FLAG_DELAY_RMAP")
c30d6bc8d015 ("mm/mmu_gather: pass "delay_rmap" instead of encoded page to __tlb_remove_page_size()")
eb1521dad8f3 ("userfaultfd: handle zeropage moves by UFFDIO_MOVE")
