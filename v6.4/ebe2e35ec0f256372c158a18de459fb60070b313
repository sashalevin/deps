ebe2e35ec0f2 ("mm/rmap: introduce and use hugetlb_try_dup_anon_rmap()")
44887f399455 ("mm/rmap: introduce and use hugetlb_add_file_rmap()")
e135826b2da0 ("mm/rmap: introduce and use hugetlb_remove_rmap()")
9d5fafd5d882 ("mm/rmap: rename hugepage_add* to hugetlb_add*")
09c550508a4b ("mm/rmap: pass folio to hugepage_add_anon_rmap()")
132b180f06a7 ("mm/rmap: simplify PageAnonExclusive sanity checks when adding anon rmap")
c5c540034747 ("mm/rmap: move folio_test_anon() check out of __folio_set_anon()")
c66db8c0702c ("mm/rmap: move SetPageAnonExclusive out of __page_set_anon_rmap()")
fd63908706f7 ("mm/rmap: drop stale comment in page_add_anon_rmap and hugepage_add_anon_rmap()")
935d4f0c6dc8 ("mm: hugetlb: add huge page size param to set_huge_pte_at()")
86f35f69db8e ("rmap: add folio_add_file_rmap_range()")
ec8832d007cb ("mmu_notifiers: don't invalidate secondary TLBs as part of mmu_notifier_invalidate_range_end()")
8a13897fb0da ("mm: userfaultfd: support UFFDIO_POISON for hugetlbfs")
af19487f00f3 ("mm: make PTE_MARKER_SWAPIN_ERROR more general")
dba438bd7663 ("rmap: pass the folio to __page_check_anon_rmap()")
c33c794828f2 ("mm: ptep_get() conversion")
c7ad08804fae ("mm/memory: handle_pte_fault() use pte_offset_map_nolock()")
3db82b9374ca ("mm/memory: allow pte_offset_map[_lock]() to fail")
895f5ee464cc ("mm/khugepaged: allow pte_offset_map[_lock]() to fail")
c9c1ee20ee84 ("mm/huge_memory: split huge pmd under one pte_offset_map()")
