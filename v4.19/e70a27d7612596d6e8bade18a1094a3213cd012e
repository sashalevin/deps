e70a27d76125 ("drm/i915/selftests: Prepare memory region tests for obj->mm.lock removal")
ba12993c5228 ("drm/i915/selftests/perf: measure memcpy bw between regions")
6056e50033d9 ("drm/i915/gem: Support discontiguous lmem object maps")
3c7a44bbbfa7 ("drm/i915/selftests: Perform some basic cycle counting of MI ops")
f86dbacb3002 ("drm/i915: Switch obj->mm.lock lockdep annotations on its head")
1629224324b6 ("drm/i915/lmem: add the fake lmem region")
d9d54a530a70 ("drm/i915: Put future HW and their uAPIs under STAGING & BROKEN")
3fc794f27fec ("drm/i915: Split memory_region initialisation into its own file")
dd158d71a085 ("drm/i915/selftests: add sanity selftest for huge-GTT-pages")
11d723ceb297 ("drm/i915/selftests: prefer random sizes for the huge-GTT-page smoke tests")
23741bc81de9 ("drm/i915/selftests: extend coverage to include LMEM huge-pages")
340be48f2c5a ("drm/i915/selftests: add write-dword test for LMEM")
01377a0d7e66 ("drm/i915/lmem: support kernel mapping")
cb6d2467ace7 ("drm/i915: setup io-mapping for LMEM")
b908be543e44 ("drm/i915: support creating LMEM objects")
72405c3d7850 ("drm/i915: treat stolen as a region")
da1184cd41d4 ("drm/i915: treat shmem as a region")
3aae9d08532c ("drm/i915: enumerate and init each supported region")
7c98501acb94 ("drm/i915/region: support volatile objects")
2f0b97ca0211 ("drm/i915/region: support contiguous allocations")
232a6ebae419 ("drm/i915: introduce intel_memory_region")
d14a701b0070 ("drm/i915/selftests: Assign the intel_runtime_pm pointer for mock_uncore")
d30213e533fa ("drm/i915: Fix Kconfig indentation")
0e5493cab5ef ("drm/i915/stolen: make the object creation interface consistent")
2850748ef876 ("drm/i915: Pull i915_vma_pin under the vm->mutex")
11331125e148 ("drm/i915: Mark up address spaces that may need to allocate")
5e053450c1c3 ("drm/i915: Only track bound elements of the GTT")
b290a78b5c3d ("drm/i915: Use helpers for drm_mm_node booleans")
3cbad5d77749 ("drm/i915/gem: Refactor tests on obj->ops->flags")
a4311745bba9 ("drm/i915/userptr: Never allow userptr into the mappable GGTT")
