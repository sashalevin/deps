e3336cab2579 ("mm: memcg: fix memcg reclaim soft lockup")
45c7f7e1ef17 ("mm, memcg: decouple e{low,min} state mutations from protection checks")
03960e33187a ("mm/memcontrol.c: prevent missed memory.low load tears")
b3a7822e5e75 ("mm, memcg: prevent mem_cgroup_protected store tearing")
c3d532008661 ("mm, memcg: prevent memory.min load/store tearing")
f86b810c2610 ("mm, memcg: prevent memory.low load/store tearing")
8a931f801340 ("mm: memcontrol: recursive memory.low protection")
bc50bcc6e00b ("mm: memcontrol: clean up and document effective low/min calculations")
503970e42325 ("mm: memcontrol: fix memory.low proportional distribution")
0f6a5cff43d3 ("mm: vmscan: split shrink_node() into node part and memcgs part")
d2af339706be ("mm: vmscan: replace shrink_node() loop with a retry jump")
b5ead35e7e1d ("mm: vmscan: naming fixes: global_reclaim() and sane_reclaim()")
f87bccde6a7d ("mm/vmscan: remove unused lru_pages argument")
9783aa9917f8 ("mm, memcg: proportional memory.{low,min} reclaim")
0a432dcbeb32 ("mm: shrinker: make shrinker not depend on memcg kmem")
5ee04716c46c ("mm, reclaim: cleanup should_continue_reclaim()")
1c6c15971e47 ("mm, reclaim: make should_continue_reclaim perform dryrun detection")
1ba6fc9af35b ("mm: vmscan: do not share cgroup iteration between reclaimers")
28360f398778 ("mm, vmscan: do not special-case slab reclaim when watermarks are boosted")
1732d2b0117c ("mm/vmscan.c: add checks for incorrect handling of current->reclaim_state")
0308f7cf19c9 ("mm/vmscan.c: calculate reclaimed slab caches in all reclaim paths")
e5ca8071fe65 ("mm/vmscan.c: add a new member reclaim_state in struct shrink_control")
9852ae3fe529 ("mm, memcg: consider subtrees in memory.events")
f46b79120e94 ("mm/vmscan.c: simplify shrink_inactive_list()")
3481c37ffa1d ("mm/vmscan: drop may_writepage and classzone_idx from direct reclaim begin template")
886cf1901db9 ("mm: move recent_rotated pages calculation to shrink_inactive_list()")
7b47a9e7c8f6 ("Merge branch 'work.mount' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs")
