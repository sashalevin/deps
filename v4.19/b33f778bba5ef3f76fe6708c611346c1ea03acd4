b33f778bba5e ("kfence: alloc kfence_pool after system startup")
698361bca2d5 ("kfence: allow re-enabling KFENCE after system startup")
07e8481d3c38 ("kfence: always use static branches to guard kfence_alloc()")
08f6b10630f2 ("kfence: limit currently covered allocations when pool nearly full")
a9ab52bbcb52 ("kfence: move saving stack trace of allocations into __kfence_alloc()")
9a19aeb56650 ("kfence: count unexpectedly skipped allocations")
236e9f153852 ("kfence: skip all GFP_ZONEMASK allocations")
235a85cb32bb ("kfence: move the size check to the beginning of __kfence_alloc()")
407f1d8c1b5f ("kfence: await for allocation using wait_event")
9551158069ba ("kfence: make compatible with kmemleak")
0ce20dd84089 ("mm: add Kernel Electric-Fence infrastructure")
04013513cc84 ("mm, page_alloc: do not rely on the order of page_poison and init_on_alloc/free parameters")
ab130f9108dc ("mm: rename page_order() to buddy_order()")
257bea71582d ("mm/page_alloc: simplify __offline_isolated_pages()")
06be6ff3d2ec ("mm,hwpoison: rework soft offline for free pages")
fdd4fa1cd904 ("mm/page_alloc.c: fix early params garbage value accesses")
aa218795cb5f ("mm: Allow to offline unmovable PageOffline() pages via MEM_GOING_OFFLINE")
36e66c554b5c ("mm: introduce Reported pages")
624f58d8f463 ("mm: add function __putback_isolated_page")
6ab013631096 ("mm: use zone and order instead of free area in free_list manipulators")
