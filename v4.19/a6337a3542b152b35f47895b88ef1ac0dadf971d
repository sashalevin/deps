a6337a3542b1 ("KVM: x86: Move call to update_exception_bitmap() into VMX code")
c44d9b34701d ("KVM: x86: Invoke vendor's vcpu_after_set_cpuid() after all common updates")
32de2b5ee378 ("KVM: x86: update exception bitmap on CPUID changes")
aedbaf4f6afd ("KVM: x86: Extract kvm_update_cpuid_runtime() from kvm_update_cpuid()")
a76733a98752 ("KVM: x86: Introduce kvm_check_cpuid()")
36f37648ca98 ("KVM: X86: Move kvm_apic_set_version() to kvm_update_cpuid()")
0d3b2ba16ba6 ("KVM: X86: Go on updating other CPUID leaves when leaf 1 is absent")
18964092825a ("KVM: X86: Reset vcpu->arch.cpuid_nent to 0 if SET_CPUID* fails")
b899c13277a9 ("KVM: x86: Create mask for guest CR4 reserved bits in kvm_update_cpuid()")
6abe9c1386e5 ("KVM: X86: Move ignore_msrs handling upper the stack")
cbd717585b80 ("KVM: x86/pmu: Tweak kvm_pmu_get_msr to pass 'struct msr_data' in")
a71936ab46f1 ("kvm: x86: Cleanup vcpu->arch.guest_xstate_size")
139f7425fdf5 ("kvm: x86: Use KVM CPU capabilities to determine CR4 reserved bits")
afaf0b2f9b80 ("KVM: x86: Copy kvm_x86_ops by value to eliminate layer of indirection")
69c6f69aa306 ("KVM: x86: Set kvm_x86_ops only after ->hardware_setup() completes")
d008dfdb0e70 ("KVM: x86: Move init-only kvm_x86_ops to separate struct")
8e205a6b2a06 ("KVM: X86: correct meaningless kvm_apicv_activated() check")
727a7e27cf88 ("KVM: x86: rename set_cr3 callback and related flags to load_mmu_pgd")
689f3bf21628 ("KVM: x86: unify callbacks to load paging root")
408e9a318f57 ("KVM: CPUID: add support for supervisor states")
257038745cae ("KVM: x86: Move nSVM CPUID 0x8000000A handling into common x86 code")
a50718cc3f43 ("KVM: nSVM: Expose SVM features to L1 iff nested is enabled")
91661989d17c ("KVM: x86: Move VMX's host_efer to common x86 code")
703c335d0693 ("KVM: x86/mmu: Configure max page level during hardware setup")
bde772355958 ("KVM: x86/mmu: Merge kvm_{enable,disable}_tdp() into a common function")
213e0e1f500b ("KVM: SVM: Refactor logging of NPT enabled/disabled")
a1bead2abaa1 ("KVM: VMX: Directly query Intel PT mode when refreshing PMUs")
139085101f85 ("KVM: x86: Use KVM cpu caps to detect MSR_TSC_AUX virt support")
93c380e7b528 ("KVM: x86: Set emulated/transmuted feature bits via kvm_cpu_caps")
bd7919999047 ("KVM: x86: Override host CPUID results with kvm_cpu_caps")
bcf600ca8d21 ("KVM: x86: Remove the unnecessary loop on CPUID 0x7 sub-leafs")
09f628a0b49c ("KVM: x86: Fold CPUID 0x7 masking back into __do_cpuid_func()")
90d2f60f41f7 ("KVM: x86: Use KVM cpu caps to track UMIP emulation")
c10398b6d0dd ("KVM: x86: Use KVM cpu caps to mark CR4.LA57 as not-reserved")
8721f5b061eb ("KVM: x86: Add a helper to check kernel support when setting cpu cap")
b3d895d5c415 ("KVM: x86: Move XSAVES CPUID adjust to VMX's KVM cpu cap update")
3ec6fd8cf0ba ("KVM: VMX: Convert feature updates from CPUID to KVM cpu caps")
9b58b9857f22 ("KVM: SVM: Convert feature updates from CPUID to KVM cpu caps")
66a6950f9995 ("KVM: x86: Introduce kvm_cpu_caps to replace runtime CPUID masking")
9e6d01c2d908 ("KVM: x86: Refactor handling of XSAVES CPUID adjustment")
fb7d4377d513 ("KVM: x86: handle GBPAGE CPUID adjustment for EPT with generic code")
dbd068040c64 ("KVM: x86: Handle Intel PT CPUID adjustment in VMX code")
733deafc00df ("KVM: x86: Handle RDTSCP CPUID adjustment in VMX code")
d64d83d1e026 ("KVM: x86: Handle PKU CPUID adjustment in VMX code")
e574768f841b ("KVM: x86: Handle UMIP emulation CPUID adjustment in VMX code")
5ffec6f910dc ("KVM: x86: Handle INVPCID CPUID adjustment in VMX code")
6c7ea4b56bfe ("KVM: x86: Handle MPX CPUID adjustment in VMX code")
e745e37d4977 ("KVM: x86: Refactor cpuid_mask() to auto-retrieve the register")
b32666b13a72 ("KVM: x86: Introduce cpuid_entry_{change,set,clear}() mutators")
4c61534aaae2 ("KVM: x86: Introduce cpuid_entry_{get,has}() accessors")
