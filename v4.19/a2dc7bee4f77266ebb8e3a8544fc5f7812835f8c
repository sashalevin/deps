a2dc7bee4f77 ("inet: constify inet_sk_bound_dev_eq() net parameter")
944fd1aeacb6 ("net: allow unbound socket for packets in VRF when tcp_l3mdev_accept set")
08a75f106794 ("tcp: Fix data-races around sysctl_tcp_l3mdev_accept.")
eda090c31fe9 ("inet: rename INET_MATCH()")
5d368f03280d ("ipv6: add READ_ONCE(sk->sk_bound_dev_if) in INET6_MATCH()")
fdb5fd7f736e ("tcp: sk->sk_bound_dev_if once in inet_request_bound_dev_if()")
4915d50e300e ("inet: add READ_ONCE(sk->sk_bound_dev_if) in INET_MATCH()")
e8d0059000b2 ("net: inet: Open code inet_hash2 and inet_unhash2")
8ea1eebb49a2 ("net: inet: Remove count from inet_listen_hashbucket")
4f9bf2a2f5aa ("tcp: Don't acquire inet_listen_hashbucket::lock with disabled BH.")
333bb73f620e ("tcp: Keep TCP_CLOSE sockets in the reuseport group.")
5c040eaf5d17 ("tcp: Add num_closed_socks to struct sock_reuseport.")
01770a166165 ("tcp: fix race condition when creating child sockets from syncookies")
335759211a32 ("tcp: Forbid to bind more than one sockets haveing SO_REUSEADDR and SO_REUSEPORT per EUID.")
16f6c2518f9e ("tcp: Remove unnecessary conditions in inet_csk_bind_conflict().")
035ff358f2d9 ("net: Generate reuseport group ID on group creation")
8dbd76e79a16 ("tcp/dccp: fix possible race __inet_lookup_established()")
e3f0d761fcae ("net/core: Replace rcu_swap_protected() with rcu_replace_pointer()")
acdcecc61285 ("udp: correct reuseport selection with connected sockets")
99f3a064bc2e ("bpf: net: Add SO_DETACH_REUSEPORT_BPF")
