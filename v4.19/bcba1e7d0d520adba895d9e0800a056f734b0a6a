bcba1e7d0d52 ("take LOOKUP_{ROOT,ROOT_GRABBED,JUMPED} out of LOOKUP_... space")
4f0ed93fb92d ("LOOKUP_MOUNTPOINT: we are cleaning "jumped" flag too late")
6c6ec2b0a3e0 ("fs: add support for LOOKUP_CACHED")
e36cffed20a3 ("fs: make unlazy_walk() error handling consistent")
72287417abd1 ("open_last_lookups(): don't abuse complete_walk() when all we want is unlazy")
60ef60c7d729 ("__nd_alloc_stack(): make it return bool")
4542576b79a6 ("reserve_stack(): switch to __nd_alloc_stack()")
49055906af51 ("pick_link(): take reserving space on stack into a new helper")
aef9404d8cc3 ("pick_link(): more straightforward handling of allocation failures")
84f0cd9e83da ("pick_link(): pass it struct path already with normal refcounting rules")
957dd41d8842 ("move handle_dots(), follow_dotdot() and follow_dotdot_rcu() past step_into()")
c9a0f75d81e3 ("follow_dotdot{,_rcu}(): lift LOOKUP_BENEATH checks out of loop")
abc2c632e0ce ("follow_dotdot{,_rcu}(): lift switching nd->path to parent out of loop")
a6a7eb7628cf ("expand path_parent_directory() in its callers")
63b27720a476 ("path_parent_directory(): leave changing path->dentry to callers")
6b03f7edf43e ("path_connected(): pass mount and dentry separately")
c981a4828125 ("split the lookup-related parts of do_last() into a separate helper")
973d4b73fbaf ("do_last(): rejoin the common path even earlier in FMODE_{OPENED,CREATED} case")
8795e7d48288 ("do_last(): simplify the liveness analysis past finish_open_created")
5a2d3edd8dad ("do_last(): rejoing the common path earlier in FMODE_{OPENED,CREATED} case")
