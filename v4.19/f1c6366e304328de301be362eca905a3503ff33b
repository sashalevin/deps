f1c6366e3043 ("KVM: SVM: Add required changes to support intercepts under SEV-ES")
f9a4d621761a ("KVM: x86: introduce complete_emulated_msr callback")
8b474427cbee ("KVM: x86: use kvm_complete_insn_gp in emulating RDMSR/WRMSR")
fb04a1eddb1a ("KVM: X86: Implement ring-based dirty memory tracking")
c21d54f0307f ("KVM: x86: hyper-v: allow KVM_GET_SUPPORTED_HV_CPUID as a system ioctl")
a6a0b05da9f3 ("kvm: x86/mmu: Support dirty logging for the TDP MMU")
1d8dd6b3f12b ("kvm: x86/mmu: Support changed pte notifier in tdp MMU")
f8e144971c68 ("kvm: x86/mmu: Add access tracking for tdp_mmu")
063afacd8730 ("kvm: x86/mmu: Support invalidate range MMU notifier for TDP MMU")
bb18842e2111 ("kvm: x86/mmu: Add TDP MMU PF handler")
7d94531249a5 ("kvm: x86/mmu: Remove disallowed_hugepage_adjust shadow_walk_iterator arg")
faaf05b00aec ("kvm: x86/mmu: Support zapping SPTEs in the TDP MMU")
2f2fad0897cb ("kvm: x86/mmu: Add functions to handle changed TDP SPTEs")
02c00b3a2f7e ("kvm: x86/mmu: Allocate and free TDP MMU roots")
fe5db27d3601 ("kvm: x86/mmu: Init / Uninit the TDP MMU")
c9180b7291cf ("kvm: x86/mmu: Introduce tdp_iter")
5a9624affe7c ("KVM: mmu: extract spte.h and spte.c")
799a4190e734 ("kvm: x86/mmu: Separate making SPTEs from set_spte")
cc4674d0ded0 ("kvm: mmu: Separate making non-leaf sptes from link_shadow_page")
7dffecaf4eab ("KVM: x86: report negative values from wrmsr emulation to userspace")
66570e966dd9 ("kvm: x86: only provide PV features if enabled in guest's CPUID")
210dfd93ea3d ("kvm: x86: set wall_clock in kvm_write_wall_clock()")
5b9bb0ebbcdc ("kvm: x86: encapsulate wrmsr(MSR_KVM_SYSTEM_TIME) emulation in helper fn")
1a155254ff93 ("KVM: x86: Introduce MSR filtering")
3eb900173c71 ("KVM: x86: VMX: Prevent MSR passthrough when MSR access is denied")
fd6fa73d1337 ("KVM: x86: SVM: Prevent MSR passthrough when MSR access is denied")
476c9bd8e997 ("KVM: x86: Prepare MSR bitmaps for userspace tracked MSRs")
51de8151bd21 ("KVM: x86: Add infrastructure for MSR filtering")
1ae099540e8c ("KVM: x86: Allow deflecting unknown MSR accesses to user space")
d85a8034c016 ("KVM: VMX: Rename "find_msr_entry" to "vmx_find_uret_msr"")
1e7a483037e8 ("KVM: VMX: Rename "__find_msr_index" to "__vmx_find_uret_msr"")
e9bb1ae92d62 ("KVM: VMX: Rename vcpu_vmx's "save_nmsrs" to "nr_active_uret_msrs"")
fbc18007382c ("KVM: VMX: Rename vcpu_vmx's "nmsrs" to "nr_uret_msrs"")
eb3db1b13788 ("KVM: VMX: Rename the "shared_msr_entry" struct to "vmx_uret_msr"")
ce833b2324ba ("KVM: VMX: Prepend "MAX_" to MSR array size defines")
7e34fbd05c63 ("KVM: x86: Rename "shared_msrs" to "user_return_msrs"")
dcc7065170d7 ("KVM: x86/mmu: Hoist ITLB multi-hit workaround check up a level")
1d4a7372e149 ("KVM: x86/mmu: Rename 'hlevel' to 'level' in FNAME(fetch)")
3cf066127e87 ("KVM: x86/mmu: Capture requested page level before NX huge page workaround")
6c2fd34f5c79 ("KVM: x86/mmu: Move "huge page disallowed" calculation into mapping helpers")
127037591c84 ("KVM: x86/mmu: Bail early from final #PF handling on spurious faults")
c4371c2a682e ("KVM: x86/mmu: Return unique RET_PF_* values if the fault was fixed")
b44f50d87ce2 ("KVM: x86: hyper-v: Mention SynDBG CPUID leaves in api.rst")
9715092f8d7e ("KVM: X86: Move handling of INVPCID types to x86")
3f3393b3ce38 ("KVM: X86: Rename and move the function vmx_handle_memory_failure to x86.c")
830bd71f2c06 ("KVM: SVM: Remove set_cr_intercept, clr_cr_intercept and is_cr_intercept")
03bfeeb988a9 ("KVM: SVM: Change intercept_cr to generic intercepts")
c45ad7229d13 ("KVM: SVM: Introduce vmcb_(set_intercept/clr_intercept/_is_intercept)")
a90c1ed9f11d ("KVM: nSVM: Remove unused field")
f4c847a95654 ("KVM: SVM: refactor msr permission bitmap allocation")
