643e12da4a49 ("arm64: psci: Ignore DENIED CPUs")
bde33977bf24 ("arm64: use function_nocfi with __pa_symbol")
d22b115cbfbb ("arm64/kernel: Simplify __cpu_up() by bailing out early")
ebef746543fd ("arm64: smp: Treat unknown boot failures as being 'stuck in kernel'")
0e1645557d19 ("arm64: smp: Increase secondary CPU boot timeout value")
665547392012 ("arm64: smp: Mark expected switch fall-through")
f357b3a7e17a ("arm64: smp: Handle errors reported by the firmware")
66f16a24512f ("arm64: smp: Rework early feature mismatched detection")
68d23da4373a ("arm64: Kconfig: Re-jig CONFIG options for 52-bit VA")
67e7fdfcc682 ("arm64: mm: introduce 52-bit userspace support")
a96a33b1ca57 ("arm64: mm: Prevent mismatched 52-bit VA support")
e842dfb5a2d3 ("arm64: mm: Offset TTBR1 to allow 52-bit PTRS_PER_PGD")
363524d2b122 ("arm64: mm: Introduce DEFAULT_MAP_WINDOW")
693d5639b44a ("arm64/mm: Pass ttbr1 as a parameter to __enable_mmu()")
5ffdfaedfa0a ("arm64: mm: Support Common Not Private translations")
8f04e8e6e29c ("arm64: ssbd: Add support for PSTATE.SSBS rather than trapping to EL3")
d71be2b6c0e1 ("arm64: cpufeature: Detect SSBS and advertise to userspace")
86d0dd34eaff ("arm64: cpufeature: add feature for CRC32 instructions")
