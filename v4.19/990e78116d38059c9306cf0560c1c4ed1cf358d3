990e78116d38 ("block: loop: fix deadlock between open and remove")
6cc8e7430801 ("loop: scale loop device by introducing per device lock")
33ec3e53e7b1 ("loop: Don't change loop device under exclusive opener")
758a58d0bc67 ("loop: set GENHD_FL_NO_PART_SCAN after blkdev_reread_part()")
628bd8594709 ("loop: Fix double mutex_unlock(&loop_ctl_mutex) in loop_control_ioctl()")
c28445fa06a3 ("loop: Get rid of 'nested' acquisition of loop_ctl_mutex")
1dded9acf6dc ("loop: Avoid circular locking dependency between loop_ctl_mutex and bd_mutex")
0da03cab87e6 ("loop: Fix deadlock when calling blkdev_reread_part()")
85b0a54a82e4 ("loop: Move loop_reread_partitions() out of loop_ctl_mutex")
d57f3374ba48 ("loop: Move special partition reread handling in loop_clr_fd()")
c371077000f4 ("loop: Push loop_ctl_mutex down to loop_change_fd()")
757ecf40b7e0 ("loop: Push loop_ctl_mutex down to loop_set_fd()")
550df5fdacff ("loop: Push loop_ctl_mutex down to loop_set_status()")
4a5ce9ba5877 ("loop: Push loop_ctl_mutex down to loop_get_status()")
7ccd0791d985 ("loop: Push loop_ctl_mutex down into loop_clr_fd()")
a2505b799a49 ("loop: Split setting of lo_state from loop_clr_fd")
a13165441d58 ("loop: Push lo_ctl_mutex down into individual ioctls")
0a42e99b58a2 ("loop: Get rid of loop_index_mutex")
967d1dc144b5 ("loop: Fold __loop_release into loop_release")
310ca162d779 ("block/loop: Use global lock for ioctl() operation.")
