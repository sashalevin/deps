a379322022c0 ("mm: convert page_table_check_pte_set() to page_table_check_ptes_set()")
a3b837130b58 ("mm/page_table_check: remove unused parameter in [__]page_table_check_pmd_set")
1066293d426d ("mm/page_table_check: remove unused parameter in [__]page_table_check_pte_set")
931c38e16499 ("mm/page_table_check: remove unused parameter in [__]page_table_check_pud_clear")
1831414cd729 ("mm/page_table_check: remove unused parameter in [__]page_table_check_pmd_clear")
aa232204c468 ("mm/page_table_check: remove unused parameter in [__]page_table_check_pte_clear")
2f933eaf5bbf ("mm/page_table_check: remove unused parameters in page_table_check_set()")
c33c794828f2 ("mm: ptep_get() conversion")
c7ad08804fae ("mm/memory: handle_pte_fault() use pte_offset_map_nolock()")
3db82b9374ca ("mm/memory: allow pte_offset_map[_lock]() to fail")
895f5ee464cc ("mm/khugepaged: allow pte_offset_map[_lock]() to fail")
c9c1ee20ee84 ("mm/huge_memory: split huge pmd under one pte_offset_map()")
4b56069c95d6 ("mm/migrate_device: allow pte_offset_map_lock() to fail")
d850fa729873 ("mm/swapoff: allow pte_offset_map[_lock]() to fail")
f3cd4ab0aabf ("mm/madvise: clean up pte_offset_map_lock() scans")
04dee9e85cf5 ("mm/various: give up if pte_offset_map[_lock]() fails")
0d1c81edc61e ("mm/vmalloc: vmalloc_to_page() use pte_offset_kernel()")
7780d04046a2 ("mm/pagewalkers: ACTION_AGAIN if pte_offset_map_lock() fails")
2798bbe75b9c ("mm/page_vma_mapped: pte_offset_map_nolock() not pte_lockptr()")
90f43b0a13cd ("mm/page_vma_mapped: reformat map_pte() with less indentation")
