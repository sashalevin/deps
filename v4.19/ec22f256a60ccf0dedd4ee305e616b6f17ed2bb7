ec22f256a60c ("drm/i915/overlay: Stash the kernel context on initialisation")
2ccdf6a1c3f7 ("drm/i915: Pass intel_context to i915_request_create()")
6eee33e87f6d ("drm/i915: Introduce context->enter() and context->exit()")
254e11864a36 ("drm/i915: Verify the engine workarounds stick on application")
5d75dc2b0810 ("drm/i915: Teach intel_workarounds to use uncore mmio access")
b7404c7ecb38 ("drm/i915: Bump ready tasks ahead of busywaits")
9726920b7ea2 ("drm/i915: Only reset the pinned kernel contexts on resume")
de220cc21967 ("drm/i915: Consolidate the timeline->barrier")
b66ea2c2cf59 ("drm/i915: Use lockdep_pin_lock() over the construction of the request")
7881e6057586 ("drm/i915: Only emit one semaphore per request")
8b74594aa455 ("drm/i915: Split out i915_priolist_types into its own header")
3a891a626794 ("drm/i915: Move intel_engine_mask_t around for use by i915_request_types.h")
4319382e9b1b ("drm/i915: switch intel_uncore_forcewake_for_reg to intel_uncore")
5a0ba777098a ("drm/i915: add HAS_FORCEWAKE flag to uncore")
ea593dbba4c8 ("drm/i915: Allow contexts to share a single timeline across all engines")
b91715417244 ("drm/i915: Extend CONTEXT_CREATE to set parameters upon construction")
e0695db7298e ("drm/i915: Create/destroy VM (ppGTT) for use with contexts")
a679f58d0510 ("drm/i915: Flush pages on acquisition")
4daffb664a69 ("drm/i915: Stop storing the context name as the timeline name")
3e05531243d0 ("drm/i915: Stop storing ctx->user_handle")
7dc40713618c ("drm/i915: Introduce a mutex for file_priv->context_idr")
3aa9945a528e ("drm/i915: Separate GEM context construction and registration to userspace")
272c7e52302e ("drm/i915: reduce the dev_priv->uncore dance in uncore.c")
cb7ee69015aa ("drm/i915: make find_fw_domain work on intel_uncore")
f7de50278e5c ("drm/i915: make more uncore function work on intel_uncore")
3ceea6a1b4d2 ("drm/i915: use intel_uncore for all forcewake get/put")
f568eeee5355 ("drm/i915: use intel_uncore in fw get/put internal paths")
159367bb9e74 ("drm/i915: always use masks on FW regs")
fd79d93985e0 ("drm/i915/selftests: add test to verify get/put fw domains")
d315d4faf820 ("drm/i915/selftests: Provide stub reset functions")
4c5896dc4c67 ("drm/i915: Hold a reference to the active HW context")
206c2f812fee ("drm/i915: Lock the gem_context->active_list while dropping the link")
535d8d27c0e2 ("drm/i915: do not pass dev_priv to low-level forcewake functions")
85fddf0b0027 ("drm/i915: Introduce a context barrier callback")
0881954965e3 ("drm/i915: Introduce intel_context.pin_mutex for pin management")
95f697eb024d ("drm/i915: Make context pinning part of intel_context_ops")
c4d52feb2c46 ("drm/i915: Move over to intel_context_lookup()")
4dc84b77b077 ("drm/i915: Store the intel_context_ops in the intel_engine_cs")
39e2f501c1b4 ("drm/i915: Split struct intel_context definition to its own header")
7e3d9a59410d ("drm/i915: Track active engines within a context")
c6eeb4797eb9 ("drm/i915: Reduce presumption of request ordering for barriers")
604c37d76689 ("drm/i915: Refactor common code to load initial power context")
5861b013e2c7 ("drm/i915: Do a synchronous switch-to-kernel-context on idling")
2835f4f36b6a ("drm/i915/selftests: Improve switch-to-kernel-context checking")
50b022af5d6b ("drm/i915: Force GPU idle on suspend")
3d6062491658 ("drm/i915: Make I915_GEM_IDLE_TIMEOUT into a macro")
b146e5efe660 ("drm/i915: Pass around the intel_context")
103b76eeff2e ("drm/i915: Use i915_global_register()")
8a68d464366e ("drm/i915: Store the BIT(engine->id) as the engine's mask")
c8b502422bfe ("drm/i915: Remove last traces of exec-id (GEM_BUSY)")
