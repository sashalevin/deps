4cc79cbb01ef ("drm/i915/execlists: Drop promotion on unsubmit")
68fc728b01fc ("drm/i915: Downgrade NEWCLIENT to non-preemptive")
5a6ac10b17ff ("drm/i915/execlists: Don't apply priority boost for resets")
2ccdf6a1c3f7 ("drm/i915: Pass intel_context to i915_request_create()")
6eee33e87f6d ("drm/i915: Introduce context->enter() and context->exit()")
7ce99d24ed72 ("drm/i915: Expose the busyspin durations for i915_wait_request")
254e11864a36 ("drm/i915: Verify the engine workarounds stick on application")
5d75dc2b0810 ("drm/i915: Teach intel_workarounds to use uncore mmio access")
1863e3020ab5 ("drm/i915/execlists: Always reset the context's RING registers")
292ad25c22d9 ("drm/i915/guc: Implement reset locally")
7d4c75d9097a ("drm/i915: Prepare for larger CSB status FIFO size")
b7404c7ecb38 ("drm/i915: Bump ready tasks ahead of busywaits")
9726920b7ea2 ("drm/i915: Only reset the pinned kernel contexts on resume")
de220cc21967 ("drm/i915: Consolidate the timeline->barrier")
b66ea2c2cf59 ("drm/i915: Use lockdep_pin_lock() over the construction of the request")
7881e6057586 ("drm/i915: Only emit one semaphore per request")
8b74594aa455 ("drm/i915: Split out i915_priolist_types into its own header")
3a891a626794 ("drm/i915: Move intel_engine_mask_t around for use by i915_request_types.h")
baba6e572b38 ("drm/i915: take a reference to uncore in the engine and use it")
97a04e0d07c4 ("drm/i915: switch intel_wait_for_register to uncore")
d2d551c06f81 ("drm/i915: intel_wait_for_register_fw to uncore")
4319382e9b1b ("drm/i915: switch intel_uncore_forcewake_for_reg to intel_uncore")
a2b4abfc626b ("drm/i915: switch uncore mmio funcs to use intel_uncore")
5a0ba777098a ("drm/i915: add HAS_FORCEWAKE flag to uncore")
6cc5ca768825 ("drm/i915: rename raw reg access functions")
ea593dbba4c8 ("drm/i915: Allow contexts to share a single timeline across all engines")
b91715417244 ("drm/i915: Extend CONTEXT_CREATE to set parameters upon construction")
e0695db7298e ("drm/i915: Create/destroy VM (ppGTT) for use with contexts")
a679f58d0510 ("drm/i915: Flush pages on acquisition")
4daffb664a69 ("drm/i915: Stop storing the context name as the timeline name")
3e05531243d0 ("drm/i915: Stop storing ctx->user_handle")
7dc40713618c ("drm/i915: Introduce a mutex for file_priv->context_idr")
3aa9945a528e ("drm/i915: Separate GEM context construction and registration to userspace")
6ebc9692a7ad ("drm/i915: make raw access function work on uncore")
25286aaca9ce ("drm/i915: move regs pointer inside the uncore structure")
272c7e52302e ("drm/i915: reduce the dev_priv->uncore dance in uncore.c")
cb7ee69015aa ("drm/i915: make find_fw_domain work on intel_uncore")
f7de50278e5c ("drm/i915: make more uncore function work on intel_uncore")
3ceea6a1b4d2 ("drm/i915: use intel_uncore for all forcewake get/put")
f568eeee5355 ("drm/i915: use intel_uncore in fw get/put internal paths")
159367bb9e74 ("drm/i915: always use masks on FW regs")
fd79d93985e0 ("drm/i915/selftests: add test to verify get/put fw domains")
d315d4faf820 ("drm/i915/selftests: Provide stub reset functions")
4c5896dc4c67 ("drm/i915: Hold a reference to the active HW context")
206c2f812fee ("drm/i915: Lock the gem_context->active_list while dropping the link")
535d8d27c0e2 ("drm/i915: do not pass dev_priv to low-level forcewake functions")
9be8644a14c6 ("drm/i915/icl: split combo and mg pll disable")
036f8d567b6c ("drm/i915/icl: split pll enable in three steps")
d2ab5ebf46b4 ("drm/i915/icl: split combo and mg pll enable")
4b378c0672cc ("drm/i915: Consolidate reset-request debug message")
