ebcfc63d6bca ("mm: abstract THP allocation")
78fefd04c123 ("mm: memory: convert clear_huge_page() to folio_zero_user()")
15bde4abab73 ("mm: extend rmap flags arguments for folio_add_new_anon_rmap")
508758960b8d ("mm: swap: entirely map large folios found in swapcache")
29f252cdc293 ("mm: introduce arch_do_swap_page_nr() which allows restore metadata for nr pages")
15c0536fb57f ("mm: rmap: abstract updating per-node and per-memcg stats")
4f687281012e ("mm: do not update memcg stats for NR_{FILE/SHMEM}_PMDMAPPED")
7491f3f34891 ("mm/rmap: do not add fully unmapped large folio to deferred split list")
ec33687c6749 ("mm: add per-order mTHP anon_fault_alloc and anon_fault_fallback counters")
7b6ec181de37 ("hugetlb: convert hugetlb_no_page() to use struct vm_fault")
9b42fa16195f ("hugetlb: convert hugetlb_fault() to use struct vm_fault")
37641efaa3fa ("hugetlb: check for anon_vma prior to folio allocation")
9acad7ba3e25 ("hugetlb: use vmf_anon_prepare() instead of anon_vma_prepare()")
7dac0ec8fa3f ("hugetlb: pass struct vm_fault through to hugetlb_handle_userfault()")
0ca22723e3ff ("hugetlb: move vm_fault declaration to the top of hugetlb_fault()")
085ff35e7636 ("mm: memory: move mem_cgroup_charge() into alloc_anon_folio()")
21fff064a26d ("mm: memory: use nth_page() in clear/copy_subpage()")
e78a13fd16bb ("mm/rmap: rename COMPOUND_MAPPED to ENTIRELY_MAPPED")
b06dc281aa99 ("mm/rmap: introduce folio_remove_rmap_[pte|ptes|pmd]()")
84f0169e6c8a ("mm/rmap: remove page_add_anon_rmap()")
