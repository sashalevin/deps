6268f0a166eb ("mm: compaction: use the proper flag to determine watermarks")
e19a3f595ae4 ("mm/compaction: factor out code to test if we should run compaction for target order")
3cf049375290 ("mm: compaction: have compaction_suitable() return bool")
f98a497e1f16 ("mm: compaction: remove unnecessary is_via_compact_memory() checks")
e8606320e9af ("mm: compaction: refactor __compaction_suitable()")
cff387d6a294 ("mm: compaction: make compaction_zonelist_suitable return false when COMPACT_SUCCESS")
2b1a20c3afbc ("mm/compaction: move compaction_suitable's comment to right place")
01c0bfe061f3 ("mm: rename gfpflags_to_migratetype to gfp_migratetype for same convention")
97a225e69a1f ("mm/page_alloc: integrate classzone_idx and high_zoneidx")
3334a45eb9e2 ("mm/page_alloc: use ac->high_zoneidx for classzone_idx")
5644e1fbbfe1 ("mm/vmscan.c: fix data races using kswapd_classzone_idx")
a94b525241c0 ("mm/compaction.c: clear total_{migrate,free}_scanned before scanning a new zone")
33fce0113da2 ("mm/memory_hotplug.c: prevent memory leak when reusing pgdat")
dffcac2cb88e ("mm/vmscan.c: prevent useless kswapd loops")
5e1f0f098b46 ("mm, compaction: capture a page under direct compaction")
dbe2d4e4f12e ("mm, compaction: round-robin the order while searching the free lists for a target")
5a811889de10 ("mm, compaction: use free lists to quickly locate a migration target")
70b44595eafe ("mm, compaction: use free lists to quickly locate a migration source")
4469ab98477b ("mm, compaction: rename map_pages to split_map_pages")
40cacbcb3240 ("mm, compaction: remove unnecessary zone parameter in some instances")
