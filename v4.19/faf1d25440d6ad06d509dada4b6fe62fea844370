faf1d25440d6 ("loop: Clean up LOOP_SET_STATUS lo_flags handling")
62ab466ca881 ("loop: Move loop_set_status_from_info() and friends up")
0c3796c24459 ("loop: Factor out configuring loop from status")
b0bd158dd630 ("loop: Refactor loop_set_status() size calculation")
5795b6f5607f ("loop: Factor out setting loop device size")
083a6a50783e ("loop: Remove sector_t truncation checks")
7c5014b0987a ("loop: Call loop_config_discard() only after new config is applied")
56a85fd8376e ("loop: properly observe rotational flag of underlying device")
5db470e229e2 ("loop: drop caches if offset or block_size are changed")
c28445fa06a3 ("loop: Get rid of 'nested' acquisition of loop_ctl_mutex")
0da03cab87e6 ("loop: Fix deadlock when calling blkdev_reread_part()")
85b0a54a82e4 ("loop: Move loop_reread_partitions() out of loop_ctl_mutex")
d57f3374ba48 ("loop: Move special partition reread handling in loop_clr_fd()")
c371077000f4 ("loop: Push loop_ctl_mutex down to loop_change_fd()")
757ecf40b7e0 ("loop: Push loop_ctl_mutex down to loop_set_fd()")
550df5fdacff ("loop: Push loop_ctl_mutex down to loop_set_status()")
4a5ce9ba5877 ("loop: Push loop_ctl_mutex down to loop_get_status()")
7ccd0791d985 ("loop: Push loop_ctl_mutex down into loop_clr_fd()")
a2505b799a49 ("loop: Split setting of lo_state from loop_clr_fd")
a13165441d58 ("loop: Push lo_ctl_mutex down into individual ioctls")
0a42e99b58a2 ("loop: Get rid of loop_index_mutex")
967d1dc144b5 ("loop: Fold __loop_release into loop_release")
310ca162d779 ("block/loop: Use global lock for ioctl() operation.")
b1ab5fa309e6 ("block/loop: Don't grab "struct file" for vfs_getattr() operation.")
