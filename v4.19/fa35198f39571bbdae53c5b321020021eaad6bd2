fa35198f3957 ("fortify: Explicitly check bounds are compile-time constants")
311fb40aa056 ("fortify: Use SIZE_MAX instead of (size_t)-1")
d07c0acb4f41 ("fortify: Fix __compiletime_strlen() under UBSAN_BOUNDS_LOCAL")
dfbafa70bde2 ("string: Introduce strtomem() and strtomem_pad()")
281d0c962752 ("fortify: Add Clang support")
67ebc3ab4462 ("fortify: Make sure strlen() may still be used as a constant expression")
92df138a8d66 ("fortify: Use __diagnose_as() for better diagnostic coverage")
0a2b782a00f3 ("fortify: Make pointer arguments const")
f36114314136 ("fortify: Replace open-coded __gnu_inline attribute")
28e77cc1c068 ("fortify: Detect struct member overflows in memset() at compile-time")
938a000e3f9b ("fortify: Detect struct member overflows in memmove() at compile-time")
f68f2ff91512 ("fortify: Detect struct member overflows in memcpy() at compile-time")
95cadae320be ("fortify: strlen: Avoid shadowing previous locals")
4797632f4f1d ("string.h: Introduce memset_after() for wiping trailing members/padding")
bb95ebbe89a7 ("lib: Introduce CONFIG_MEMCPY_KUNIT_TEST")
be58f7103700 ("fortify: Add compile-time FORTIFY_SOURCE tests")
3009f891bb9f ("fortify: Allow strlen() and strnlen() to pass compile-time known lengths")
369cd2165d7b ("fortify: Prepare to improve strnlen() and strlen() warnings")
072af0c638dc ("fortify: Fix dropped strcpy() compile-time write overflow check")
a52f8a59aef4 ("fortify: Explicitly disable Clang support")
