dbc651836372 ("drm/i915: Convert some more bits to use engine mmio accessors")
632c7ad6f450 ("drm/i915/icl: Switch to using 12 deep CSB status FIFO")
7d4c75d9097a ("drm/i915: Prepare for larger CSB status FIFO size")
baba6e572b38 ("drm/i915: take a reference to uncore in the engine and use it")
97a04e0d07c4 ("drm/i915: switch intel_wait_for_register to uncore")
d2d551c06f81 ("drm/i915: intel_wait_for_register_fw to uncore")
a2b4abfc626b ("drm/i915: switch uncore mmio funcs to use intel_uncore")
6cc5ca768825 ("drm/i915: rename raw reg access functions")
6ebc9692a7ad ("drm/i915: make raw access function work on uncore")
25286aaca9ce ("drm/i915: move regs pointer inside the uncore structure")
272c7e52302e ("drm/i915: reduce the dev_priv->uncore dance in uncore.c")
cb7ee69015aa ("drm/i915: make find_fw_domain work on intel_uncore")
f7de50278e5c ("drm/i915: make more uncore function work on intel_uncore")
3ceea6a1b4d2 ("drm/i915: use intel_uncore for all forcewake get/put")
f568eeee5355 ("drm/i915: use intel_uncore in fw get/put internal paths")
159367bb9e74 ("drm/i915: always use masks on FW regs")
fd79d93985e0 ("drm/i915/selftests: add test to verify get/put fw domains")
535d8d27c0e2 ("drm/i915: do not pass dev_priv to low-level forcewake functions")
9be8644a14c6 ("drm/i915/icl: split combo and mg pll disable")
036f8d567b6c ("drm/i915/icl: split pll enable in three steps")
d2ab5ebf46b4 ("drm/i915/icl: split combo and mg pll enable")
39e2f501c1b4 ("drm/i915: Split struct intel_context definition to its own header")
7e3d9a59410d ("drm/i915: Track active engines within a context")
cf4331dd3975 ("drm/i915: Move find_active_request() to the engine")
8a68d464366e ("drm/i915: Store the BIT(engine->id) as the engine's mask")
c8b502422bfe ("drm/i915: Remove last traces of exec-id (GEM_BUSY)")
62acc7e892ef ("drm/i915: Stop capturing semaphore registers for gen6/7 GPU hangs")
f14c0d9fd871 ("drm/i915: Just check the vebox IIR regardless")
510a75a5d2b8 ("drm/i915/icl: move MG pll hw_state readout")
e88619646971 ("drm/i915: Use HW semaphores for inter-engine synchronisation on gen8+")
ebece7539242 ("drm/i915: Keep timeline HWSP allocated until idle across the system")
3ef7114982b8 ("drm/i915: Introduce i915_timeline.mutex")
b5773a3616d1 ("drm/i915/execlists: Suppress mere WAIT preemption")
13f1bfd3b332 ("drm/i915: Make object/vma allocation caches global")
32eb6bcfdda9 ("drm/i915: Make request allocation caches global")
44f8b8022d4c ("Revert "drm/i915: Avoid waking the engines just to check if they are idle"")
2d5eaad007d9 ("drm/i915: Compute the global scheduler caps")
0b702dca2658 ("drm/i915: Avoid waking the engines just to check if they are idle")
b300fde8965f ("drm/i915: Remove i915_request.global_seqno")
8892f47742ea ("drm/i915: Remove access to global seqno in the HWSP")
89531e7d8ee8 ("drm/i915: Replace global_seqno with a hangcheck heartbeat seqno")
d0aa694b9239 ("drm/i915/pmu: Always sample an active ringbuffer")
49a630b00bac ("drm/i915: Enable and Disable of HDCP2.2")
09d56393c1d8 ("drm/i915: hdcp1.4 CP_IRQ handling and SW encryption tracking")
9055aac76589 ("drm/i915: MEI interface implementation")
04707f971636 ("drm/i915: Initialize HDCP2.2")
4c719c256a0f ("drm/i915: Gathering the HDCP1.4 routines together")
c41166f9a145 ("drm/i915: Beware temporary wedging when determining -EIO")
d0781a89c06f ("Merge drm/drm-next into drm-intel-next-queued")
