579a6633b8f7 ("s390: Rename GCC_ASM_FLAG_OUTPUT_BROKEN to CC_ASM_FLAG_OUTPUT_BROKEN")
e7583c5f8d0e ("s390/asm: Helper macros for flag output operand handling")
0b6de9aec285 ("s390/cmpxchg: Provide arch_try_cmpxchg()")
febe950dbfb4 ("arch: Remove cmpxchg_double")
6d12c8d308e6 ("percpu: Wire up cmpxchg128")
c5c0ba953b8c ("percpu: Add {raw,this}_cpu_try_cmpxchg()")
8c8b096a23d1 ("instrumentation: Wire up cmpxchg128()")
b23e139d0b66 ("arch: Introduce arch_{,try_}_cmpxchg128{,_local}()")
ec570320b09f ("locking/atomic: Correct (cmp)xchg() instrumentation")
e6ce9d741163 ("locking/atomic: Add generic try_cmpxchg{,64}_local() support")
e5ab9eff46b0 ("atomics: Provide atomic_add_negative() variants")
031af50045ea ("arm64: cmpxchg_double*: hazard against entire exchange variable")
bce5a1e8a340 ("x86/mem: Move memmove to out of line assembler")
78f6f5c994ed ("arm64: atomic: always inline the assembly")
b2c3ccbd0011 ("arm64: atomics: remove LL/SC trampolines")
c2df0a6af177 ("locking/atomic/x86: Introduce arch_try_cmpxchg64")
0aa7be05d83c ("locking/atomic: Add generic try_cmpxchg64 support")
dc1b4df09acd ("atomics: Fix atomic64_{read_acquire,set_release} fallbacks")
