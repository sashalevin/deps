aeb904f6b9f1 ("KVM: x86: Refactor can_emulate_instruction() return to be more expressive")
cb49631ad111 ("KVM: SVM: Don't inject #UD if KVM attempts to skip SEV guest insn")
6ef88d6e36c2 ("KVM: SVM: Re-inject INT3/INTO instead of retrying the instruction")
3741aec4c38f ("KVM: SVM: Stuff next_rip on emulated INT3 injection if NRIPS is supported")
cd9e6da8048c ("KVM: SVM: Unwind "speculative" RIP advancement if INTn injection "fails"")
00f08d99dd7d ("KVM: nSVM: Sync next_rip field from vmcb12 to vmcb02")
1d5a1b5860ed ("KVM: x86: nSVM: correctly virtualize LBR msrs when L2 is running")
db663af4a001 ("kvm: x86: SVM: use vmcb* instead of svm->vmcb where it makes sense")
b9f3973ab3a8 ("KVM: x86: nSVM: implement nested VMLOAD/VMSAVE")
23e5092b6e2a ("KVM: SVM: Rename hook implementations to conform to kvm_x86_ops' names")
e27bc0440ebd ("KVM: x86: Rename kvm_x86_ops pointers to align w/ preferred vendor names")
068f7ea61895 ("KVM: SVM: improve split between svm_prepare_guest_switch and sev_es_prepare_guest_switch")
e1779c2714c3 ("KVM: x86: nSVM: fix potential NULL derefernce on nested migration")
cdf85e0c5dc7 ("KVM: SVM: Don't kill SEV guest if SMAP erratum triggers in usermode")
3280cc22aea7 ("KVM: SVM: Don't apply SEV+SMAP workaround on code fetch or PT access")
04c40f344def ("KVM: SVM: Inject #UD on attempted emulation for SEV guest w/o insn buffer")
4d31d9eff244 ("KVM: x86: Pass emulation type to can_emulate_instruction()")
31c25585695a ("Revert "KVM: SVM: avoid infinite loop on NPF from bad address"")
55467fcd55b8 ("KVM: SVM: Never reject emulation due to SMAP errata for !SEV guests")
54744e17f031 ("KVM: SVM: Move svm_hardware_setup() and its helpers below svm_x86_ops")
