b936d3eb92b7 ("KVM: VMX: Unconditionally clear CPUID.INVPCID if !CPUID.PCID")
5ffec6f910dc ("KVM: x86: Handle INVPCID CPUID adjustment in VMX code")
6c7ea4b56bfe ("KVM: x86: Handle MPX CPUID adjustment in VMX code")
160b486f65ff ("KVM: x86: Drop explicit @func param from ->set_supported_cpuid()")
7f5581f59298 ("KVM: x86: Use supported_xcr0 to detect MPX support")
cfc481810c90 ("KVM: x86: Calculate the supported xcr0 mask at load time")
0eee8f9d9d3b ("KVM: x86: Use common loop iterator when handling CPUID 0xD.N")
e53c95e8d41e ("KVM: x86: Encapsulate CPUID entries and metadata in struct")
c862903963bb ("KVM: x86: Refactor CPUID 0x4 and 0x8000001d handling")
74fa0bc7f083 ("KVM: x86: Hoist loop counter and terminator to top of __do_cpuid_func()")
aa10a7dc8858 ("KVM: x86: Consolidate CPUID array max num entries checking")
aceac6e5700f ("KVM: x86: Drop the explicit @index from do_cpuid_7_mask()")
87849b1ccbd4 ("KVM: x86: Clean up CPUID 0x7 sub-leaf loop")
8b2fc445a761 ("KVM: x86: Refactor CPUID 0xD.N sub-leaf entry creation")
91001d403ad3 ("KVM: x86: Warn on zero-size save state for valid CPUID 0xD.N sub-leaf")
1893c9415ae8 ("KVM: x86: Check for CPUID 0xD.N support before validating array size")
3dc4a9cf05e5 ("KVM: x86: Move CPUID 0xD.1 handling out of the index>0 loop")
0fc62671876c ("KVM: x86: Check userspace CPUID array size after validating sub-leaf")
d5a661d19df1 ("KVM: x86: Clean up error handling in kvm_dev_ioctl_get_cpuid()")
8b86079cc339 ("KVM: x86: Simplify handling of Centaur CPUID leafs")
619a17f11069 ("KVM: x86: Refactor loop around do_cpuid_func() to separate helper")
68c9a46e9ee8 ("KVM: x86: Return -E2BIG when KVM_GET_SUPPORTED_CPUID hits max entries")
cc7f5577adfc ("KVM: SVM: Inhibit APIC virtualization for X2APIC guest")
e2ed4078a6ef ("kvm: i8254: Deactivate APICv when using in-kernel PIT re-injection mode.")
f3515dc3bef8 ("svm: Temporarily deactivate AVIC during ExtINT handling")
9a0bf0543069 ("svm: Deactivate AVIC when launching guest with nested SVM support")
f4fdc0a2edf4 ("kvm: x86: hyperv: Use APICv update request interface")
6c3e4422dd20 ("svm: Add support for dynamic APICv")
ef8efd7a15bb ("kvm: x86: Introduce APICv x86 ops for checking APIC inhibit reasons")
dcbcfa287e96 ("KVM: svm: avic: Add support for dynamic setup/teardown of virtual APIC backing page")
8937d762396d ("kvm: x86: svm: Add support to (de)activate posted interrupts")
8df14af42f00 ("kvm: x86: Add support for dynamic APICv activation")
7e3e67a98701 ("KVM: x86: remove get_enable_apicv from kvm_x86_ops")
4e19c36f2df8 ("kvm: x86: Introduce APICv inhibit reason bits")
95a0d01eef7a ("KVM: x86: Move all vcpu init code into kvm_arch_vcpu_create()")
5f73db112e59 ("KVM: x86: Move guts of kvm_arch_vcpu_setup() into kvm_arch_vcpu_create()")
e529ef66e6b5 ("KVM: Move vcpu alloc and init invocation to common code")
4543bdc08857 ("KVM: Introduce kvm_vcpu_destroy()")
d2423b347de4 ("KVM: x86: Invoke kvm_vcpu_uninit() immediately prior to freeing vcpu")
aaf532c57927 ("KVM: MIPS: Invoke kvm_vcpu_uninit() immediately prior to freeing vcpu")
a2017f17fa17 ("KVM: s390: Invoke kvm_vcpu_init() before allocating sie_page")
321f8ee559d6 ("KVM: s390: Move guts of kvm_arch_vcpu_init() into kvm_arch_vcpu_create()")
897cc38eaab9 ("KVM: Add kvm_arch_vcpu_precreate() to handle pre-allocation issues")
50b143e1b3cf ("KVM: x86: Drop kvm_arch_vcpu_free()")
208050dac5ef ("KVM: x86: Remove spurious clearing of async #PF MSR")
9d979c7e6ff4 ("KVM: x86: Remove spurious kvm_mmu_unload() from vcpu destruction path")
4b8fff780b07 ("KVM: arm: Drop kvm_arch_vcpu_free()")
d5279f3a882c ("KVM: PPC: Drop kvm_arch_vcpu_free()")
47d51e5eb5fe ("KVM: MIPS: Drop kvm_arch_vcpu_free()")
5233009fab8e ("KVM: MIPS: Use kvm_vcpu_cache to allocate vCPUs")
