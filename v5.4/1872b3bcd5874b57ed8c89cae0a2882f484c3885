1872b3bcd587 ("mm: memcg: use READ_ONCE()/WRITE_ONCE() to access stock->nr_pages")
f785a8f21a9c ("mm: memcg: use READ_ONCE()/WRITE_ONCE() to access stock->cached")
af9a3b69e84b ("mm/memcg: opencode the inner part of obj_cgroup_uncharge_pages() in drain_obj_stock()")
e74d225910ec ("mm: memcontrol: introduce obj_cgroup_{un}charge_pages")
9f38f03ae8d5 ("mm: memcontrol: slab: fix obtain a reference to a freeing memcg")
eefbfa7fd678 ("mm: memcg/slab: fix use after free in obj_cgroup_charge")
d797b7d05405 ("mm: memcg/slab: simplify memcg cache creation")
9855609bde03 ("mm: memcg/slab: use a single set of kmem_caches for all accounted allocations")
0f876e4dc55d ("mm: memcg/slab: move memcg_kmem_bypass() to memcontrol.h")
f2fe7b09a52b ("mm: memcg/slab: charge individual slab objects instead of pages")
964d4bd370d5 ("mm: memcg/slab: save obj_cgroup for non-root slab objects")
286e04b8ed7a ("mm: memcg/slab: allocate obj_cgroups for non-root slab pages")
bf4f059954dc ("mm: memcg/slab: obj_cgroup API")
1a3e1f40962c ("mm: memcontrol: decouple reference counting from page accounting")
4138fdfc8b5d ("mm: slub: implement SLUB version of obj_to_index()")
d42f3245c7e2 ("mm: memcg: convert vmstat slab counters to bytes")
ea426c2a7de8 ("mm: memcg: prepare for byte-sized vmstat items")
eedc4e5a142c ("mm: memcg: factor out memcg- and lruvec-level changes out of __mod_lruvec_state()")
d648bcc7fe65 ("mm: kmem: make memcg_kmem_enabled() irreversible")
d38a2b7a9c93 ("mm: memcg/slab: fix memory leak at non-root kmem_cache destroy")
