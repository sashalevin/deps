7ee4be9c621e ("bcachefs: fix restart handling in bch2_do_invalidates_work()")
64ee1431cc7d ("bcachefs: Discard, invalidate workers are now per device")
504794067fc2 ("bcachefs: Replace bare EEXIST with private error codes")
2e9940d4a195 ("bcachefs: Handle cached data LRU wraparound")
2c91ab7262e6 ("bcachefs: bch2_dev_get_ioref() checks for device not present")
465bf6f42aac ("bcachefs: bch2_dev_get_ioref2(); io_read.c")
91ffdecfc796 ("bcachefs: bch2_dev_get_ioref2(); debug.c")
6212ea24975f ("bcachefs: bch2_dev_get_ioref2(); journal_io.c")
48af85392599 ("bcachefs: bch2_dev_get_ioref2(); io_write.c")
690f7cdf732a ("bcachefs: bch2_dev_get_ioref2(); btree_io.c")
466298e2f6df ("bcachefs: bch2_dev_get_ioref2(); backpointers.c")
0e57996c6964 ("bcachefs: bch2_dev_get_ioref2(); alloc_background.c")
f4301b635a2e ("bcachefs: kill bch2_dev_bkey_exists() in discard_one_bucket_fast()")
3858aa4268b2 ("bcachefs: ptr_stale() -> dev_ptr_stale()")
1f2f92ec3f2e ("bcachefs: PTR_BUCKET_POS() now takes bch_dev")
fa6cce09f070 ("bcachefs: bch2_dev_iterate()")
07d7c4da7bd1 ("bcachefs: bch2_bucket_ref_update() now takes bch_dev")
9b3059a1b3e9 ("bcachefs: bch2_check_alloc_key() -> bch2_dev_tryget_noerror()")
b07eb8252fb1 ("bcachefs: bch2_dev_tryget()")
552aa5486579 ("bcachefs: Debug asserts for ca->ref")
