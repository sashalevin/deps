5b61178cd2fd ("KVM: VMX: Mark VCPU_EXREG_CR3 dirty when !CR0_PG -> CR0_PG if EPT + !URG")
32437c2aea42 ("KVM: VMX: Process CR0.PG side effects after setting CR0 assets")
470750b34255 ("KVM: nVMX: Do not clear CR3 load/store exiting bits if L1 wants 'em")
c834fd7fc130 ("KVM: VMX: Fold ept_update_paging_mode_cr0() back into vmx_set_cr0()")
ee5a5584cba3 ("KVM: VMX: Invert handling of CR0.WP for EPT without unrestricted guest")
bddd82d19e2e ("KVM: nVMX: KVM needs to unset "unrestricted guest" VM-execution control in vmcs02 if vmcs12 doesn't set it")
a0c134347baf ("KVM: VMX: introduce vmx_need_pf_intercept")
fa71e9527f6a ("KVM: VMX: Use KVM_POSSIBLE_CR*_GUEST_BITS to initialize guest/host masks")
7c83d096aed0 ("KVM: x86: Mark CR4.TSD as being possibly owned by the guest")
bd31fe495d0d ("KVM: VMX: Add proper cache tracking for CR0")
f98c1e77127d ("KVM: VMX: Add proper cache tracking for CR4")
8791585837f6 ("KVM: VMX: Cache vmcs.EXIT_INTR_INFO using arch avail_reg flags")
5addc235199f ("KVM: VMX: Cache vmcs.EXIT_QUALIFICATION using arch avail_reg flags")
e5d03de5937e ("KVM: nVMX: Reset register cache (available and dirty masks) on VMCS switch")
2c1f3323802e ("KVM: nVMX: Split VM-Exit reflection logic into L0 vs. L1 wants")
236871b6744a ("KVM: nVMX: Move nested VM-Exit tracepoint into nested_vmx_reflect_vmexit()")
fbdd50250396 ("KVM: nVMX: Move VM-Fail check out of nested_vmx_exit_reflected()")
7b7bd87dbd6a ("KVM: nVMX: Uninline nested_vmx_reflect_vmexit(), i.e. move it to nested.c")
789afc5ccd4e ("KVM: nVMX: Move reflection check into nested_vmx_reflect_vmexit()")
