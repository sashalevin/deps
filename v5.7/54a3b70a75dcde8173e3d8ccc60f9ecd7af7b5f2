54a3b70a75dc ("x86/entry: KVM: Use dedicated VMX NMI entry for 32-bit kernels too")
db215756ae59 ("KVM: x86: More precisely identify NMI from guest when handling PMI")
73cd107b9685 ("KVM: x86: Drop current_vcpu for kvm_running_vcpu + kvm_arch_vcpu variable")
b9f5621c9547 ("perf/core: Rework guest callbacks to prepare for static_call support")
f4b027c5c819 ("KVM: x86: Register Processor Trace interrupt hook iff PT enabled in guest")
5c7df80e2ce4 ("KVM: x86: Register perf callbacks after calling vendor's hardware_setup()")
ff083a2d972f ("perf: Protect perf_guest_cbs with RCU")
a217a6593cec ("KVM/VMX: Invoke NMI non-IST entry instead of IST entry")
63129754178c ("KVM: SVM: Pass struct kvm_vcpu to exit handlers (and many, many other places)")
2a32a77cefa6 ("KVM: SVM: merge update_cr0_intercept into svm_set_cr0")
11f0cbf0c605 ("KVM: nSVM: Trace VM-Enter consistency check failures")
6906e06db9b0 ("KVM: nSVM: Add missing checks for reserved bits to svm_set_nested_state()")
c08f390a75c1 ("KVM: nSVM: only copy L1 non-VMLOAD/VMSAVE data in svm_set_nested_state()")
9e8f0fbfff1a ("KVM: nSVM: rename functions and variables according to vmcbXY nomenclature")
193015adf40d ("KVM: nSVM: Track the ASID generation of the vmcb vmrun through the vmcb")
af18fa775d07 ("KVM: nSVM: Track the physical cpu of the vmcb vmrun through the vmcb")
4995a3685f1b ("KVM: SVM: Use a separate vmcb for the nested L2 guest")
6d1b867d0456 ("KVM: SVM: Don't strip the C-bit from CR2 on #PF interception")
43c11d91fb1e ("KVM: x86: to track if L1 is running L2 VM")
6b5b368fccd7 ("KVM: arm64: Turn kvm_arm_support_pmu_v3() into a static key")
