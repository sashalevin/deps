0fef2a1212f1 ("rtnetlink: Call rtnl_link_get_net_capable() in rtnl_newlink().")
43c7ce69d28e ("rtnetlink: Protect struct rtnl_link_ops with SRCU.")
0d3008d1a9ae ("rtnetlink: Move ops->validate to rtnl_newlink().")
331fe31c50ef ("rtnetlink: Move rtnl_link_ops_get() and retry to rtnl_newlink().")
7fea1a8cb4df ("rtnetlink: Move simple validation from __rtnl_newlink() to rtnl_newlink().")
cc47bcdf0d2e ("rtnetlink: Factorise do_setlink() path from __rtnl_newlink().")
a5838cf9b2ee ("rtnetlink: Call validate_linkmsg() in do_setlink().")
fa8ef258da2b ("rtnetlink: Allocate linkinfo[] as struct rtnl_newlink_tbs.")
3e41af90767d ("rtnetlink: use xarray iterator to implement rtnl_dump_ifinfo()")
89da780aa4c7 ("rtnetlink: move validate_linkmsg out of do_setlink")
65d6914e253f ("rtnetlink: add the missing IFLA_GRO_ tb check in validate_linkmsg")
fef5b228dd38 ("rtnetlink: move IFLA_GSO_ tb check to validate_linkmsg")
9eefedd58ae1 ("net: add gso_ipv4_max_size and gro_ipv4_max_size per device")
dca56c3038c3 ("net: expose devlink port over rtnetlink")
d88e136cab37 ("rtnetlink: Honour NLM_F_ECHO flag in rtnl_newlink_create")
1d997f101307 ("rtnetlink: pass netlink message header and portid to rtnl_configure_link()")
7e6e1b57162e ("rtnetlink: advertise allmulti counter")
7b2d9a1a50ec ("net: devlink: introduce nested devlink entity for line card")
755cfa69c4ec ("net: devlink: add unlocked variants of devlink_sb*() functions")
7715023aa51f ("net: devlink: use helpers to work with devlink->lock mutex")
