bcd51a3c679d ("hugetlb: lazy page table copies in fork()")
c56d1b62cce8 ("mm/shmem: handle uffd-wp during fork()")
b756a3b5e7ea ("mm: device exclusive memory access")
9a5cc85c4074 ("mm/memory.c: allow different return codes for copy_nonpresent_pte()")
6b49bf6ddbb0 ("mm: rename migrate_pgmap_owner")
af5cdaf82238 ("mm: remove special swap entry functions")
8f34f1eac382 ("mm/userfaultfd: fix uffd-wp special cases for fork()")
b3807a91aca7 ("mm: page_vma_mapped_walk(): add a level of indentation")
e2e1d4076c77 ("mm: page_vma_mapped_walk(): prettify PVMW_MIGRATION block")
3306d3119cea ("mm: page_vma_mapped_walk(): use pmde for *pvmw->pmd")
f003c03bd29e ("mm: page_vma_mapped_walk(): use page for pvmw->page")
494334e43c16 ("mm/thp: fix vma_address() if virtual address below file offset")
732ed55823fc ("mm/thp: try_to_unmap() use TTU_SYNC for safe splitting")
99fa8a48203d ("mm/thp: fix __split_huge_pmd_locked() on shmem migration entry")
ffc90cbb2970 ("mm, thp: use head page in __migration_entry_wait()")
a44f89dc6c5f ("mm/huge_memory.c: use helper function migration_entry_to_page()")
97a7e4733b9b ("mm: introduce page_needs_cow_for_dma() for deciding whether cow")
374437a274e2 ("mm/pgtable-generic.c: optimize the VM_BUG_ON condition in pmdp_huge_clear_flush()")
c045c72ccde3 ("mm/pgtable-generic.c: simplify the VM_BUG_ON condition in pmdp_huge_clear_flush()")
5e5dda81a0df ("mm/migrate.c: optimize migrate_vma_pages() mmu notifier")
