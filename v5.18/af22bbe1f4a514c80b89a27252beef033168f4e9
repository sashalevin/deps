af22bbe1f4a5 ("virtio: create admin queues alongside other virtqueues")
7e5d9f556edc ("virtio: push out code to vp_avq_index()")
4199107e3912 ("virtio_pci_modern: treat vp_dev->admin_vq.info.vq pointer as static")
ef775b2627c8 ("virtio_pci: pass vector policy enum to vp_find_vqs_msix()")
de128f3f6317 ("virtio_pci: push out single vq find code to vp_find_one_vq_msix()")
ad9a12576bcc ("virtio_pci: convert vp_*find_vqs() ops to find_vqs_info()")
c8fae27d141a ("virtio-pci: Check if is_avq is NULL")
89875151fccd ("virtio: delete vq in vp_find_vqs_msix() when request_irq() fails")
f51e146f1e5c ("virtio-pci: Initialize the supported admin commands")
92792ac752aa ("virtio-pci: Introduce admin command sending function")
fd27ef6b44be ("virtio-pci: Introduce admin virtqueue")
3503895788d4 ("virtio_pci: move structure to a header")
e0592acd1ef2 ("virtio_pci: add check for common cfg size")
327e0ab32cd0 ("virtio_pci: add build offset check for the new common cfg items")
a5d7df87843d ("virtio: kdoc for struct virtio_pci_modern_device")
061b39fdfe7f ("virtio_pci: fix the common cfg map size")
5d7d82d39eb4 ("virtio: allow caller to override device DMA mask in vp_modern")
a37c0191acbd ("virtio: allow caller to override device id in vp_modern")
af8ececda185 ("virtio: add VIRTIO_F_NOTIFICATION_DATA feature support")
b66ead2d0eca ("virtio_pci: modify ENOENT to EINVAL")
