447112d7edd7 ("KVM: VMX: Snapshot LBR capabilities during module initialization")
098f4c061ea1 ("KVM: x86/pmu: Disallow legacy LBRs if architectural LBRs are available")
bec46859fb9d ("KVM: x86: Track supported PERF_CAPABILITIES in kvm_caps")
0b9ca98b7229 ("perf/x86/core: Zero @lbr instead of returning -1 in x86_perf_get_lbr() stub")
b333b8ebb85d ("KVM: VMX: Ignore guest CPUID for host userspace writes to DEBUGCTL")
18e897d213cb ("KVM: VMX: Fold vmx_supported_debugctl() into vcpu_supported_debugctl()")
145dfad998ea ("KVM: VMX: Advertise PMU LBRs if and only if perf supports LBRs")
6348aafa8d24 ("KVM: VMX: Adjust number of LBR records for PERF_CAPABILITIES at refresh")
7de8e5b6b139 ("KVM: VMX: Use proper type-safe functions for vCPU => LBRs helpers")
9389d5774aca ("Revert "KVM: nVMX: Expose load IA32_PERF_GLOBAL_CTRL VM-{Entry,Exit} control"")
b663f0b5f3d6 ("KVM: VMX: Add helper to check if the guest PMU has PERF_GLOBAL_CTRL")
3f7999b988bd ("KVM: VMX: Use vcpu_get_perf_capabilities() to get guest-visible value")
545feb96c052 ("Revert "KVM: x86: always allow host-initiated writes to PMU MSRs"")
9fc222967a39 ("KVM: x86: Give host userspace full control of MSR_IA32_MISC_ENABLES")
6ef25aa0a961 ("KVM: x86/pmu: Restrict advanced features based on module enable_pmu")
